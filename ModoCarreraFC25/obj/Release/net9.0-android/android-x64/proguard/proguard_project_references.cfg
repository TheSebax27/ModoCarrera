# ACW for ModoCarreraFC25
# ACW for GoogleGson
-keep class com.google.gson.FieldAttributes
-keepclassmembers class com.google.gson.FieldAttributes {
   <init>(...);
   *** getAnnotations(...);
   *** getDeclaredClass(...);
   *** getDeclaredType(...);
   *** getDeclaringClass(...);
   *** getName(...);
   *** getAnnotation(...);
   *** hasModifier(...);
}

-keep class com.google.gson.FieldNamingPolicy
-keepclassmembers class com.google.gson.FieldNamingPolicy {
   *** valueOf(...);
   *** values(...);
   *** translateName(...);
}

-keep class com.google.gson.FieldNamingPolicy
-keepclassmembers class com.google.gson.FieldNamingPolicy {
   *** translateName(...);
}

-keep class com.google.gson.FormattingStyle
-keepclassmembers class com.google.gson.FormattingStyle {
   *** getIndent(...);
   *** getNewline(...);
   *** usesSpaceAfterSeparators(...);
   *** withIndent(...);
   *** withNewline(...);
   *** withSpaceAfterSeparators(...);
}

-keep class com.google.gson.Gson
-keepclassmembers class com.google.gson.Gson {
   <init>(...);
   *** fieldNamingStrategy(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJson(...);
   *** getAdapter(...);
   *** getAdapter(...);
   *** getDelegateAdapter(...);
   *** htmlSafe(...);
   *** newBuilder(...);
   *** newJsonReader(...);
   *** newJsonWriter(...);
   *** serializeNulls(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJson(...);
   *** toJsonTree(...);
   *** toJsonTree(...);
}

-keep class com.google.gson.GsonBuilder
-keepclassmembers class com.google.gson.GsonBuilder {
   <init>(...);
   *** addDeserializationExclusionStrategy(...);
   *** addReflectionAccessFilter(...);
   *** addSerializationExclusionStrategy(...);
   *** create(...);
   *** disableHtmlEscaping(...);
   *** disableInnerClassSerialization(...);
   *** disableJdkUnsafe(...);
   *** enableComplexMapKeySerialization(...);
   *** excludeFieldsWithModifiers(...);
   *** excludeFieldsWithoutExposeAnnotation(...);
   *** generateNonExecutableJson(...);
   *** registerTypeAdapter(...);
   *** registerTypeAdapterFactory(...);
   *** registerTypeHierarchyAdapter(...);
   *** serializeNulls(...);
   *** serializeSpecialFloatingPointValues(...);
   *** setDateFormat(...);
   *** setDateFormat(...);
   *** setExclusionStrategies(...);
   *** setFieldNamingPolicy(...);
   *** setFieldNamingStrategy(...);
   *** setFormattingStyle(...);
   *** setLongSerializationPolicy(...);
   *** setNumberToNumberStrategy(...);
   *** setObjectToNumberStrategy(...);
   *** setPrettyPrinting(...);
   *** setStrictness(...);
   *** setVersion(...);
}

-keep class com.google.gson.ExclusionStrategy
-keepclassmembers class com.google.gson.ExclusionStrategy {
}

-keep class com.google.gson.FieldNamingStrategy
-keepclassmembers class com.google.gson.FieldNamingStrategy {
}

-keep class com.google.gson.InstanceCreator
-keepclassmembers class com.google.gson.InstanceCreator {
}

-keep class com.google.gson.JsonDeserializationContext
-keepclassmembers class com.google.gson.JsonDeserializationContext {
}

-keep class com.google.gson.JsonDeserializer
-keepclassmembers class com.google.gson.JsonDeserializer {
}

-keep class com.google.gson.JsonSerializationContext
-keepclassmembers class com.google.gson.JsonSerializationContext {
}

-keep class com.google.gson.JsonSerializer
-keepclassmembers class com.google.gson.JsonSerializer {
}

-keep class com.google.gson.ReflectionAccessFilter$FilterResult
-keepclassmembers class com.google.gson.ReflectionAccessFilter$FilterResult {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.ReflectionAccessFilter
-keepclassmembers class com.google.gson.ReflectionAccessFilter {
}

-keep class com.google.gson.ReflectionAccessFilter
-keepclassmembers class com.google.gson.ReflectionAccessFilter {
}

-keep class com.google.gson.ReflectionAccessFilter
-keepclassmembers class com.google.gson.ReflectionAccessFilter {
}

-keep class com.google.gson.ToNumberStrategy
-keepclassmembers class com.google.gson.ToNumberStrategy {
}

-keep class com.google.gson.TypeAdapterFactory
-keepclassmembers class com.google.gson.TypeAdapterFactory {
}

-keep class com.google.gson.JsonArray
-keepclassmembers class com.google.gson.JsonArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** asList(...);
   *** contains(...);
   *** deepCopy(...);
   *** get(...);
   *** iterator(...);
   *** remove(...);
   *** remove(...);
   *** set(...);
   *** size(...);
}

-keep class com.google.gson.JsonElement
-keepclassmembers class com.google.gson.JsonElement {
   <init>(...);
   *** getAsBigDecimal(...);
   *** getAsBigInteger(...);
   *** getAsBoolean(...);
   *** getAsByte(...);
   *** getAsDouble(...);
   *** getAsFloat(...);
   *** getAsInt(...);
   *** getAsJsonArray(...);
   *** getAsJsonNull(...);
   *** getAsJsonObject(...);
   *** getAsJsonPrimitive(...);
   *** getAsLong(...);
   *** getAsNumber(...);
   *** getAsShort(...);
   *** getAsString(...);
   *** isJsonArray(...);
   *** isJsonNull(...);
   *** isJsonObject(...);
   *** isJsonPrimitive(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonElement
-keepclassmembers class com.google.gson.JsonElement {
   *** deepCopy(...);
}

-keep class com.google.gson.JsonIOException
-keepclassmembers class com.google.gson.JsonIOException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.JsonNull
-keepclassmembers class com.google.gson.JsonNull {
   <init>(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonObject
-keepclassmembers class com.google.gson.JsonObject {
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addProperty(...);
   *** addProperty(...);
   *** addProperty(...);
   *** addProperty(...);
   *** asMap(...);
   *** deepCopy(...);
   *** entrySet(...);
   *** get(...);
   *** getAsJsonArray(...);
   *** getAsJsonObject(...);
   *** getAsJsonPrimitive(...);
   *** has(...);
   *** keySet(...);
   *** remove(...);
   *** size(...);
}

-keep class com.google.gson.JsonParseException
-keepclassmembers class com.google.gson.JsonParseException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.JsonParser
-keepclassmembers class com.google.gson.JsonParser {
   <init>(...);
   *** parseReader(...);
   *** parseReader(...);
   *** parseString(...);
}

-keep class com.google.gson.JsonPrimitive
-keepclassmembers class com.google.gson.JsonPrimitive {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBoolean(...);
   *** isNumber(...);
   *** isString(...);
   *** deepCopy(...);
}

-keep class com.google.gson.JsonStreamParser
-keepclassmembers class com.google.gson.JsonStreamParser {
   <init>(...);
   <init>(...);
   *** hasNext(...);
   *** next(...);
   *** remove(...);
}

-keep class com.google.gson.JsonSyntaxException
-keepclassmembers class com.google.gson.JsonSyntaxException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.LongSerializationPolicy
-keepclassmembers class com.google.gson.LongSerializationPolicy {
   *** serialize(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.LongSerializationPolicy
-keepclassmembers class com.google.gson.LongSerializationPolicy {
   *** serialize(...);
}

-keep class com.google.gson.Strictness
-keepclassmembers class com.google.gson.Strictness {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.ToNumberPolicy
-keepclassmembers class com.google.gson.ToNumberPolicy {
   *** valueOf(...);
   *** values(...);
   *** readNumber(...);
}

-keep class com.google.gson.ToNumberPolicy
-keepclassmembers class com.google.gson.ToNumberPolicy {
   *** readNumber(...);
}

-keep class com.google.gson.TypeAdapter
-keepclassmembers class com.google.gson.TypeAdapter {
   <init>(...);
   *** fromJson(...);
   *** fromJson(...);
   *** fromJsonTree(...);
   *** nullSafe(...);
   *** read(...);
   *** toJson(...);
   *** toJson(...);
   *** toJsonTree(...);
   *** write(...);
}

-keep class com.google.gson.TypeAdapter
-keepclassmembers class com.google.gson.TypeAdapter {
   *** read(...);
   *** write(...);
}

-keep class com.google.gson.stream.JsonReader
-keepclassmembers class com.google.gson.stream.JsonReader {
   <init>(...);
   *** hasNext(...);
   *** isLenient(...);
   *** getPath(...);
   *** getPreviousPath(...);
   *** getStrictness(...);
   *** setStrictness(...);
   *** beginArray(...);
   *** beginObject(...);
   *** close(...);
   *** endArray(...);
   *** endObject(...);
   *** nextBoolean(...);
   *** nextDouble(...);
   *** nextInt(...);
   *** nextLong(...);
   *** nextName(...);
   *** nextNull(...);
   *** nextString(...);
   *** peek(...);
   *** skipValue(...);
}

-keep class com.google.gson.stream.JsonToken
-keepclassmembers class com.google.gson.stream.JsonToken {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.gson.stream.JsonWriter
-keepclassmembers class com.google.gson.stream.JsonWriter {
   <init>(...);
   *** getFormattingStyle(...);
   *** setFormattingStyle(...);
   *** isHtmlSafe(...);
   *** setHtmlSafe(...);
   *** isLenient(...);
   *** getSerializeNulls(...);
   *** setSerializeNulls(...);
   *** getStrictness(...);
   *** setStrictness(...);
   *** beginArray(...);
   *** beginObject(...);
   *** close(...);
   *** endArray(...);
   *** endObject(...);
   *** flush(...);
   *** jsonValue(...);
   *** name(...);
   *** nullValue(...);
   *** setIndent(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
   *** value(...);
}

-keep class com.google.gson.stream.MalformedJsonException
-keepclassmembers class com.google.gson.stream.MalformedJsonException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.google.gson.reflect.TypeToken
-keepclassmembers class com.google.gson.reflect.TypeToken {
   <init>(...);
   *** getRawType(...);
   *** getType(...);
   *** equals(...);
   *** get(...);
   *** get(...);
   *** getArray(...);
   *** getParameterized(...);
   *** hashCode(...);
   *** toString(...);
}

-keep class com.google.gson.annotations.Expose
-keepclassmembers class com.google.gson.annotations.Expose {
}

-keep class com.google.gson.annotations.JsonAdapter
-keepclassmembers class com.google.gson.annotations.JsonAdapter {
}

-keep class com.google.gson.annotations.SerializedName
-keepclassmembers class com.google.gson.annotations.SerializedName {
}

-keep class com.google.gson.annotations.Since
-keepclassmembers class com.google.gson.annotations.Since {
}

-keep class com.google.gson.annotations.Until
-keepclassmembers class com.google.gson.annotations.Until {
}

# ACW for Microsoft.Maui.Controls
# ACW for Microsoft.Maui
-keep class com.microsoft.maui.BuildConfig
-keepclassmembers class com.microsoft.maui.BuildConfig {
   <init>(...);
}

-keep class com.microsoft.maui.HybridJavaScriptInterface
-keepclassmembers class com.microsoft.maui.HybridJavaScriptInterface {
   <init>(...);
   *** sendMessage(...);
}

-keep class com.microsoft.maui.HybridJavaScriptInterface
-keepclassmembers class com.microsoft.maui.HybridJavaScriptInterface {
   *** sendMessage(...);
}

-keep class com.microsoft.maui.ImageLoaderCallback
-keepclassmembers class com.microsoft.maui.ImageLoaderCallback {
}

-keep class com.microsoft.maui.MauiViewGroup
-keepclassmembers class com.microsoft.maui.MauiViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInputTransparent(...);
   *** setInputTransparent(...);
   *** measureAndLayout(...);
   *** onLayout(...);
   *** sendBatchUpdate(...);
   *** sendViewBatchUpdate(...);
}

-keep class com.microsoft.maui.PlatformAppCompatTextView
-keepclassmembers class com.microsoft.maui.PlatformAppCompatTextView {
   <init>(...);
   *** onLayoutFormatted(...);
}

-keep class com.microsoft.maui.PlatformContentViewGroup
-keepclassmembers class com.microsoft.maui.PlatformContentViewGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getClipPath(...);
   *** setHasClip(...);
   *** viewGroupDispatchDraw(...);
}

-keep class com.microsoft.maui.PlatformContentViewGroup
-keepclassmembers class com.microsoft.maui.PlatformContentViewGroup {
   *** getClipPath(...);
   *** onLayout(...);
}

-keep class com.microsoft.maui.PlatformFontSpan
-keepclassmembers class com.microsoft.maui.PlatformFontSpan {
   <init>(...);
   <init>(...);
   *** updateDrawState(...);
   *** updateMeasureState(...);
}

-keep class com.microsoft.maui.PlatformInterop
-keepclassmembers class com.microsoft.maui.PlatformInterop {
   <init>(...);
   *** createEditTextColorStateList(...);
   *** createNavigationBar(...);
   *** createNavigationBarArea(...);
   *** createNavigationBarOuterLayout(...);
   *** createShellAppBar(...);
   *** createShellCoordinatorLayout(...);
   *** createShellTabLayout(...);
   *** createShellViewPager(...);
   *** createToolbar(...);
   *** drawMauiDrawablePath(...);
   *** getAnimatable(...);
   *** getButtonColorStateList(...);
   *** getCheckBoxColorStateList(...);
   *** getColorStateListForToolbarStyleableAttribute(...);
   *** getCurrentWindowMetrics(...);
   *** getDefaultColorStateList(...);
   *** getEditTextColorStateList(...);
   *** getFontMetrics(...);
   *** getSemanticPlatformElement(...);
   *** getSwitchColorStateList(...);
   *** getWindowBackgroundColor(...);
   *** loadImageFromFile(...);
   *** loadImageFromFile(...);
   *** loadImageFromFont(...);
   *** loadImageFromFont(...);
   *** loadImageFromStream(...);
   *** loadImageFromStream(...);
   *** loadImageFromUri(...);
   *** loadImageFromUri(...);
   *** measureAndGetWidthAndHeight(...);
   *** removeFromParent(...);
   *** requestLayoutIfNeeded(...);
   *** set(...);
   *** setColorFilter(...);
   *** setContentDescriptionForAutomationId(...);
   *** setLengthFilter(...);
   *** setPaintValues(...);
   *** setPivotXIfNeeded(...);
   *** setPivotYIfNeeded(...);
   *** updateMaxLength(...);
}

-keep class com.microsoft.maui.PlatformLineHeightSpan
-keepclassmembers class com.microsoft.maui.PlatformLineHeightSpan {
   <init>(...);
   *** chooseHeight(...);
}

-keep class com.microsoft.maui.PlatformMauiAppCompatActivity
-keepclassmembers class com.microsoft.maui.PlatformMauiAppCompatActivity {
   <init>(...);
   *** onCreate(...);
}

-keep class com.microsoft.maui.PlatformWrapperView
-keepclassmembers class com.microsoft.maui.PlatformWrapperView {
   <init>(...);
   *** drawShadow(...);
   *** setHasShadow(...);
}

-keep class com.microsoft.maui.PlatformWrapperView
-keepclassmembers class com.microsoft.maui.PlatformWrapperView {
   *** drawShadow(...);
   *** getClipPath(...);
   *** onLayout(...);
}

-keep class microsoft.maui.platform.MauiNavHostFragment
-keepclassmembers class microsoft.maui.platform.MauiNavHostFragment {
}

# ACW for Microsoft.Maui.Essentials
# ACW for Microsoft.Maui.Graphics
# ACW for Xamarin.Android.Glide
-keep class com.bumptech.glide.RequestBuilder
-keepclassmembers class com.bumptech.glide.RequestBuilder {
   <init>(...);
   <init>(...);
   *** getDownloadOnlyRequest(...);
   *** addListener(...);
   *** downloadOnly(...);
   *** downloadOnly(...);
   *** error(...);
   *** error(...);
   *** into(...);
   *** into(...);
   *** into(...);
   *** listener(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** preload(...);
   *** preload(...);
   *** submit(...);
   *** submit(...);
   *** thumbnail(...);
   *** thumbnail(...);
   *** thumbnail(...);
   *** thumbnail(...);
   *** transition(...);
}

-keep class com.bumptech.glide.GeneratedAppGlideModule
-keepclassmembers class com.bumptech.glide.GeneratedAppGlideModule {
   <init>(...);
   *** getExcludedModuleClasses(...);
   *** getRequestManagerFactory(...);
}

-keep class com.bumptech.glide.GeneratedAppGlideModule
-keepclassmembers class com.bumptech.glide.GeneratedAppGlideModule {
   *** getExcludedModuleClasses(...);
}

-keep class com.bumptech.glide.GenericTransitionOptions
-keepclassmembers class com.bumptech.glide.GenericTransitionOptions {
   <init>(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** withNoTransition(...);
}

-keep class com.bumptech.glide.Glide$RequestOptionsFactory
-keepclassmembers class com.bumptech.glide.Glide$RequestOptionsFactory {
}

-keep class com.bumptech.glide.Glide
-keepclassmembers class com.bumptech.glide.Glide {
   *** getArrayPool(...);
   *** getBitmapPool(...);
   *** getContext(...);
   *** isInitialized(...);
   *** getRegistry(...);
   *** getRequestManagerRetriever(...);
   *** clearDiskCache(...);
   *** clearMemory(...);
   *** enableHardwareBitmaps(...);
   *** get(...);
   *** getPhotoCacheDir(...);
   *** getPhotoCacheDir(...);
   *** init(...);
   *** init(...);
   *** onConfigurationChanged(...);
   *** onLowMemory(...);
   *** onTrimMemory(...);
   *** preFillBitmapPool(...);
   *** setMemoryCategory(...);
   *** tearDown(...);
   *** trimMemory(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** with(...);
   *** with(...);
}

-keep class com.bumptech.glide.GlideBuilder$LogRequestOrigins
-keepclassmembers class com.bumptech.glide.GlideBuilder$LogRequestOrigins {
   <init>(...);
}

-keep class com.bumptech.glide.GlideBuilder
-keepclassmembers class com.bumptech.glide.GlideBuilder {
   <init>(...);
   *** addGlobalRequestListener(...);
   *** setAnimationExecutor(...);
   *** setArrayPool(...);
   *** setBitmapPool(...);
   *** setConnectivityMonitorFactory(...);
   *** setDefaultRequestOptions(...);
   *** setDefaultRequestOptions(...);
   *** setDefaultTransitionOptions(...);
   *** setDisableHardwareBitmapsOnO(...);
   *** setDiskCache(...);
   *** setDiskCacheExecutor(...);
   *** setImageDecoderEnabledForBitmaps(...);
   *** setIsActiveResourceRetentionAllowed(...);
   *** setLogLevel(...);
   *** setLogRequestOrigins(...);
   *** setMemoryCache(...);
   *** setMemorySizeCalculator(...);
   *** setMemorySizeCalculator(...);
   *** setResizeExecutor(...);
   *** setSourceExecutor(...);
   *** build(...);
}

-keep class com.bumptech.glide.GlideContext
-keepclassmembers class com.bumptech.glide.GlideContext {
   <init>(...);
   *** getArrayPool(...);
   *** getDefaultRequestListeners(...);
   *** getDefaultRequestOptions(...);
   *** getEngine(...);
   *** getExperiments(...);
   *** getLogLevel(...);
   *** getRegistry(...);
   *** buildImageViewTarget(...);
   *** getDefaultTransitionOptions(...);
}

-keep class com.bumptech.glide.GlideExperiments
-keepclassmembers class com.bumptech.glide.GlideExperiments {
   *** isEnabled(...);
}

-keep class com.bumptech.glide.ListPreloader$PreloadModelProvider
-keepclassmembers class com.bumptech.glide.ListPreloader$PreloadModelProvider {
}

-keep class com.bumptech.glide.ListPreloader$PreloadSizeProvider
-keepclassmembers class com.bumptech.glide.ListPreloader$PreloadSizeProvider {
}

-keep class com.bumptech.glide.ListPreloader
-keepclassmembers class com.bumptech.glide.ListPreloader {
   <init>(...);
   *** onScroll(...);
   *** onScrollStateChanged(...);
}

-keep class com.bumptech.glide.MemoryCategory
-keepclassmembers class com.bumptech.glide.MemoryCategory {
   *** getMultiplier(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.Priority
-keepclassmembers class com.bumptech.glide.Priority {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.Registry$MissingComponentException
-keepclassmembers class com.bumptech.glide.Registry$MissingComponentException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoImageHeaderParserException
-keepclassmembers class com.bumptech.glide.Registry$NoImageHeaderParserException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoModelLoaderAvailableException
-keepclassmembers class com.bumptech.glide.Registry$NoModelLoaderAvailableException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoResultEncoderAvailableException
-keepclassmembers class com.bumptech.glide.Registry$NoResultEncoderAvailableException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry$NoSourceEncoderAvailableException
-keepclassmembers class com.bumptech.glide.Registry$NoSourceEncoderAvailableException {
   <init>(...);
}

-keep class com.bumptech.glide.Registry
-keepclassmembers class com.bumptech.glide.Registry {
   <init>(...);
   *** getImageHeaderParsers(...);
   *** append(...);
   *** append(...);
   *** append(...);
   *** append(...);
   *** append(...);
   *** getLoadPath(...);
   *** getModelLoaders(...);
   *** getRegisteredResourceClasses(...);
   *** getResultEncoder(...);
   *** getRewinder(...);
   *** getSourceEncoder(...);
   *** isResourceEncoderAvailable(...);
   *** prepend(...);
   *** prepend(...);
   *** prepend(...);
   *** prepend(...);
   *** prepend(...);
   *** register(...);
   *** register(...);
   *** register(...);
   *** register(...);
   *** register(...);
   *** replace(...);
   *** setResourceDecoderBucketPriorityList(...);
}

-keep class com.bumptech.glide.RequestManager
-keepclassmembers class com.bumptech.glide.RequestManager {
   <init>(...);
   *** isPaused(...);
   *** addDefaultRequestListener(...);
   *** applyDefaultRequestOptions(...);
   *** as(...);
   *** asBitmap(...);
   *** asDrawable(...);
   *** asFile(...);
   *** asGif(...);
   *** clear(...);
   *** clear(...);
   *** clearOnStop(...);
   *** download(...);
   *** downloadOnly(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** load(...);
   *** onConfigurationChanged(...);
   *** onDestroy(...);
   *** onLowMemory(...);
   *** onStart(...);
   *** onStop(...);
   *** onTrimMemory(...);
   *** pauseAllRequests(...);
   *** pauseAllRequestsRecursive(...);
   *** pauseRequests(...);
   *** pauseRequestsRecursive(...);
   *** resumeRequests(...);
   *** resumeRequestsRecursive(...);
   *** setDefaultRequestOptions(...);
   *** setPauseAllRequestsOnTrimMemoryModerate(...);
   *** setRequestOptions(...);
}

-keep class com.bumptech.glide.TransitionOptions
-keepclassmembers class com.bumptech.glide.TransitionOptions {
   <init>(...);
   *** clone(...);
   *** dontTransition(...);
   *** transition(...);
   *** transition(...);
   *** transition(...);
}

-keep class com.bumptech.glide.TransitionOptions
-keepclassmembers class com.bumptech.glide.TransitionOptions {
}

-keep class com.bumptech.glide.util.ByteBufferUtil
-keepclassmembers class com.bumptech.glide.util.ByteBufferUtil {
   *** fromFile(...);
   *** fromStream(...);
   *** rewind(...);
   *** toBytes(...);
   *** toFile(...);
   *** toStream(...);
   *** toStream(...);
}

-keep class com.bumptech.glide.util.CachedHashCodeArrayMap
-keepclassmembers class com.bumptech.glide.util.CachedHashCodeArrayMap {
   <init>(...);
   *** put(...);
   *** putAll(...);
   *** setValueAt(...);
}

-keep class com.bumptech.glide.util.ContentLengthInputStream
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream {
   *** obtain(...);
   *** obtain(...);
}

-keep class com.bumptech.glide.util.ExceptionCatchingInputStream
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream {
   *** getException(...);
   *** obtain(...);
   *** read(...);
   *** release(...);
}

-keep class com.bumptech.glide.util.ExceptionPassthroughInputStream
-keepclassmembers class com.bumptech.glide.util.ExceptionPassthroughInputStream {
   *** getException(...);
   *** obtain(...);
   *** read(...);
   *** release(...);
}

-keep class com.bumptech.glide.util.Executors
-keepclassmembers class com.bumptech.glide.util.Executors {
   *** directExecutor(...);
   *** mainThreadExecutor(...);
   *** shutdownAndAwaitTermination(...);
}

-keep class com.bumptech.glide.util.FixedPreloadSizeProvider
-keepclassmembers class com.bumptech.glide.util.FixedPreloadSizeProvider {
   <init>(...);
   *** getPreloadSize(...);
}

-keep class com.bumptech.glide.util.GlideSuppliers$GlideSupplier
-keepclassmembers class com.bumptech.glide.util.GlideSuppliers$GlideSupplier {
}

-keep class com.bumptech.glide.util.GlideSuppliers
-keepclassmembers class com.bumptech.glide.util.GlideSuppliers {
   *** memorize(...);
}

-keep class com.bumptech.glide.util.Synthetic
-keepclassmembers class com.bumptech.glide.util.Synthetic {
}

-keep class com.bumptech.glide.util.LogTime
-keepclassmembers class com.bumptech.glide.util.LogTime {
   *** getElapsedMillis(...);
   *** getLogTime(...);
}

-keep class com.bumptech.glide.util.LruCache
-keepclassmembers class com.bumptech.glide.util.LruCache {
   <init>(...);
   *** getCount(...);
   *** getCurrentSize(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** contains(...);
   *** get(...);
   *** getSize(...);
   *** onItemEvicted(...);
   *** put(...);
   *** remove(...);
   *** setSizeMultiplier(...);
   *** trimToSize(...);
}

-keep class com.bumptech.glide.util.MarkEnforcingInputStream
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream {
   <init>(...);
}

-keep class com.bumptech.glide.util.MultiClassKey
-keepclassmembers class com.bumptech.glide.util.MultiClassKey {
   <init>(...);
   <init>(...);
   <init>(...);
   *** set(...);
   *** set(...);
}

-keep class com.bumptech.glide.util.Preconditions
-keepclassmembers class com.bumptech.glide.util.Preconditions {
   *** checkArgument(...);
   *** checkArgument(...);
   *** checkNotEmpty(...);
   *** checkNotEmpty(...);
   *** checkNotNull(...);
   *** checkNotNull(...);
}

-keep class com.bumptech.glide.util.Util
-keepclassmembers class com.bumptech.glide.util.Util {
   *** isOnBackgroundThread(...);
   *** isOnMainThread(...);
   *** assertBackgroundThread(...);
   *** assertMainThread(...);
   *** bothBaseRequestOptionsNullEquivalentOrEquals(...);
   *** bothModelsNullEquivalentOrEquals(...);
   *** bothNullOrEqual(...);
   *** createQueue(...);
   *** getBitmapByteSize(...);
   *** getBitmapByteSize(...);
   *** getBytesPerPixel(...);
   *** getSize(...);
   *** getSnapshot(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCode(...);
   *** isValidDimension(...);
   *** isValidDimensions(...);
   *** postOnUiThread(...);
   *** removeCallbacksOnUiThread(...);
   *** sha256BytesToHex(...);
}

-keep class com.bumptech.glide.util.ViewPreloadSizeProvider
-keepclassmembers class com.bumptech.glide.util.ViewPreloadSizeProvider {
   <init>(...);
   <init>(...);
   *** getPreloadSize(...);
   *** onSizeReady(...);
   *** setView(...);
}

-keep class com.bumptech.glide.util.pool.FactoryPools$Factory
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools$Factory {
}

-keep class com.bumptech.glide.util.pool.FactoryPools$Poolable
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools$Poolable {
}

-keep class com.bumptech.glide.util.pool.FactoryPools$Resetter
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools$Resetter {
}

-keep class com.bumptech.glide.util.pool.FactoryPools
-keepclassmembers class com.bumptech.glide.util.pool.FactoryPools {
   *** simple(...);
   *** threadSafe(...);
   *** threadSafe(...);
   *** threadSafeList(...);
   *** threadSafeList(...);
}

-keep class com.bumptech.glide.util.pool.GlideTrace
-keepclassmembers class com.bumptech.glide.util.pool.GlideTrace {
   *** beginSection(...);
   *** beginSectionAsync(...);
   *** beginSectionFormat(...);
   *** beginSectionFormat(...);
   *** beginSectionFormat(...);
   *** endSection(...);
   *** endSectionAsync(...);
}

-keep class com.bumptech.glide.util.pool.StateVerifier
-keepclassmembers class com.bumptech.glide.util.pool.StateVerifier {
   *** newInstance(...);
   *** throwIfRecycled(...);
}

-keep class com.bumptech.glide.util.pool.StateVerifier
-keepclassmembers class com.bumptech.glide.util.pool.StateVerifier {
   *** throwIfRecycled(...);
}

-keep class com.bumptech.glide.signature.AndroidResourceSignature
-keepclassmembers class com.bumptech.glide.signature.AndroidResourceSignature {
   *** obtain(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.signature.ApplicationVersionSignature
-keepclassmembers class com.bumptech.glide.signature.ApplicationVersionSignature {
   *** obtain(...);
}

-keep class com.bumptech.glide.signature.EmptySignature
-keepclassmembers class com.bumptech.glide.signature.EmptySignature {
   *** obtain(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.signature.MediaStoreSignature
-keepclassmembers class com.bumptech.glide.signature.MediaStoreSignature {
   <init>(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.signature.ObjectKey
-keepclassmembers class com.bumptech.glide.signature.ObjectKey {
   <init>(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.provider.EncoderRegistry
-keepclassmembers class com.bumptech.glide.provider.EncoderRegistry {
   <init>(...);
   *** append(...);
   *** getEncoder(...);
   *** prepend(...);
}

-keep class com.bumptech.glide.provider.ImageHeaderParserRegistry
-keepclassmembers class com.bumptech.glide.provider.ImageHeaderParserRegistry {
   <init>(...);
   *** getParsers(...);
   *** add(...);
}

-keep class com.bumptech.glide.provider.LoadPathCache
-keepclassmembers class com.bumptech.glide.provider.LoadPathCache {
   <init>(...);
   *** get(...);
   *** isEmptyLoadPath(...);
   *** put(...);
}

-keep class com.bumptech.glide.provider.ModelToResourceClassCache
-keepclassmembers class com.bumptech.glide.provider.ModelToResourceClassCache {
   <init>(...);
   *** clear(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.provider.ResourceDecoderRegistry
-keepclassmembers class com.bumptech.glide.provider.ResourceDecoderRegistry {
   <init>(...);
   *** append(...);
   *** getDecoders(...);
   *** getResourceClasses(...);
   *** prepend(...);
   *** setBucketPriorityList(...);
}

-keep class com.bumptech.glide.provider.ResourceEncoderRegistry
-keepclassmembers class com.bumptech.glide.provider.ResourceEncoderRegistry {
   <init>(...);
   *** append(...);
   *** get(...);
   *** prepend(...);
}

-keep class com.bumptech.glide.module.AppGlideModule
-keepclassmembers class com.bumptech.glide.module.AppGlideModule {
   <init>(...);
   *** isManifestParsingEnabled(...);
   *** applyOptions(...);
}

-keep class com.bumptech.glide.module.AppGlideModule
-keepclassmembers class com.bumptech.glide.module.AppGlideModule {
}

-keep class com.bumptech.glide.module.AppliesOptions
-keepclassmembers class com.bumptech.glide.module.AppliesOptions {
}

-keep class com.bumptech.glide.module.GlideModule
-keepclassmembers class com.bumptech.glide.module.GlideModule {
}

-keep class com.bumptech.glide.module.RegistersComponents
-keepclassmembers class com.bumptech.glide.module.RegistersComponents {
}

-keep class com.bumptech.glide.module.LibraryGlideModule
-keepclassmembers class com.bumptech.glide.module.LibraryGlideModule {
   <init>(...);
   *** registerComponents(...);
}

-keep class com.bumptech.glide.module.LibraryGlideModule
-keepclassmembers class com.bumptech.glide.module.LibraryGlideModule {
}

-keep class com.bumptech.glide.module.ManifestParser
-keepclassmembers class com.bumptech.glide.module.ManifestParser {
   <init>(...);
   *** parse(...);
}

-keep class com.bumptech.glide.manager.DefaultConnectivityMonitorFactory
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitorFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener {
}

-keep class mono.com.bumptech.glide.manager.ConnectivityMonitor_ConnectivityListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.manager.ConnectivityMonitor_ConnectivityListenerImplementor {
}

-keep class com.bumptech.glide.manager.ConnectivityMonitor
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitor {
}

-keep class com.bumptech.glide.manager.ConnectivityMonitorFactory
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitorFactory {
}

-keep class com.bumptech.glide.manager.Lifecycle
-keepclassmembers class com.bumptech.glide.manager.Lifecycle {
}

-keep class com.bumptech.glide.manager.LifecycleListener
-keepclassmembers class com.bumptech.glide.manager.LifecycleListener {
}

-keep class mono.com.bumptech.glide.manager.LifecycleListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.manager.LifecycleListenerImplementor {
}

-keep class com.bumptech.glide.manager.RequestManagerTreeNode
-keepclassmembers class com.bumptech.glide.manager.RequestManagerTreeNode {
}

-keep class com.bumptech.glide.manager.RequestManagerFragment
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment {
   <init>(...);
   *** getRequestManager(...);
   *** setRequestManager(...);
   *** getRequestManagerTreeNode(...);
}

-keep class com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory {
}

-keep class com.bumptech.glide.manager.RequestManagerRetriever
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever {
   <init>(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** handleMessage(...);
}

-keep class com.bumptech.glide.manager.RequestTracker
-keepclassmembers class com.bumptech.glide.manager.RequestTracker {
   <init>(...);
   *** isPaused(...);
   *** clearAndRemove(...);
   *** clearRequests(...);
   *** pauseAllRequests(...);
   *** pauseRequests(...);
   *** restartRequests(...);
   *** resumeRequests(...);
   *** runRequest(...);
}

-keep class com.bumptech.glide.manager.SupportRequestManagerFragment
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment {
   <init>(...);
   *** getRequestManager(...);
   *** setRequestManager(...);
   *** getRequestManagerTreeNode(...);
}

-keep class com.bumptech.glide.manager.TargetTracker
-keepclassmembers class com.bumptech.glide.manager.TargetTracker {
   <init>(...);
   *** getAll(...);
   *** clear(...);
   *** onDestroy(...);
   *** onStart(...);
   *** onStop(...);
   *** track(...);
   *** untrack(...);
}

-keep class com.bumptech.glide.request.RequestOptions
-keepclassmembers class com.bumptech.glide.request.RequestOptions {
   <init>(...);
   *** bitmapTransform(...);
   *** centerCropTransform(...);
   *** centerInsideTransform(...);
   *** circleCropTransform(...);
   *** decodeTypeOf(...);
   *** diskCacheStrategyOf(...);
   *** downsampleOf(...);
   *** encodeFormatOf(...);
   *** encodeQualityOf(...);
   *** errorOf(...);
   *** errorOf(...);
   *** fitCenterTransform(...);
   *** formatOf(...);
   *** frameOf(...);
   *** noAnimation(...);
   *** noTransformation(...);
   *** option(...);
   *** overrideOf(...);
   *** overrideOf(...);
   *** placeholderOf(...);
   *** placeholderOf(...);
   *** priorityOf(...);
   *** signatureOf(...);
   *** sizeMultiplierOf(...);
   *** skipMemoryCacheOf(...);
   *** timeoutOf(...);
}

-keep class com.bumptech.glide.request.BaseRequestOptions
-keepclassmembers class com.bumptech.glide.request.BaseRequestOptions {
   <init>(...);
   *** getDiskCacheStrategy(...);
   *** getErrorId(...);
   *** getErrorPlaceholder(...);
   *** getFallbackDrawable(...);
   *** getFallbackId(...);
   *** isAutoCloneEnabled(...);
   *** isDiskCacheStrategySet(...);
   *** isLocked(...);
   *** isMemoryCacheable(...);
   *** isPrioritySet(...);
   *** isSkipMemoryCacheSet(...);
   *** isTransformationAllowed(...);
   *** isTransformationRequired(...);
   *** isTransformationSet(...);
   *** isValidOverride(...);
   *** getOnlyRetrieveFromCache(...);
   *** getOptions(...);
   *** getOverrideHeight(...);
   *** getOverrideWidth(...);
   *** getPlaceholderDrawable(...);
   *** getPlaceholderId(...);
   *** getPriority(...);
   *** getResourceClass(...);
   *** getSignature(...);
   *** getSizeMultiplier(...);
   *** getTheme(...);
   *** getTransformations(...);
   *** getUseAnimationPool(...);
   *** getUseUnlimitedSourceGeneratorsPool(...);
   *** apply(...);
   *** autoClone(...);
   *** centerCrop(...);
   *** centerInside(...);
   *** circleCrop(...);
   *** clone(...);
   *** decode(...);
   *** disallowHardwareConfig(...);
   *** diskCacheStrategy(...);
   *** dontAnimate(...);
   *** dontTransform(...);
   *** downsample(...);
   *** encodeFormat(...);
   *** encodeQuality(...);
   *** error(...);
   *** error(...);
   *** fallback(...);
   *** fallback(...);
   *** fitCenter(...);
   *** format(...);
   *** frame(...);
   *** isEquivalentTo(...);
   *** lock(...);
   *** onlyRetrieveFromCache(...);
   *** optionalCenterCrop(...);
   *** optionalCenterInside(...);
   *** optionalCircleCrop(...);
   *** optionalFitCenter(...);
   *** optionalTransform(...);
   *** optionalTransform(...);
   *** override(...);
   *** override(...);
   *** placeholder(...);
   *** placeholder(...);
   *** priority(...);
   *** selfOrThrowIfLocked(...);
   *** set(...);
   *** signature(...);
   *** sizeMultiplier(...);
   *** skipMemoryCache(...);
   *** theme(...);
   *** timeout(...);
   *** transform(...);
   *** transform(...);
   *** transform(...);
   *** transforms(...);
   *** useAnimationPool(...);
   *** useUnlimitedSourceGeneratorsPool(...);
}

-keep class com.bumptech.glide.request.BaseRequestOptions
-keepclassmembers class com.bumptech.glide.request.BaseRequestOptions {
}

-keep class com.bumptech.glide.request.ErrorRequestCoordinator
-keepclassmembers class com.bumptech.glide.request.ErrorRequestCoordinator {
   <init>(...);
   *** isAnyResourceSet(...);
   *** isCleared(...);
   *** isComplete(...);
   *** isRunning(...);
   *** getRoot(...);
   *** begin(...);
   *** canNotifyCleared(...);
   *** canNotifyStatusChanged(...);
   *** canSetImage(...);
   *** clear(...);
   *** isEquivalentTo(...);
   *** onRequestFailed(...);
   *** onRequestSuccess(...);
   *** pause(...);
   *** setRequests(...);
}

-keep class com.bumptech.glide.request.FutureTarget
-keepclassmembers class com.bumptech.glide.request.FutureTarget {
}

-keep class com.bumptech.glide.request.Request
-keepclassmembers class com.bumptech.glide.request.Request {
}

-keep class com.bumptech.glide.request.RequestCoordinator$RequestState
-keepclassmembers class com.bumptech.glide.request.RequestCoordinator$RequestState {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.request.RequestCoordinator
-keepclassmembers class com.bumptech.glide.request.RequestCoordinator {
}

-keep class com.bumptech.glide.request.RequestListener
-keepclassmembers class com.bumptech.glide.request.RequestListener {
}

-keep class mono.com.bumptech.glide.request.RequestListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.request.RequestListenerImplementor {
}

-keep class com.bumptech.glide.request.ResourceCallback
-keepclassmembers class com.bumptech.glide.request.ResourceCallback {
}

-keep class com.bumptech.glide.request.RequestFutureTarget
-keepclassmembers class com.bumptech.glide.request.RequestFutureTarget {
   <init>(...);
   *** isCancelled(...);
   *** isDone(...);
   *** getRequest(...);
   *** setRequest(...);
   *** cancel(...);
   *** get(...);
   *** get(...);
   *** getSize(...);
   *** onDestroy(...);
   *** onLoadCleared(...);
   *** onLoadFailed(...);
   *** onLoadFailed(...);
   *** onLoadStarted(...);
   *** onResourceReady(...);
   *** onResourceReady(...);
   *** onStart(...);
   *** onStop(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.SingleRequest
-keepclassmembers class com.bumptech.glide.request.SingleRequest {
   *** isAnyResourceSet(...);
   *** isCleared(...);
   *** isComplete(...);
   *** isRunning(...);
   *** getLock(...);
   *** begin(...);
   *** clear(...);
   *** isEquivalentTo(...);
   *** obtain(...);
   *** onLoadFailed(...);
   *** onResourceReady(...);
   *** onSizeReady(...);
   *** pause(...);
}

-keep class com.bumptech.glide.request.ThumbnailRequestCoordinator
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator {
   <init>(...);
   *** isAnyResourceSet(...);
   *** isCleared(...);
   *** isComplete(...);
   *** isRunning(...);
   *** getRoot(...);
   *** begin(...);
   *** canNotifyCleared(...);
   *** canNotifyStatusChanged(...);
   *** canSetImage(...);
   *** clear(...);
   *** isEquivalentTo(...);
   *** onRequestFailed(...);
   *** onRequestSuccess(...);
   *** pause(...);
   *** setRequests(...);
}

-keep class com.bumptech.glide.request.transition.BitmapTransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.BitmapTransitionFactory {
   <init>(...);
   *** getBitmap(...);
}

-keep class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory {
   <init>(...);
   *** build(...);
   *** getBitmap(...);
}

-keep class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.BitmapContainerTransitionFactory {
   *** getBitmap(...);
}

-keep class com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder
-keepclassmembers class com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setCrossFadeEnabled(...);
}

-keep class com.bumptech.glide.request.transition.DrawableCrossFadeFactory
-keepclassmembers class com.bumptech.glide.request.transition.DrawableCrossFadeFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.DrawableCrossFadeTransition
-keepclassmembers class com.bumptech.glide.request.transition.DrawableCrossFadeTransition {
   <init>(...);
   *** transition(...);
}

-keep class com.bumptech.glide.request.transition.Transition$ViewAdapter
-keepclassmembers class com.bumptech.glide.request.transition.Transition$ViewAdapter {
}

-keep class com.bumptech.glide.request.transition.Transition
-keepclassmembers class com.bumptech.glide.request.transition.Transition {
}

-keep class com.bumptech.glide.request.transition.TransitionFactory
-keepclassmembers class com.bumptech.glide.request.transition.TransitionFactory {
}

-keep class com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory
-keepclassmembers class com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.NoTransition
-keepclassmembers class com.bumptech.glide.request.transition.NoTransition {
   <init>(...);
   *** getFactory(...);
   *** get(...);
   *** transition(...);
}

-keep class com.bumptech.glide.request.transition.ViewAnimationFactory
-keepclassmembers class com.bumptech.glide.request.transition.ViewAnimationFactory {
   <init>(...);
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.ViewPropertyAnimationFactory
-keepclassmembers class com.bumptech.glide.request.transition.ViewPropertyAnimationFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.request.transition.ViewPropertyTransition$Animator
-keepclassmembers class com.bumptech.glide.request.transition.ViewPropertyTransition$Animator {
}

-keep class com.bumptech.glide.request.transition.ViewPropertyTransition
-keepclassmembers class com.bumptech.glide.request.transition.ViewPropertyTransition {
   <init>(...);
   *** transition(...);
}

-keep class com.bumptech.glide.request.transition.ViewTransition
-keepclassmembers class com.bumptech.glide.request.transition.ViewTransition {
   *** transition(...);
}

-keep class com.bumptech.glide.request.target.AppWidgetTarget
-keepclassmembers class com.bumptech.glide.request.target.AppWidgetTarget {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** onLoadCleared(...);
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.BitmapImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.BitmapImageViewTarget {
   <init>(...);
   <init>(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.BitmapThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.BitmapThumbnailImageViewTarget {
   <init>(...);
   <init>(...);
   *** getDrawable(...);
}

-keep class com.bumptech.glide.request.target.DrawableImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.DrawableImageViewTarget {
   <init>(...);
   <init>(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.DrawableThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.DrawableThumbnailImageViewTarget {
   <init>(...);
   <init>(...);
   *** getDrawable(...);
}

-keep class com.bumptech.glide.request.target.NotificationTarget
-keepclassmembers class com.bumptech.glide.request.target.NotificationTarget {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onLoadCleared(...);
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.BaseTarget
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget {
   <init>(...);
   *** getRequest(...);
   *** setRequest(...);
   *** onDestroy(...);
   *** onLoadCleared(...);
   *** onLoadFailed(...);
   *** onLoadStarted(...);
   *** onStart(...);
   *** onStop(...);
   *** onResourceReady(...);
   *** getSize(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.target.BaseTarget
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget {
   *** onResourceReady(...);
   *** getSize(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.target.CustomTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomTarget {
   <init>(...);
   <init>(...);
   *** getRequest(...);
   *** setRequest(...);
   *** getSize(...);
   *** onDestroy(...);
   *** onLoadFailed(...);
   *** onLoadStarted(...);
   *** onStart(...);
   *** onStop(...);
   *** removeCallback(...);
   *** onResourceReady(...);
   *** onLoadCleared(...);
}

-keep class com.bumptech.glide.request.target.CustomTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomTarget {
   *** onResourceReady(...);
   *** onLoadCleared(...);
}

-keep class com.bumptech.glide.request.target.CustomViewTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomViewTarget {
   <init>(...);
   *** getRequest(...);
   *** setRequest(...);
   *** getView(...);
   *** clearOnDetach(...);
   *** getSize(...);
   *** onDestroy(...);
   *** onLoadCleared(...);
   *** onLoadStarted(...);
   *** onResourceCleared(...);
   *** onResourceLoading(...);
   *** onStart(...);
   *** onStop(...);
   *** removeCallback(...);
   *** useTagId(...);
   *** waitForLayout(...);
   *** onResourceReady(...);
   *** onLoadFailed(...);
}

-keep class com.bumptech.glide.request.target.CustomViewTarget
-keepclassmembers class com.bumptech.glide.request.target.CustomViewTarget {
   *** onResourceCleared(...);
   *** onResourceReady(...);
   *** onLoadFailed(...);
}

-keep class com.bumptech.glide.request.target.FixedSizeDrawable
-keepclassmembers class com.bumptech.glide.request.target.FixedSizeDrawable {
   <init>(...);
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class com.bumptech.glide.request.target.ImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget {
   <init>(...);
   <init>(...);
   *** getCurrentDrawable(...);
   *** onResourceReady(...);
   *** setDrawable(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.ImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget {
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.ImageViewTargetFactory
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTargetFactory {
   <init>(...);
   *** buildTarget(...);
}

-keep class com.bumptech.glide.request.target.SizeReadyCallback
-keepclassmembers class com.bumptech.glide.request.target.SizeReadyCallback {
}

-keep class com.bumptech.glide.request.target.Target
-keepclassmembers class com.bumptech.glide.request.target.Target {
}

-keep class com.bumptech.glide.request.target.Target
-keepclassmembers class com.bumptech.glide.request.target.Target {
}

-keep class com.bumptech.glide.request.target.Target
-keepclassmembers class com.bumptech.glide.request.target.Target {
}

-keep class com.bumptech.glide.request.target.PreloadTarget
-keepclassmembers class com.bumptech.glide.request.target.PreloadTarget {
   *** obtain(...);
   *** onLoadCleared(...);
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.SimpleTarget
-keepclassmembers class com.bumptech.glide.request.target.SimpleTarget {
   <init>(...);
   <init>(...);
   *** getSize(...);
   *** removeCallback(...);
}

-keep class com.bumptech.glide.request.target.SimpleTarget
-keepclassmembers class com.bumptech.glide.request.target.SimpleTarget {
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.request.target.ThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ThumbnailImageViewTarget {
   <init>(...);
   <init>(...);
   *** getDrawable(...);
   *** setResource(...);
}

-keep class com.bumptech.glide.request.target.ThumbnailImageViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ThumbnailImageViewTarget {
   *** getDrawable(...);
}

-keep class com.bumptech.glide.request.target.ViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget {
   <init>(...);
   <init>(...);
   *** getView(...);
   *** clearOnDetach(...);
   *** getSize(...);
   *** removeCallback(...);
   *** setTagId(...);
   *** waitForLayout(...);
}

-keep class com.bumptech.glide.request.target.ViewTarget
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget {
   *** onResourceReady(...);
}

-keep class com.bumptech.glide.load.DataSource
-keepclassmembers class com.bumptech.glide.load.DataSource {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.DecodeFormat
-keepclassmembers class com.bumptech.glide.load.DecodeFormat {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.EncodeStrategy
-keepclassmembers class com.bumptech.glide.load.EncodeStrategy {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.HttpException
-keepclassmembers class com.bumptech.glide.load.HttpException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getStatusCode(...);
}

-keep class com.bumptech.glide.load.Encoder
-keepclassmembers class com.bumptech.glide.load.Encoder {
}

-keep class com.bumptech.glide.load.ImageHeaderParser$ImageType
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser$ImageType {
   *** hasAlpha(...);
   *** isWebp(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.ImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser {
}

-keep class com.bumptech.glide.load.ImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser {
}

-keep class com.bumptech.glide.load.ImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParser {
}

-keep class com.bumptech.glide.load.Key
-keepclassmembers class com.bumptech.glide.load.Key {
}

-keep class com.bumptech.glide.load.Key
-keepclassmembers class com.bumptech.glide.load.Key {
}

-keep class com.bumptech.glide.load.Key
-keepclassmembers class com.bumptech.glide.load.Key {
}

-keep class com.bumptech.glide.load.ImageHeaderParserUtils
-keepclassmembers class com.bumptech.glide.load.ImageHeaderParserUtils {
   *** getOrientation(...);
   *** getOrientation(...);
   *** getOrientation(...);
   *** getType(...);
   *** getType(...);
   *** getType(...);
}

-keep class com.bumptech.glide.load.ResourceDecoder
-keepclassmembers class com.bumptech.glide.load.ResourceDecoder {
}

-keep class com.bumptech.glide.load.ResourceEncoder
-keepclassmembers class com.bumptech.glide.load.ResourceEncoder {
}

-keep class com.bumptech.glide.load.Transformation
-keepclassmembers class com.bumptech.glide.load.Transformation {
}

-keep class com.bumptech.glide.load.MultiTransformation
-keepclassmembers class com.bumptech.glide.load.MultiTransformation {
   <init>(...);
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.Option$CacheKeyUpdater
-keepclassmembers class com.bumptech.glide.load.Option$CacheKeyUpdater {
}

-keep class com.bumptech.glide.load.Option
-keepclassmembers class com.bumptech.glide.load.Option {
   *** getDefaultValue(...);
   *** disk(...);
   *** disk(...);
   *** memory(...);
   *** memory(...);
   *** update(...);
}

-keep class com.bumptech.glide.load.Options
-keepclassmembers class com.bumptech.glide.load.Options {
   <init>(...);
   *** get(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.PreferredColorSpace
-keepclassmembers class com.bumptech.glide.load.PreferredColorSpace {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener
-keepclassmembers class com.bumptech.glide.load.resource.DefaultOnHeaderDecodedListener {
   <init>(...);
   *** onHeaderDecoded(...);
}

-keep class com.bumptech.glide.load.resource.SimpleResource
-keepclassmembers class com.bumptech.glide.load.resource.SimpleResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.UnitTransformation
-keepclassmembers class com.bumptech.glide.load.resource.UnitTransformation {
   *** get(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder {
   <init>(...);
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder {
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder {
   <init>(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.transcode.ResourceTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.ResourceTranscoder {
}

-keep class com.bumptech.glide.load.resource.transcode.TranscoderRegistry
-keepclassmembers class com.bumptech.glide.load.resource.transcode.TranscoderRegistry {
   <init>(...);
   *** get(...);
   *** getTranscodeClasses(...);
   *** register(...);
}

-keep class com.bumptech.glide.load.resource.transcode.UnitTranscoder
-keepclassmembers class com.bumptech.glide.load.resource.transcode.UnitTranscoder {
   <init>(...);
   *** get(...);
   *** transcode(...);
}

-keep class com.bumptech.glide.load.resource.file.FileDecoder
-keepclassmembers class com.bumptech.glide.load.resource.file.FileDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.file.FileResource
-keepclassmembers class com.bumptech.glide.load.resource.file.FileResource {
   <init>(...);
}

-keep class com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder
-keepclassmembers class com.bumptech.glide.load.resource.drawable.AnimatedImageDecoder {
   *** byteBufferDecoder(...);
   *** streamDecoder(...);
}

-keep class com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder
-keepclassmembers class com.bumptech.glide.load.resource.drawable.AnimatedWebpDecoder {
   *** byteBufferDecoder(...);
   *** streamDecoder(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat {
   *** getDrawable(...);
   *** getDrawable(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableResource {
   <init>(...);
   *** get(...);
   *** initialize(...);
   *** recycle(...);
   *** getResourceClass(...);
   *** getSize(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableResource {
   *** getResourceClass(...);
   *** getSize(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions {
   <init>(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** with(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
}

-keep class com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder
-keepclassmembers class com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder
-keepclassmembers class com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory {
   <init>(...);
   *** getDataClass(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder
-keepclassmembers class com.bumptech.glide.load.resource.bytes.ByteBufferRewinder {
   <init>(...);
   *** cleanup(...);
   *** rewindAndGet(...);
}

-keep class com.bumptech.glide.load.resource.bytes.BytesResource
-keepclassmembers class com.bumptech.glide.load.resource.bytes.BytesResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder {
   <init>(...);
   *** encode(...);
   *** getEncodeStrategy(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapEncoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder {
   <init>(...);
   <init>(...);
   *** encode(...);
   *** getEncodeStrategy(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapResource
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** initialize(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransformation {
   <init>(...);
   *** transform(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransformation {
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions {
   <init>(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** crossFade(...);
   *** transitionUsing(...);
   *** with(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withCrossFade(...);
   *** withWrapped(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.CenterCrop
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterCrop {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.CenterInside
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterInside {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.CircleCrop
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CircleCrop {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser {
   <init>(...);
   *** getOrientation(...);
   *** getOrientation(...);
   *** getType(...);
   *** getType(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks {
}

-keep class com.bumptech.glide.load.resource.bitmap.Downsampler
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler {
   <init>(...);
   *** decode(...);
   *** decode(...);
   *** decode(...);
   *** decode(...);
   *** handles(...);
   *** handles(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding {
   *** valueOf(...);
   *** values(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy {
   <init>(...);
   *** getSampleSizeRounding(...);
   *** getScaleFactor(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DownsampleStrategy {
   *** getSampleSizeRounding(...);
   *** getScaleFactor(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.DrawableTransformation
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.DrawableTransformation {
   <init>(...);
   *** asBitmapDrawable(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser {
   <init>(...);
   *** getOrientation(...);
   *** getOrientation(...);
   *** getType(...);
   *** getType(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.FitCenter
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FitCenter {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.GranularRoundedCorners
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GranularRoundedCorners {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.HardwareConfigState
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.HardwareConfigState {
   *** getInstance(...);
   *** blockHardwareBitmaps(...);
   *** isHardwareConfigAllowed(...);
   *** unblockHardwareBitmaps(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource {
   *** getResourceClass(...);
   *** getSize(...);
   *** get(...);
   *** initialize(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream {
   <init>(...);
   *** fixMarkLimit(...);
   *** release(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.Rotate
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Rotate {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.RoundedCorners
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RoundedCorners {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.TransformationUtils
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils {
   *** getBitmapDrawableLock(...);
   *** centerCrop(...);
   *** centerInside(...);
   *** circleCrop(...);
   *** fitCenter(...);
   *** getExifOrientationDegrees(...);
   *** isExifOrientationRequired(...);
   *** rotateImage(...);
   *** rotateImageExif(...);
   *** roundedCorners(...);
   *** roundedCorners(...);
   *** roundedCorners(...);
   *** setAlpha(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder {
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.resource.bitmap.VideoDecoder
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoDecoder {
   *** asset(...);
   *** byteBuffer(...);
   *** decode(...);
   *** handles(...);
   *** parcel(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawableEncoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableEncoder {
   <init>(...);
   *** encode(...);
   *** getEncodeStrategy(...);
}

-keep class com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder {
   <init>(...);
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifBitmapProvider
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifBitmapProvider {
   <init>(...);
   <init>(...);
   *** obtain(...);
   *** obtainByteArray(...);
   *** obtainIntArray(...);
   *** release(...);
   *** release(...);
   *** release(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawable
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable {
   <init>(...);
   <init>(...);
   *** getBuffer(...);
   *** getFirstFrame(...);
   *** getFrameCount(...);
   *** getFrameIndex(...);
   *** getFrameTransformation(...);
   *** isRunning(...);
   *** getOpacity(...);
   *** getSize(...);
   *** clearAnimationCallbacks(...);
   *** draw(...);
   *** onFrameReady(...);
   *** recycle(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFrameTransformation(...);
   *** setLoopCount(...);
   *** start(...);
   *** startFromFirstFrame(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawableResource
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableResource {
   <init>(...);
   *** getResourceClass(...);
   *** getSize(...);
   *** recycle(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifDrawableTransformation
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableTransformation {
   <init>(...);
   *** transform(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.resource.gif.GifOptions
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifOptions {
}

-keep class com.bumptech.glide.load.resource.gif.StreamGifDecoder
-keepclassmembers class com.bumptech.glide.load.resource.gif.StreamGifDecoder {
   <init>(...);
   *** decode(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory {
}

-keep class com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** buildFetcher(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.AssetUriLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** buildFetcher(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.AssetUriLoader
-keepclassmembers class com.bumptech.glide.load.model.AssetUriLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader$Converter
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader$Converter {
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ByteArrayLoader
-keepclassmembers class com.bumptech.glide.load.model.ByteArrayLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.StringLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.StringLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.StringLoader
-keepclassmembers class com.bumptech.glide.load.model.StringLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.FileLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.FileLoader$FileOpener
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$FileOpener {
}

-keep class com.bumptech.glide.load.model.FileLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.FileLoader$StreamFactory {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.FileLoader
-keepclassmembers class com.bumptech.glide.load.model.FileLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader$UriFactory
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader$UriFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ResourceLoader
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory {
   <init>(...);
   *** build(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory {
}

-keep class com.bumptech.glide.load.model.UriLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.UriLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UriLoader
-keepclassmembers class com.bumptech.glide.load.model.UriLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.UrlUriLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.UrlUriLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UrlUriLoader
-keepclassmembers class com.bumptech.glide.load.model.UrlUriLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ByteBufferEncoder
-keepclassmembers class com.bumptech.glide.load.model.ByteBufferEncoder {
   <init>(...);
   *** encode(...);
}

-keep class com.bumptech.glide.load.model.ByteBufferFileLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.ByteBufferFileLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.ByteBufferFileLoader
-keepclassmembers class com.bumptech.glide.load.model.ByteBufferFileLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.DataUrlLoader$DataDecoder
-keepclassmembers class com.bumptech.glide.load.model.DataUrlLoader$DataDecoder {
}

-keep class com.bumptech.glide.load.model.DataUrlLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.DataUrlLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.DataUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.DataUrlLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.DirectResourceLoader
-keepclassmembers class com.bumptech.glide.load.model.DirectResourceLoader {
   *** assetFileDescriptorFactory(...);
   *** buildLoadData(...);
   *** drawableFactory(...);
   *** handles(...);
   *** inputStreamFactory(...);
}

-keep class com.bumptech.glide.load.model.GlideUrl
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCacheKey(...);
   *** getHeaders(...);
   *** toStringUrl(...);
   *** toURL(...);
   *** updateDiskCacheKey(...);
}

-keep class com.bumptech.glide.load.model.Headers
-keepclassmembers class com.bumptech.glide.load.model.Headers {
}

-keep class com.bumptech.glide.load.model.Headers
-keepclassmembers class com.bumptech.glide.load.model.Headers {
}

-keep class com.bumptech.glide.load.model.Headers
-keepclassmembers class com.bumptech.glide.load.model.Headers {
}

-keep class com.bumptech.glide.load.model.LazyHeaderFactory
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaderFactory {
}

-keep class com.bumptech.glide.load.model.Model
-keepclassmembers class com.bumptech.glide.load.model.Model {
}

-keep class com.bumptech.glide.load.model.ModelLoader$LoadData
-keepclassmembers class com.bumptech.glide.load.model.ModelLoader$LoadData {
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.model.ModelLoader
-keepclassmembers class com.bumptech.glide.load.model.ModelLoader {
}

-keep class com.bumptech.glide.load.model.ModelLoaderFactory
-keepclassmembers class com.bumptech.glide.load.model.ModelLoaderFactory {
}

-keep class com.bumptech.glide.load.model.LazyHeaders$Builder
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$Builder {
   <init>(...);
   *** addHeader(...);
   *** addHeader(...);
   *** build(...);
   *** setHeader(...);
   *** setHeader(...);
}

-keep class com.bumptech.glide.load.model.LazyHeaders
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders {
   *** getHeaders(...);
}

-keep class com.bumptech.glide.load.model.MediaStoreFileLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.MediaStoreFileLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.MediaStoreFileLoader
-keepclassmembers class com.bumptech.glide.load.model.MediaStoreFileLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.ModelCache
-keepclassmembers class com.bumptech.glide.load.model.ModelCache {
   <init>(...);
   <init>(...);
   *** clear(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.load.model.ModelLoaderRegistry
-keepclassmembers class com.bumptech.glide.load.model.ModelLoaderRegistry {
   <init>(...);
   *** append(...);
   *** build(...);
   *** getDataClasses(...);
   *** getModelLoaders(...);
   *** prepend(...);
   *** remove(...);
   *** replace(...);
}

-keep class com.bumptech.glide.load.model.MultiModelLoaderFactory
-keepclassmembers class com.bumptech.glide.load.model.MultiModelLoaderFactory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.model.ResourceUriLoader
-keepclassmembers class com.bumptech.glide.load.model.ResourceUriLoader {
   *** buildLoadData(...);
   *** handles(...);
   *** newAssetFileDescriptorFactory(...);
   *** newStreamFactory(...);
}

-keep class com.bumptech.glide.load.model.StreamEncoder
-keepclassmembers class com.bumptech.glide.load.model.StreamEncoder {
   <init>(...);
   *** encode(...);
}

-keep class com.bumptech.glide.load.model.UnitModelLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.UnitModelLoader$Factory {
   <init>(...);
   *** getInstance(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.UnitModelLoader
-keepclassmembers class com.bumptech.glide.load.model.UnitModelLoader {
   <init>(...);
   *** getInstance(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.QMediaStoreUriLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.QMediaStoreUriLoader {
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader {
   <init>(...);
   <init>(...);
   *** buildLoadData(...);
   *** getAlternateUrls(...);
   *** getHeaders(...);
   *** getUrl(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader {
   *** getUrl(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpGlideUrlLoader {
   <init>(...);
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpUriLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUriLoader$Factory {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.stream.HttpUriLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUriLoader {
   <init>(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory
-keepclassmembers class com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory {
   <init>(...);
   *** build(...);
   *** teardown(...);
}

-keep class com.bumptech.glide.load.model.stream.UrlLoader
-keepclassmembers class com.bumptech.glide.load.model.stream.UrlLoader {
   <init>(...);
   *** buildLoadData(...);
   *** handles(...);
}

-keep class com.bumptech.glide.load.engine.DecodePath
-keepclassmembers class com.bumptech.glide.load.engine.DecodePath {
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.DiskCacheStrategy
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy {
   <init>(...);
   *** decodeCachedData(...);
   *** decodeCachedResource(...);
   *** isDataCacheable(...);
   *** isResourceCacheable(...);
}

-keep class com.bumptech.glide.load.engine.DiskCacheStrategy
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy {
   *** decodeCachedData(...);
   *** decodeCachedResource(...);
   *** isDataCacheable(...);
   *** isResourceCacheable(...);
}

-keep class com.bumptech.glide.load.engine.Engine$LoadStatus
-keepclassmembers class com.bumptech.glide.load.engine.Engine$LoadStatus {
   *** cancel(...);
}

-keep class com.bumptech.glide.load.engine.Engine
-keepclassmembers class com.bumptech.glide.load.engine.Engine {
   <init>(...);
   *** clearDiskCache(...);
   *** load(...);
   *** onResourceRemoved(...);
   *** release(...);
   *** shutdown(...);
}

-keep class com.bumptech.glide.load.engine.GlideException
-keepclassmembers class com.bumptech.glide.load.engine.GlideException {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCauses(...);
   *** getOrigin(...);
   *** setOrigin(...);
   *** getRootCauses(...);
   *** logRootCauses(...);
}

-keep class com.bumptech.glide.load.engine.Initializable
-keepclassmembers class com.bumptech.glide.load.engine.Initializable {
}

-keep class com.bumptech.glide.load.engine.Resource
-keepclassmembers class com.bumptech.glide.load.engine.Resource {
}

-keep class com.bumptech.glide.load.engine.LoadPath
-keepclassmembers class com.bumptech.glide.load.engine.LoadPath {
   <init>(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.engine.prefill.BitmapPreFiller
-keepclassmembers class com.bumptech.glide.load.engine.prefill.BitmapPreFiller {
   <init>(...);
   *** preFill(...);
}

-keep class com.bumptech.glide.load.engine.prefill.PreFillType$Builder
-keepclassmembers class com.bumptech.glide.load.engine.prefill.PreFillType$Builder {
   <init>(...);
   <init>(...);
   *** setConfig(...);
   *** setWeight(...);
}

-keep class com.bumptech.glide.load.engine.prefill.PreFillType
-keepclassmembers class com.bumptech.glide.load.engine.prefill.PreFillType {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCacheAdapter$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter$Factory {
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskCacheAdapter
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter {
   <init>(...);
   *** clear(...);
   *** delete(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter {
}

-keep class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper {
   <init>(...);
   *** clear(...);
   *** create(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** put(...);
}

-keep class com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Factory {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Factory {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Factory
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Factory {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache$Writer
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache$Writer {
}

-keep class com.bumptech.glide.load.engine.cache.DiskCache
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCache {
}

-keep class com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener {
}

-keep class mono.com.bumptech.glide.load.engine.cache.MemoryCache_ResourceRemovedListenerImplementor
-keepclassmembers class mono.com.bumptech.glide.load.engine.cache.MemoryCache_ResourceRemovedListenerImplementor {
}

-keep class com.bumptech.glide.load.engine.cache.MemoryCache
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemoryCache {
}

-keep class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory
-keepclassmembers class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class com.bumptech.glide.load.engine.cache.LruResourceCache
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache {
   <init>(...);
   *** getSize(...);
   *** onItemEvicted(...);
   *** put(...);
   *** remove(...);
   *** setResourceRemovedListener(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.cache.MemoryCacheAdapter
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemoryCacheAdapter {
   <init>(...);
   *** getCurrentSize(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** put(...);
   *** remove(...);
   *** setResourceRemovedListener(...);
   *** setSizeMultiplier(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder {
   <init>(...);
   *** build(...);
   *** setArrayPoolSize(...);
   *** setBitmapPoolScreens(...);
   *** setLowMemoryMaxSizeMultiplier(...);
   *** setMaxSizeMultiplier(...);
   *** setMemoryCacheScreens(...);
}

-keep class com.bumptech.glide.load.engine.cache.MemorySizeCalculator
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator {
   *** getArrayPoolSizeInBytes(...);
   *** getBitmapPoolSize(...);
   *** getMemoryCacheSize(...);
}

-keep class com.bumptech.glide.load.engine.cache.SafeKeyGenerator
-keepclassmembers class com.bumptech.glide.load.engine.cache.SafeKeyGenerator {
   <init>(...);
   *** getSafeKey(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool {
   *** offer(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter {
   <init>(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** get(...);
   *** getDirty(...);
   *** put(...);
   *** setSizeMultiplier(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter {
   <init>(...);
   *** getElementSizeInBytes(...);
   *** getTag(...);
   *** getArrayLength(...);
   *** newArray(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter {
   <init>(...);
   *** getElementSizeInBytes(...);
   *** getTag(...);
   *** getArrayLength(...);
   *** newArray(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.Poolable
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.Poolable {
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool {
   <init>(...);
   <init>(...);
   *** clearMemory(...);
   *** get(...);
   *** getExact(...);
   *** put(...);
   *** put(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool {
   <init>(...);
   <init>(...);
   *** getCurrentSize(...);
   *** getMaxSize(...);
   *** clearMemory(...);
   *** evictionCount(...);
   *** get(...);
   *** getDirty(...);
   *** hitCount(...);
   *** missCount(...);
   *** put(...);
   *** setSizeMultiplier(...);
   *** trimMemory(...);
}

-keep class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy {
   <init>(...);
   *** get(...);
   *** getSize(...);
   *** logBitmap(...);
   *** logBitmap(...);
   *** put(...);
   *** removeLast(...);
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$Builder
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$Builder {
   *** build(...);
   *** setName(...);
   *** setThreadCount(...);
   *** setThreadFactory(...);
   *** setThreadTimeoutMillis(...);
   *** setUncaughtThrowableStrategy(...);
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy {
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy {
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy {
}

-keep class com.bumptech.glide.load.engine.executor.GlideExecutor
-keepclassmembers class com.bumptech.glide.load.engine.executor.GlideExecutor {
   *** isShutdown(...);
   *** isTerminated(...);
   *** awaitTermination(...);
   *** calculateBestThreadCount(...);
   *** execute(...);
   *** invokeAll(...);
   *** invokeAll(...);
   *** invokeAny(...);
   *** invokeAny(...);
   *** newAnimationBuilder(...);
   *** newAnimationExecutor(...);
   *** newAnimationExecutor(...);
   *** newDiskCacheBuilder(...);
   *** newDiskCacheExecutor(...);
   *** newDiskCacheExecutor(...);
   *** newDiskCacheExecutor(...);
   *** newSourceBuilder(...);
   *** newSourceExecutor(...);
   *** newSourceExecutor(...);
   *** newSourceExecutor(...);
   *** newUnlimitedSourceExecutor(...);
   *** shutdown(...);
   *** shutdownNow(...);
   *** submit(...);
   *** submit(...);
   *** submit(...);
}

-keep class com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.StreamAssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.StreamAssetPathFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.StreamLocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.StreamLocalUriFetcher {
   <init>(...);
   *** getDataClass(...);
   *** close(...);
   *** loadResource(...);
}

-keep class com.bumptech.glide.load.data.AssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher {
   <init>(...);
   *** getDataSource(...);
   *** cancel(...);
   *** cleanup(...);
   *** close(...);
   *** loadData(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.AssetPathFetcher
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher {
   *** close(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.BufferedOutputStream
-keepclassmembers class com.bumptech.glide.load.data.BufferedOutputStream {
   <init>(...);
   *** write(...);
}

-keep class com.bumptech.glide.load.data.DataRewinderRegistry
-keepclassmembers class com.bumptech.glide.load.data.DataRewinderRegistry {
   <init>(...);
   *** build(...);
   *** register(...);
}

-keep class com.bumptech.glide.load.data.ExifOrientationStream
-keepclassmembers class com.bumptech.glide.load.data.ExifOrientationStream {
   <init>(...);
}

-keep class com.bumptech.glide.load.data.HttpUrlFetcher
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher {
   <init>(...);
   *** getDataClass(...);
   *** getDataSource(...);
   *** cancel(...);
   *** cleanup(...);
   *** loadData(...);
}

-keep class com.bumptech.glide.load.data.DataFetcher$DataCallback
-keepclassmembers class com.bumptech.glide.load.data.DataFetcher$DataCallback {
}

-keep class com.bumptech.glide.load.data.DataFetcher
-keepclassmembers class com.bumptech.glide.load.data.DataFetcher {
}

-keep class com.bumptech.glide.load.data.DataRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.data.DataRewinder$Factory {
}

-keep class com.bumptech.glide.load.data.DataRewinder
-keepclassmembers class com.bumptech.glide.load.data.DataRewinder {
}

-keep class com.bumptech.glide.load.data.InputStreamRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.data.InputStreamRewinder$Factory {
   <init>(...);
   *** getDataClass(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.data.InputStreamRewinder
-keepclassmembers class com.bumptech.glide.load.data.InputStreamRewinder {
   <init>(...);
   *** cleanup(...);
   *** fixMarkLimits(...);
   *** rewindAndGet(...);
}

-keep class com.bumptech.glide.load.data.LocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher {
   <init>(...);
   *** getDataSource(...);
   *** cancel(...);
   *** cleanup(...);
   *** close(...);
   *** loadData(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.LocalUriFetcher
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher {
   *** close(...);
   *** loadResource(...);
   *** getDataClass(...);
}

-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory
-keepclassmembers class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory {
   <init>(...);
   *** getDataClass(...);
   *** build(...);
}

-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder
-keepclassmembers class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder {
   <init>(...);
   *** isSupported(...);
   *** cleanup(...);
   *** rewindAndGet(...);
}

-keep class com.bumptech.glide.load.data.mediastore.ThumbnailQuery
-keepclassmembers class com.bumptech.glide.load.data.mediastore.ThumbnailQuery {
}

-keep class com.bumptech.glide.load.data.mediastore.MediaStoreUtil
-keepclassmembers class com.bumptech.glide.load.data.mediastore.MediaStoreUtil {
   *** isAndroidPickerUri(...);
   *** isMediaStoreImageUri(...);
   *** isMediaStoreUri(...);
   *** isMediaStoreVideoUri(...);
   *** isThumbnailSize(...);
}

-keep class com.bumptech.glide.load.data.mediastore.ThumbFetcher
-keepclassmembers class com.bumptech.glide.load.data.mediastore.ThumbFetcher {
   *** getDataClass(...);
   *** getDataSource(...);
   *** buildImageFetcher(...);
   *** buildVideoFetcher(...);
   *** cancel(...);
   *** cleanup(...);
   *** loadData(...);
}

# ACW for Xamarin.Android.Glide.DiskLruCache
-keep class com.bumptech.glide.disklrucache.DiskLruCache$Editor
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor {
   *** abort(...);
   *** abortUnlessCommitted(...);
   *** commit(...);
   *** getFile(...);
   *** getString(...);
   *** set(...);
}

-keep class com.bumptech.glide.disklrucache.DiskLruCache$Value
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Value {
   *** edit(...);
   *** getFile(...);
   *** getLength(...);
   *** getString(...);
}

-keep class com.bumptech.glide.disklrucache.DiskLruCache
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache {
   *** getDirectory(...);
   *** isClosed(...);
   *** getMaxSize(...);
   *** setMaxSize(...);
   *** close(...);
   *** delete(...);
   *** edit(...);
   *** flush(...);
   *** get(...);
   *** open(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.Android.Glide.GifDecoder
-keep class com.bumptech.glide.gifdecoder.GifHeader
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeader {
   <init>(...);
   *** getHeight(...);
   *** getNumFrames(...);
   *** getStatus(...);
   *** getWidth(...);
}

-keep class com.bumptech.glide.gifdecoder.GifHeaderParser
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser {
   <init>(...);
   *** isAnimated(...);
   *** clear(...);
   *** parseHeader(...);
   *** setData(...);
   *** setData(...);
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder$GifDecodeStatus
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder$GifDecodeStatus {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder {
}

-keep class com.bumptech.glide.gifdecoder.GifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder {
}

-keep class com.bumptech.glide.gifdecoder.StandardGifDecoder
-keepclassmembers class com.bumptech.glide.gifdecoder.StandardGifDecoder {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getByteSize(...);
   *** getCurrentFrameIndex(...);
   *** getData(...);
   *** getFrameCount(...);
   *** getHeight(...);
   *** getLoopCount(...);
   *** getNetscapeLoopCount(...);
   *** getNextDelay(...);
   *** getNextFrame(...);
   *** getStatus(...);
   *** getTotalIterationCount(...);
   *** getWidth(...);
   *** advance(...);
   *** clear(...);
   *** getDelay(...);
   *** read(...);
   *** read(...);
   *** resetFrameIndex(...);
   *** setData(...);
   *** setData(...);
   *** setData(...);
   *** setDefaultBitmapConfig(...);
}

# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.BackEventCompat
-keepclassmembers class androidx.activity.BackEventCompat {
   <init>(...);
   <init>(...);
   *** getProgress(...);
   *** getSwipeEdge(...);
   *** getTouchX(...);
   *** getTouchY(...);
   *** toBackEvent(...);
}

-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getActivityResultRegistry(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getFullyDrawnReporter(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addOnConfigurationChangedListener(...);
   *** addOnContextAvailableListener(...);
   *** addOnMultiWindowModeChangedListener(...);
   *** addOnNewIntentListener(...);
   *** addOnPictureInPictureModeChangedListener(...);
   *** addOnTrimMemoryListener(...);
   *** addOnUserLeaveHintListener(...);
   *** initializeViewTreeOwners(...);
   *** invalidateMenu(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** peekAvailableContext(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** removeMenuProvider(...);
   *** removeOnConfigurationChangedListener(...);
   *** removeOnContextAvailableListener(...);
   *** removeOnMultiWindowModeChangedListener(...);
   *** removeOnNewIntentListener(...);
   *** removeOnPictureInPictureModeChangedListener(...);
   *** removeOnTrimMemoryListener(...);
   *** removeOnUserLeaveHintListener(...);
}

-keep class androidx.activity.ComponentDialog
-keepclassmembers class androidx.activity.ComponentDialog {
   <init>(...);
   <init>(...);
   *** getLifecycle(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** initializeViewTreeOwners(...);
   *** getOnBackPressedDispatcher(...);
}

-keep class androidx.activity.FullyDrawnReporter
-keepclassmembers class androidx.activity.FullyDrawnReporter {
   <init>(...);
   *** isFullyDrawnReported(...);
   *** addOnReportDrawnListener(...);
   *** addReporter(...);
   *** fullyDrawnReported(...);
   *** removeOnReportDrawnListener(...);
   *** removeReporter(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackCancelled(...);
   *** handleOnBackPressed(...);
   *** handleOnBackProgressed(...);
   *** handleOnBackStarted(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** dispatchOnBackCancelled(...);
   *** dispatchOnBackProgressed(...);
   *** dispatchOnBackStarted(...);
   *** onBackPressed(...);
   *** setOnBackInvokedDispatcher(...);
}

-keep class androidx.activity.contextaware.OnContextAvailableListener
-keepclassmembers class androidx.activity.contextaware.OnContextAvailableListener {
}

-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor
-keepclassmembers class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor {
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   <init>(...);
   *** getContract(...);
   *** launch(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   *** getContract(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   <init>(...);
   *** dispatchResult(...);
   *** dispatchResult(...);
   *** onLaunch(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** register(...);
   *** register(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   *** onLaunch(...);
}

-keep class androidx.activity.result.ActivityResultCallback
-keepclassmembers class androidx.activity.result.ActivityResultCallback {
}

-keep class androidx.activity.result.contract.ActivityResultContract$SynchronousResult
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract$SynchronousResult {
   <init>(...);
   *** getValue(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   <init>(...);
   *** createIntent(...);
   *** getSynchronousResult(...);
   *** parseResult(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   *** createIntent(...);
   *** parseResult(...);
}

# ACW for Xamarin.AndroidX.Annotation.Experimental
-keep class androidx.annotation.OptIn
-keepclassmembers class androidx.annotation.OptIn {
}

-keep class androidx.annotation.RequiresOptIn$Level
-keepclassmembers class androidx.annotation.RequiresOptIn$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.RequiresOptIn
-keepclassmembers class androidx.annotation.RequiresOptIn {
}

-keep class androidx.annotation.experimental.Experimental$Level
-keepclassmembers class androidx.annotation.experimental.Experimental$Level {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.experimental.Experimental
-keepclassmembers class androidx.annotation.experimental.Experimental {
}

-keep class androidx.annotation.experimental.UseExperimental
-keepclassmembers class androidx.annotation.experimental.UseExperimental {
}

# ACW for Xamarin.AndroidX.Annotation.Jvm
-keep class androidx.annotation.AnimatorRes
-keepclassmembers class androidx.annotation.AnimatorRes {
}

-keep class androidx.annotation.AnimRes
-keepclassmembers class androidx.annotation.AnimRes {
}

-keep class androidx.annotation.AnyRes
-keepclassmembers class androidx.annotation.AnyRes {
}

-keep class androidx.annotation.AnyThread
-keepclassmembers class androidx.annotation.AnyThread {
}

-keep class androidx.annotation.ArrayRes
-keepclassmembers class androidx.annotation.ArrayRes {
}

-keep class androidx.annotation.AttrRes
-keepclassmembers class androidx.annotation.AttrRes {
}

-keep class androidx.annotation.BinderThread
-keepclassmembers class androidx.annotation.BinderThread {
}

-keep class androidx.annotation.BoolRes
-keepclassmembers class androidx.annotation.BoolRes {
}

-keep class androidx.annotation.CallSuper
-keepclassmembers class androidx.annotation.CallSuper {
}

-keep class androidx.annotation.CheckResult
-keepclassmembers class androidx.annotation.CheckResult {
}

-keep class androidx.annotation.ChecksSdkIntAtLeast
-keepclassmembers class androidx.annotation.ChecksSdkIntAtLeast {
}

-keep class androidx.annotation.ColorInt
-keepclassmembers class androidx.annotation.ColorInt {
}

-keep class androidx.annotation.ColorLong
-keepclassmembers class androidx.annotation.ColorLong {
}

-keep class androidx.annotation.ColorRes
-keepclassmembers class androidx.annotation.ColorRes {
}

-keep class androidx.annotation.ContentView
-keepclassmembers class androidx.annotation.ContentView {
}

-keep class androidx.annotation.DeprecatedSinceApi
-keepclassmembers class androidx.annotation.DeprecatedSinceApi {
}

-keep class androidx.annotation.DimenRes
-keepclassmembers class androidx.annotation.DimenRes {
}

-keep class androidx.annotation.Dimension$Companion
-keepclassmembers class androidx.annotation.Dimension$Companion {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Dimension
-keepclassmembers class androidx.annotation.Dimension {
}

-keep class androidx.annotation.Discouraged
-keepclassmembers class androidx.annotation.Discouraged {
}

-keep class androidx.annotation.DisplayContext
-keepclassmembers class androidx.annotation.DisplayContext {
}

-keep class androidx.annotation.DoNotInline
-keepclassmembers class androidx.annotation.DoNotInline {
}

-keep class androidx.annotation.DrawableRes
-keepclassmembers class androidx.annotation.DrawableRes {
}

-keep class androidx.annotation.EmptySuper
-keepclassmembers class androidx.annotation.EmptySuper {
}

-keep class androidx.annotation.FloatRange
-keepclassmembers class androidx.annotation.FloatRange {
}

-keep class androidx.annotation.FontRes
-keepclassmembers class androidx.annotation.FontRes {
}

-keep class androidx.annotation.FractionRes
-keepclassmembers class androidx.annotation.FractionRes {
}

-keep class androidx.annotation.GravityInt
-keepclassmembers class androidx.annotation.GravityInt {
}

-keep class androidx.annotation.GuardedBy
-keepclassmembers class androidx.annotation.GuardedBy {
}

-keep class androidx.annotation.HalfFloat
-keepclassmembers class androidx.annotation.HalfFloat {
}

-keep class androidx.annotation.IdRes
-keepclassmembers class androidx.annotation.IdRes {
}

-keep class androidx.annotation.InspectableProperty$EnumEntry
-keepclassmembers class androidx.annotation.InspectableProperty$EnumEntry {
}

-keep class androidx.annotation.InspectableProperty$FlagEntry
-keepclassmembers class androidx.annotation.InspectableProperty$FlagEntry {
}

-keep class androidx.annotation.InspectableProperty$ValueType
-keepclassmembers class androidx.annotation.InspectableProperty$ValueType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.InspectableProperty
-keepclassmembers class androidx.annotation.InspectableProperty {
}

-keep class androidx.annotation.IntDef
-keepclassmembers class androidx.annotation.IntDef {
}

-keep class androidx.annotation.IntegerRes
-keepclassmembers class androidx.annotation.IntegerRes {
}

-keep class androidx.annotation.InterpolatorRes
-keepclassmembers class androidx.annotation.InterpolatorRes {
}

-keep class androidx.annotation.IntRange
-keepclassmembers class androidx.annotation.IntRange {
}

-keep class androidx.annotation.Keep
-keepclassmembers class androidx.annotation.Keep {
}

-keep class androidx.annotation.LayoutRes
-keepclassmembers class androidx.annotation.LayoutRes {
}

-keep class androidx.annotation.LongDef
-keepclassmembers class androidx.annotation.LongDef {
}

-keep class androidx.annotation.MainThread
-keepclassmembers class androidx.annotation.MainThread {
}

-keep class androidx.annotation.MenuRes
-keepclassmembers class androidx.annotation.MenuRes {
}

-keep class androidx.annotation.NavigationRes
-keepclassmembers class androidx.annotation.NavigationRes {
}

-keep class androidx.annotation.NonNull
-keepclassmembers class androidx.annotation.NonNull {
}

-keep class androidx.annotation.NonUiContext
-keepclassmembers class androidx.annotation.NonUiContext {
}

-keep class androidx.annotation.Nullable
-keepclassmembers class androidx.annotation.Nullable {
}

-keep class androidx.annotation.OpenForTesting
-keepclassmembers class androidx.annotation.OpenForTesting {
}

-keep class androidx.annotation.PluralsRes
-keepclassmembers class androidx.annotation.PluralsRes {
}

-keep class androidx.annotation.Px
-keepclassmembers class androidx.annotation.Px {
}

-keep class androidx.annotation.RawRes
-keepclassmembers class androidx.annotation.RawRes {
}

-keep class androidx.annotation.ReplaceWith
-keepclassmembers class androidx.annotation.ReplaceWith {
}

-keep class androidx.annotation.RequiresApi
-keepclassmembers class androidx.annotation.RequiresApi {
}

-keep class androidx.annotation.RequiresExtension$Container
-keepclassmembers class androidx.annotation.RequiresExtension$Container {
}

-keep class androidx.annotation.RequiresExtension
-keepclassmembers class androidx.annotation.RequiresExtension {
}

-keep class androidx.annotation.RequiresFeature
-keepclassmembers class androidx.annotation.RequiresFeature {
}

-keep class androidx.annotation.RequiresPermission$Read
-keepclassmembers class androidx.annotation.RequiresPermission$Read {
}

-keep class androidx.annotation.RequiresPermission$Write
-keepclassmembers class androidx.annotation.RequiresPermission$Write {
}

-keep class androidx.annotation.RequiresPermission
-keepclassmembers class androidx.annotation.RequiresPermission {
}

-keep class androidx.annotation.RestrictTo$Scope
-keepclassmembers class androidx.annotation.RestrictTo$Scope {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.annotation.RestrictTo
-keepclassmembers class androidx.annotation.RestrictTo {
}

-keep class androidx.annotation.ReturnThis
-keepclassmembers class androidx.annotation.ReturnThis {
}

-keep class androidx.annotation.Size
-keepclassmembers class androidx.annotation.Size {
}

-keep class androidx.annotation.StringDef
-keepclassmembers class androidx.annotation.StringDef {
}

-keep class androidx.annotation.StringRes
-keepclassmembers class androidx.annotation.StringRes {
}

-keep class androidx.annotation.StyleableRes
-keepclassmembers class androidx.annotation.StyleableRes {
}

-keep class androidx.annotation.StyleRes
-keepclassmembers class androidx.annotation.StyleRes {
}

-keep class androidx.annotation.TransitionRes
-keepclassmembers class androidx.annotation.TransitionRes {
}

-keep class androidx.annotation.UiContext
-keepclassmembers class androidx.annotation.UiContext {
}

-keep class androidx.annotation.UiThread
-keepclassmembers class androidx.annotation.UiThread {
}

-keep class androidx.annotation.VisibleForTesting$Companion
-keepclassmembers class androidx.annotation.VisibleForTesting$Companion {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.VisibleForTesting
-keepclassmembers class androidx.annotation.VisibleForTesting {
}

-keep class androidx.annotation.WorkerThread
-keepclassmembers class androidx.annotation.WorkerThread {
}

-keep class androidx.annotation.XmlRes
-keepclassmembers class androidx.annotation.XmlRes {
}

# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.AlertDialog$Builder
-keepclassmembers class androidx.appcompat.app.AlertDialog$Builder {
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** create(...);
   *** setAdapter(...);
   *** setCancelable(...);
   *** setCursor(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setInverseBackgroundForced(...);
   *** setItems(...);
   *** setItems(...);
   *** setMessage(...);
   *** setMessage(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setMultiChoiceItems(...);
   *** setNegativeButton(...);
   *** setNegativeButton(...);
   *** setNegativeButtonIcon(...);
   *** setNeutralButton(...);
   *** setNeutralButton(...);
   *** setNeutralButtonIcon(...);
   *** setOnCancelListener(...);
   *** setOnDismissListener(...);
   *** setOnItemSelectedListener(...);
   *** setOnKeyListener(...);
   *** setPositiveButton(...);
   *** setPositiveButton(...);
   *** setPositiveButtonIcon(...);
   *** setRecycleOnMeasureEnabled(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setSingleChoiceItems(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setView(...);
   *** setView(...);
   *** setView(...);
   *** show(...);
}

-keep class androidx.appcompat.app.AlertDialog
-keepclassmembers class androidx.appcompat.app.AlertDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getListView(...);
   *** getButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setButton(...);
   *** setCustomTitle(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconAttribute(...);
   *** setMessage(...);
   *** setView(...);
   *** setView(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onLocalesChanged(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getApplicationLocales(...);
   *** setApplicationLocales(...);
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getContextForDelegate(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setOnBackInvokedDispatcher(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDialog
-keepclassmembers class androidx.appcompat.app.AppCompatDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getSupportActionBar(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onWindowStartingSupportActionMode(...);
   *** supportRequestWindowFeature(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$LayoutParams
-keepclassmembers class androidx.appcompat.widget.Toolbar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBackInvokedCallbackEnabled(...);
   *** setBackInvokedCallbackEnabled(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** invalidateMenu(...);
   *** onLayout(...);
   *** removeMenuProvider(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.AppCompatAutoCompleteTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatAutoCompleteTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatButton
-keepclassmembers class androidx.appcompat.widget.AppCompatButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** setSupportAllCaps(...);
}

-keep class androidx.appcompat.widget.AppCompatCheckBox
-keepclassmembers class androidx.appcompat.widget.AppCompatCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatEditText
-keepclassmembers class androidx.appcompat.widget.AppCompatEditText {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** onReceiveContent(...);
}

-keep class androidx.appcompat.widget.AppCompatImageButton
-keepclassmembers class androidx.appcompat.widget.AppCompatImageButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatImageView
-keepclassmembers class androidx.appcompat.widget.AppCompatImageView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportImageTintList(...);
   *** setSupportImageTintList(...);
   *** getSupportImageTintMode(...);
   *** setSupportImageTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatRadioButton
-keepclassmembers class androidx.appcompat.widget.AppCompatRadioButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportButtonTintList(...);
   *** setSupportButtonTintList(...);
   *** getSupportButtonTintMode(...);
   *** setSupportButtonTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
}

-keep class androidx.appcompat.widget.AppCompatTextView
-keepclassmembers class androidx.appcompat.widget.AppCompatTextView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getSupportBackgroundTintList(...);
   *** setSupportBackgroundTintList(...);
   *** getSupportBackgroundTintMode(...);
   *** setSupportBackgroundTintMode(...);
   *** getSupportCompoundDrawablesTintList(...);
   *** setSupportCompoundDrawablesTintList(...);
   *** getSupportCompoundDrawablesTintMode(...);
   *** setSupportCompoundDrawablesTintMode(...);
   *** getTextMetricsParamsCompat(...);
   *** setTextMetricsParamsCompat(...);
   *** setPrecomputedText(...);
   *** setTextFuture(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.LinearLayoutCompat$LayoutParams
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.widget.LinearLayoutCompat
-keepclassmembers class androidx.appcompat.widget.LinearLayoutCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBaselineAligned(...);
   *** setBaselineAligned(...);
   *** getBaselineAlignedChildIndex(...);
   *** setBaselineAlignedChildIndex(...);
   *** getDividerDrawable(...);
   *** setDividerDrawable(...);
   *** getDividerPadding(...);
   *** setDividerPadding(...);
   *** getDividerWidth(...);
   *** getGravity(...);
   *** setGravity(...);
   *** isMeasureWithLargestChildEnabled(...);
   *** setMeasureWithLargestChildEnabled(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getShowDividers(...);
   *** setShowDividers(...);
   *** getWeightSum(...);
   *** setWeightSum(...);
   *** hasDividerBeforeChildAt(...);
   *** onLayout(...);
   *** setHorizontalGravity(...);
   *** setVerticalGravity(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.widget.SearchView$OnCloseListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnCloseListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnCloseListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnCloseListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView$OnQueryTextListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnQueryTextListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnQueryTextListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnQueryTextListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView$OnSuggestionListener
-keepclassmembers class androidx.appcompat.widget.SearchView$OnSuggestionListener {
}

-keep class mono.androidx.appcompat.widget.SearchView_OnSuggestionListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.SearchView_OnSuggestionListenerImplementor {
}

-keep class androidx.appcompat.widget.SearchView
-keepclassmembers class androidx.appcompat.widget.SearchView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isIconified(...);
   *** setIconified(...);
   *** getImeOptions(...);
   *** setImeOptions(...);
   *** getInputType(...);
   *** setInputType(...);
   *** isIconfiedByDefault(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getQuery(...);
   *** getQueryHint(...);
   *** setQueryHint(...);
   *** isQueryRefinementEnabled(...);
   *** setQueryRefinementEnabled(...);
   *** isSubmitButtonEnabled(...);
   *** setSubmitButtonEnabled(...);
   *** getSuggestionsAdapter(...);
   *** setSuggestionsAdapter(...);
   *** onActionViewCollapsed(...);
   *** onActionViewExpanded(...);
   *** onQueryRefine(...);
   *** setAppSearchData(...);
   *** setIconifiedByDefault(...);
   *** setOnCloseListener(...);
   *** setOnQueryTextFocusChangeListener(...);
   *** setOnQueryTextListener(...);
   *** setOnSearchClickListener(...);
   *** setOnSuggestionListener(...);
   *** setQuery(...);
   *** setSearchableInfo(...);
}

-keep class androidx.appcompat.widget.SwitchCompat
-keepclassmembers class androidx.appcompat.widget.SwitchCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmojiCompatEnabled(...);
   *** setEmojiCompatEnabled(...);
   *** getShowText(...);
   *** setShowText(...);
   *** getSplitTrack(...);
   *** setSplitTrack(...);
   *** getSwitchMinWidth(...);
   *** setSwitchMinWidth(...);
   *** getSwitchPadding(...);
   *** setSwitchPadding(...);
   *** getTextOff(...);
   *** setTextOff(...);
   *** getTextOn(...);
   *** setTextOn(...);
   *** getThumbDrawable(...);
   *** setThumbDrawable(...);
   *** getThumbPosition(...);
   *** getThumbTextPadding(...);
   *** setThumbTextPadding(...);
   *** getThumbTintList(...);
   *** setThumbTintList(...);
   *** getThumbTintMode(...);
   *** setThumbTintMode(...);
   *** getTrackDrawable(...);
   *** setTrackDrawable(...);
   *** getTrackTintList(...);
   *** setTrackTintList(...);
   *** getTrackTintMode(...);
   *** setTrackTintMode(...);
   *** onMeasure(...);
   *** setEnforceSwitchWidth(...);
   *** setSwitchTextAppearance(...);
   *** setSwitchTypeface(...);
   *** setSwitchTypeface(...);
   *** setThumbResource(...);
   *** setTrackResource(...);
}

-keep class androidx.appcompat.widget.TintTypedArray
-keepclassmembers class androidx.appcompat.widget.TintTypedArray {
   *** getChangingConfigurations(...);
   *** getIndexCount(...);
   *** getPositionDescription(...);
   *** getResources(...);
   *** getWrappedTypeArray(...);
   *** getBoolean(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDimension(...);
   *** getDimensionPixelOffset(...);
   *** getDimensionPixelSize(...);
   *** getDrawable(...);
   *** getDrawableIfKnown(...);
   *** getFloat(...);
   *** getFont(...);
   *** getFraction(...);
   *** getIndex(...);
   *** getInt(...);
   *** getInteger(...);
   *** getLayoutDimension(...);
   *** getLayoutDimension(...);
   *** getNonResourceString(...);
   *** getResourceId(...);
   *** getString(...);
   *** getText(...);
   *** getTextArray(...);
   *** getType(...);
   *** getValue(...);
   *** hasValue(...);
   *** length(...);
   *** obtainStyledAttributes(...);
   *** obtainStyledAttributes(...);
   *** obtainStyledAttributes(...);
   *** peekValue(...);
   *** recycle(...);
}

-keep class androidx.appcompat.widget.TooltipCompat
-keepclassmembers class androidx.appcompat.widget.TooltipCompat {
   *** setTooltipText(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** isDispatchingItemsChanged(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

-keep class androidx.appcompat.graphics.drawable.DrawableWrapperCompat
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapperCompat {
   <init>(...);
   *** getDrawable(...);
   *** setDrawable(...);
   *** getOpacity(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Common
-keep class androidx.arch.core.util.Function
-keepclassmembers class androidx.arch.core.util.Function {
}

-keep class androidx.arch.core.internal.FastSafeIterableMap
-keepclassmembers class androidx.arch.core.internal.FastSafeIterableMap {
   <init>(...);
   *** ceil(...);
   *** contains(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$Entry
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$Entry {
   *** getKey(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions {
   *** hasNext(...);
   *** next(...);
   *** remove(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
   *** hasNext(...);
   *** next(...);
   *** remove(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$ListIterator
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$ListIterator {
   *** remove(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$SupportRemove
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$SupportRemove {
   <init>(...);
}

-keep class androidx.arch.core.internal.SafeIterableMap$SupportRemove
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap$SupportRemove {
}

-keep class androidx.arch.core.internal.SafeIterableMap
-keepclassmembers class androidx.arch.core.internal.SafeIterableMap {
   <init>(...);
   *** descendingIterator(...);
   *** eldest(...);
   *** get(...);
   *** iterator(...);
   *** iteratorWithAdditions(...);
   *** newest(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** size(...);
}

# ACW for Xamarin.AndroidX.Arch.Core.Runtime
-keep class androidx.arch.core.executor.ArchTaskExecutor
-keepclassmembers class androidx.arch.core.executor.ArchTaskExecutor {
   *** getIOThreadExecutor(...);
   *** getInstance(...);
   *** isMainThread(...);
   *** getMainThreadExecutor(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
   *** setDelegate(...);
}

-keep class androidx.arch.core.executor.DefaultTaskExecutor
-keepclassmembers class androidx.arch.core.executor.DefaultTaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   <init>(...);
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** executeOnMainThread(...);
   *** postToMainThread(...);
}

-keep class androidx.arch.core.executor.TaskExecutor
-keepclassmembers class androidx.arch.core.executor.TaskExecutor {
   *** isMainThread(...);
   *** executeOnDiskIO(...);
   *** postToMainThread(...);
}

# ACW for Xamarin.AndroidX.Browser
-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback$Default
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback$Default {
   <init>(...);
   *** asBinder(...);
   *** onExtraCallback(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** onExtraCallback(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub {
   *** onExtraCallback(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback$_Parcel
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback$_Parcel {
   <init>(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback {
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback {
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityCallback
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityCallback {
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService$Default
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService$Default {
   <init>(...);
   *** getActiveNotifications(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
   *** areNotificationsEnabled(...);
   *** asBinder(...);
   *** cancelNotification(...);
   *** extraCommand(...);
   *** notifyNotificationWithChannel(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** areNotificationsEnabled(...);
   *** cancelNotification(...);
   *** extraCommand(...);
   *** notifyNotificationWithChannel(...);
   *** getActiveNotifications(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService$Stub
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService$Stub {
   *** getActiveNotifications(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
   *** areNotificationsEnabled(...);
   *** cancelNotification(...);
   *** extraCommand(...);
   *** notifyNotificationWithChannel(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel {
   <init>(...);
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService {
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService {
}

-keep class android.support.customtabs.trusted.ITrustedWebActivityService
-keepclassmembers class android.support.customtabs.trusted.ITrustedWebActivityService {
}

-keep class android.support.customtabs.ICustomTabsCallback$Default
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Default {
   <init>(...);
   *** asBinder(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onActivityLayout(...);
   *** onActivityResized(...);
   *** onMessageChannelReady(...);
   *** onMinimized(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
   *** onUnminimized(...);
   *** onWarmupCompleted(...);
}

-keep class android.support.customtabs.ICustomTabsCallback$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onActivityLayout(...);
   *** onActivityResized(...);
   *** onMessageChannelReady(...);
   *** onMinimized(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
   *** onUnminimized(...);
   *** onWarmupCompleted(...);
}

-keep class android.support.customtabs.ICustomTabsCallback$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$Stub {
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onActivityLayout(...);
   *** onActivityResized(...);
   *** onMessageChannelReady(...);
   *** onMinimized(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
   *** onUnminimized(...);
   *** onWarmupCompleted(...);
}

-keep class android.support.customtabs.ICustomTabsCallback$_Parcel
-keepclassmembers class android.support.customtabs.ICustomTabsCallback$_Parcel {
   <init>(...);
}

-keep class android.support.customtabs.ICustomTabsCallback
-keepclassmembers class android.support.customtabs.ICustomTabsCallback {
}

-keep class android.support.customtabs.ICustomTabsCallback
-keepclassmembers class android.support.customtabs.ICustomTabsCallback {
}

-keep class android.support.customtabs.ICustomTabsCallback
-keepclassmembers class android.support.customtabs.ICustomTabsCallback {
}

-keep class android.support.customtabs.ICustomTabsService$Default
-keepclassmembers class android.support.customtabs.ICustomTabsService$Default {
   <init>(...);
   *** asBinder(...);
   *** extraCommand(...);
   *** isEngagementSignalsApiAvailable(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** newSessionWithExtras(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannelWithExtras(...);
   *** setEngagementSignalsCallback(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsService$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** extraCommand(...);
   *** isEngagementSignalsApiAvailable(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** newSessionWithExtras(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannelWithExtras(...);
   *** setEngagementSignalsCallback(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService$Stub
-keepclassmembers class android.support.customtabs.ICustomTabsService$Stub {
   *** extraCommand(...);
   *** isEngagementSignalsApiAvailable(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** newSessionWithExtras(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannelWithExtras(...);
   *** setEngagementSignalsCallback(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class android.support.customtabs.ICustomTabsService$_Parcel
-keepclassmembers class android.support.customtabs.ICustomTabsService$_Parcel {
   <init>(...);
}

-keep class android.support.customtabs.ICustomTabsService
-keepclassmembers class android.support.customtabs.ICustomTabsService {
}

-keep class android.support.customtabs.ICustomTabsService
-keepclassmembers class android.support.customtabs.ICustomTabsService {
}

-keep class android.support.customtabs.ICustomTabsService
-keepclassmembers class android.support.customtabs.ICustomTabsService {
}

-keep class android.support.customtabs.IEngagementSignalsCallback$Default
-keepclassmembers class android.support.customtabs.IEngagementSignalsCallback$Default {
   <init>(...);
   *** asBinder(...);
   *** onGreatestScrollPercentageIncreased(...);
   *** onSessionEnded(...);
   *** onVerticalScrollEvent(...);
}

-keep class android.support.customtabs.IEngagementSignalsCallback$Stub
-keepclassmembers class android.support.customtabs.IEngagementSignalsCallback$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** onGreatestScrollPercentageIncreased(...);
   *** onSessionEnded(...);
   *** onVerticalScrollEvent(...);
}

-keep class android.support.customtabs.IEngagementSignalsCallback$Stub
-keepclassmembers class android.support.customtabs.IEngagementSignalsCallback$Stub {
   *** onGreatestScrollPercentageIncreased(...);
   *** onSessionEnded(...);
   *** onVerticalScrollEvent(...);
}

-keep class android.support.customtabs.IEngagementSignalsCallback$_Parcel
-keepclassmembers class android.support.customtabs.IEngagementSignalsCallback$_Parcel {
   <init>(...);
}

-keep class android.support.customtabs.IEngagementSignalsCallback
-keepclassmembers class android.support.customtabs.IEngagementSignalsCallback {
}

-keep class android.support.customtabs.IEngagementSignalsCallback
-keepclassmembers class android.support.customtabs.IEngagementSignalsCallback {
}

-keep class android.support.customtabs.IEngagementSignalsCallback
-keepclassmembers class android.support.customtabs.IEngagementSignalsCallback {
}

-keep class android.support.customtabs.IPostMessageService$Default
-keepclassmembers class android.support.customtabs.IPostMessageService$Default {
   <init>(...);
   *** asBinder(...);
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService$Stub
-keepclassmembers class android.support.customtabs.IPostMessageService$Stub {
   <init>(...);
   *** asBinder(...);
   *** asInterface(...);
   *** onTransact(...);
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService$Stub
-keepclassmembers class android.support.customtabs.IPostMessageService$Stub {
   *** onMessageChannelReady(...);
   *** onPostMessage(...);
}

-keep class android.support.customtabs.IPostMessageService$_Parcel
-keepclassmembers class android.support.customtabs.IPostMessageService$_Parcel {
   <init>(...);
}

-keep class android.support.customtabs.IPostMessageService
-keepclassmembers class android.support.customtabs.IPostMessageService {
}

-keep class android.support.customtabs.IPostMessageService
-keepclassmembers class android.support.customtabs.IPostMessageService {
}

-keep class android.support.customtabs.IPostMessageService
-keepclassmembers class android.support.customtabs.IPostMessageService {
}

-keep class androidx.browser.trusted.TokenStore
-keepclassmembers class androidx.browser.trusted.TokenStore {
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode$DefaultMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode$DefaultMode {
   <init>(...);
   *** toBundle(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode$ImmersiveMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode$ImmersiveMode {
   <init>(...);
   *** isSticky(...);
   *** layoutInDisplayCutoutMode(...);
   *** toBundle(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode {
   *** fromBundle(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode {
}

-keep class androidx.browser.trusted.TrustedWebActivityDisplayMode
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityDisplayMode {
}

-keep class androidx.browser.trusted.NotificationApiHelperForM
-keepclassmembers class androidx.browser.trusted.NotificationApiHelperForM {
}

-keep class androidx.browser.trusted.ScreenOrientation$LockType
-keepclassmembers class androidx.browser.trusted.ScreenOrientation$LockType {
}

-keep class androidx.browser.trusted.ScreenOrientation
-keepclassmembers class androidx.browser.trusted.ScreenOrientation {
}

-keep class androidx.browser.trusted.Token
-keepclassmembers class androidx.browser.trusted.Token {
   *** create(...);
   *** deserialize(...);
   *** matches(...);
   *** serialize(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityCallback
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityCallback {
   <init>(...);
   *** onExtraCallback(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityCallback
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityCallback {
   *** onExtraCallback(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityCallbackRemote
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityCallbackRemote {
   *** runExtraCallback(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityIntent
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityIntent {
   *** getIntent(...);
   *** launchTrustedWebActivity(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityIntentBuilder
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityIntentBuilder {
   <init>(...);
   *** getDisplayMode(...);
   *** getUri(...);
   *** build(...);
   *** buildCustomTabsIntent(...);
   *** setAdditionalTrustedOrigins(...);
   *** setColorScheme(...);
   *** setColorSchemeParams(...);
   *** setDefaultColorSchemeParams(...);
   *** setDisplayMode(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setScreenOrientation(...);
   *** setShareParams(...);
   *** setSplashScreenParams(...);
   *** setToolbarColor(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityService
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityService {
   <init>(...);
   *** getTokenStore(...);
   *** onAreNotificationsEnabled(...);
   *** onBind(...);
   *** onCancelNotification(...);
   *** onExtraCommand(...);
   *** onGetActiveNotifications(...);
   *** onGetSmallIconBitmap(...);
   *** onGetSmallIconId(...);
   *** onNotifyNotificationWithChannel(...);
   *** onUnbind(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityService
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityService {
   *** getTokenStore(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityServiceConnection
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityServiceConnection {
   *** getComponentName(...);
   *** getSmallIconBitmap(...);
   *** getSmallIconId(...);
   *** areNotificationsEnabled(...);
   *** cancel(...);
   *** getActiveNotifications(...);
   *** notify(...);
   *** sendExtraCommand(...);
}

-keep class androidx.browser.trusted.TrustedWebActivityServiceConnectionPool
-keepclassmembers class androidx.browser.trusted.TrustedWebActivityServiceConnectionPool {
   *** connect(...);
   *** create(...);
   *** serviceExistsForScope(...);
}

-keep class androidx.browser.trusted.splashscreens.SplashScreenParamKey
-keepclassmembers class androidx.browser.trusted.splashscreens.SplashScreenParamKey {
}

-keep class androidx.browser.trusted.splashscreens.SplashScreenVersion
-keepclassmembers class androidx.browser.trusted.splashscreens.SplashScreenVersion {
}

-keep class androidx.browser.trusted.sharing.ShareData
-keepclassmembers class androidx.browser.trusted.sharing.ShareData {
   <init>(...);
   *** fromBundle(...);
   *** toBundle(...);
}

-keep class androidx.browser.trusted.sharing.ShareTarget$EncodingType
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$EncodingType {
}

-keep class androidx.browser.trusted.sharing.ShareTarget$FileFormField
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$FileFormField {
   <init>(...);
}

-keep class androidx.browser.trusted.sharing.ShareTarget$Params
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$Params {
   <init>(...);
}

-keep class androidx.browser.trusted.sharing.ShareTarget$RequestMethod
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget$RequestMethod {
}

-keep class androidx.browser.trusted.sharing.ShareTarget
-keepclassmembers class androidx.browser.trusted.sharing.ShareTarget {
   <init>(...);
   *** fromBundle(...);
   *** toBundle(...);
}

-keep class androidx.browser.browseractions.BrowserActionItem
-keepclassmembers class androidx.browser.browseractions.BrowserActionItem {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAction(...);
   *** getIconId(...);
   *** getIconUri(...);
   *** getTitle(...);
}

-keep class androidx.browser.browseractions.BrowserActionsFallbackMenuView
-keepclassmembers class androidx.browser.browseractions.BrowserActionsFallbackMenuView {
   <init>(...);
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsItemId {
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$BrowserActionsUrlType {
}

-keep class androidx.browser.browseractions.BrowserActionsIntent$Builder
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent$Builder {
   <init>(...);
   *** build(...);
   *** setCustomItems(...);
   *** setCustomItems(...);
   *** setOnItemSelectedAction(...);
   *** setUrlType(...);
}

-keep class androidx.browser.browseractions.BrowserActionsIntent
-keepclassmembers class androidx.browser.browseractions.BrowserActionsIntent {
   *** getIntent(...);
   *** getBrowserActionsIntentHandlers(...);
   *** getCreatorPackageName(...);
   *** getUntrustedCreatorPackageName(...);
   *** launchIntent(...);
   *** openBrowserAction(...);
   *** openBrowserAction(...);
   *** parseBrowserActionItems(...);
}

-keep class androidx.browser.browseractions.BrowserServiceFileProvider
-keepclassmembers class androidx.browser.browseractions.BrowserServiceFileProvider {
   <init>(...);
   *** grantReadPermission(...);
   *** loadBitmap(...);
   *** saveBitmap(...);
}

-keep class androidx.browser.customtabs.CustomTabsClient
-keepclassmembers class androidx.browser.customtabs.CustomTabsClient {
   *** attachSession(...);
   *** bindCustomTabsService(...);
   *** bindCustomTabsServicePreservePriority(...);
   *** connectAndInitialize(...);
   *** extraCommand(...);
   *** getPackageName(...);
   *** getPackageName(...);
   *** newPendingSession(...);
   *** newSession(...);
   *** newSession(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabColorSchemeParams$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabColorSchemeParams$Builder {
   <init>(...);
   *** build(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setSecondaryToolbarColor(...);
   *** setToolbarColor(...);
}

-keep class androidx.browser.customtabs.CustomTabColorSchemeParams
-keepclassmembers class androidx.browser.customtabs.CustomTabColorSchemeParams {
}

-keep class androidx.browser.customtabs.CustomTabsCallback$ActivityLayoutState
-keepclassmembers class androidx.browser.customtabs.CustomTabsCallback$ActivityLayoutState {
}

-keep class androidx.browser.customtabs.CustomTabsCallback
-keepclassmembers class androidx.browser.customtabs.CustomTabsCallback {
   <init>(...);
   *** extraCallback(...);
   *** extraCallbackWithResult(...);
   *** onActivityLayout(...);
   *** onActivityResized(...);
   *** onMessageChannelReady(...);
   *** onMinimized(...);
   *** onNavigationEvent(...);
   *** onPostMessage(...);
   *** onRelationshipValidationResult(...);
   *** onUnminimized(...);
   *** onWarmupCompleted(...);
}

-keep class androidx.browser.customtabs.CustomTabsFeatures$CustomTabsFeature
-keepclassmembers class androidx.browser.customtabs.CustomTabsFeatures$CustomTabsFeature {
}

-keep class androidx.browser.customtabs.CustomTabsFeatures
-keepclassmembers class androidx.browser.customtabs.CustomTabsFeatures {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ActivityHeightResizeBehavior
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ActivityHeightResizeBehavior {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ActivitySideSheetDecorationType
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ActivitySideSheetDecorationType {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ActivitySideSheetPosition
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ActivitySideSheetPosition {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ActivitySideSheetRoundedCornersPosition
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ActivitySideSheetRoundedCornersPosition {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$Builder
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$Builder {
   <init>(...);
   <init>(...);
   *** addDefaultShareMenuItem(...);
   *** addMenuItem(...);
   *** addToolbarItem(...);
   *** build(...);
   *** enableUrlBarHiding(...);
   *** setActionButton(...);
   *** setActionButton(...);
   *** setActivitySideSheetBreakpointDp(...);
   *** setActivitySideSheetDecorationType(...);
   *** setActivitySideSheetMaximizationEnabled(...);
   *** setActivitySideSheetPosition(...);
   *** setActivitySideSheetRoundedCornersPosition(...);
   *** setBackgroundInteractionEnabled(...);
   *** setBookmarksButtonEnabled(...);
   *** setCloseButtonIcon(...);
   *** setCloseButtonPosition(...);
   *** setColorScheme(...);
   *** setColorSchemeParams(...);
   *** setDefaultColorSchemeParams(...);
   *** setDefaultShareMenuItemEnabled(...);
   *** setDownloadButtonEnabled(...);
   *** setExitAnimations(...);
   *** setInitialActivityHeightPx(...);
   *** setInitialActivityHeightPx(...);
   *** setInitialActivityWidthPx(...);
   *** setInstantAppsEnabled(...);
   *** setNavigationBarColor(...);
   *** setNavigationBarDividerColor(...);
   *** setPendingSession(...);
   *** setSecondaryToolbarColor(...);
   *** setSecondaryToolbarSwipeUpGesture(...);
   *** setSecondaryToolbarViews(...);
   *** setSendToExternalDefaultHandlerEnabled(...);
   *** setSession(...);
   *** setShareIdentityEnabled(...);
   *** setShareState(...);
   *** setShowTitle(...);
   *** setStartAnimations(...);
   *** setToolbarColor(...);
   *** setToolbarCornerRadiusDp(...);
   *** setTranslateLocale(...);
   *** setUrlBarHidingEnabled(...);
}

-keep class androidx.browser.customtabs.CustomTabsIntent$CloseButtonPosition
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$CloseButtonPosition {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ColorScheme
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ColorScheme {
}

-keep class androidx.browser.customtabs.CustomTabsIntent$ShareState
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent$ShareState {
}

-keep class androidx.browser.customtabs.CustomTabsIntent
-keepclassmembers class androidx.browser.customtabs.CustomTabsIntent {
   *** getMaxToolbarItems(...);
   *** getActivityResizeBehavior(...);
   *** getActivitySideSheetBreakpointDp(...);
   *** getActivitySideSheetDecorationType(...);
   *** getActivitySideSheetPosition(...);
   *** getActivitySideSheetRoundedCornersPosition(...);
   *** getCloseButtonPosition(...);
   *** getColorSchemeParams(...);
   *** getInitialActivityHeightPx(...);
   *** getInitialActivityWidthPx(...);
   *** getSecondaryToolbarSwipeUpGesture(...);
   *** getToolbarCornerRadiusDp(...);
   *** getTranslateLocale(...);
   *** isActivitySideSheetMaximizationEnabled(...);
   *** isBackgroundInteractionEnabled(...);
   *** isBookmarksButtonEnabled(...);
   *** isDownloadButtonEnabled(...);
   *** isSendToExternalDefaultHandlerEnabled(...);
   *** launchUrl(...);
   *** setAlwaysUseBrowserUI(...);
   *** shouldAlwaysUseBrowserUI(...);
}

-keep class androidx.browser.customtabs.CustomTabsService$FilePurpose
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$FilePurpose {
}

-keep class androidx.browser.customtabs.CustomTabsService$Relation
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$Relation {
}

-keep class androidx.browser.customtabs.CustomTabsService$Result
-keepclassmembers class androidx.browser.customtabs.CustomTabsService$Result {
}

-keep class androidx.browser.customtabs.CustomTabsService
-keepclassmembers class androidx.browser.customtabs.CustomTabsService {
   <init>(...);
   *** cleanUpSession(...);
   *** extraCommand(...);
   *** isEngagementSignalsApiAvailable(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** onBind(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannel(...);
   *** setEngagementSignalsCallback(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsService
-keepclassmembers class androidx.browser.customtabs.CustomTabsService {
   *** extraCommand(...);
   *** mayLaunchUrl(...);
   *** newSession(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** updateVisuals(...);
   *** validateRelationship(...);
   *** warmup(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   <init>(...);
   *** onCustomTabsServiceConnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsServiceConnection
-keepclassmembers class androidx.browser.customtabs.CustomTabsServiceConnection {
   *** onCustomTabsServiceConnected(...);
   *** onServiceDisconnected(...);
}

-keep class androidx.browser.customtabs.CustomTabsSession$PendingSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession$PendingSession {
}

-keep class androidx.browser.customtabs.CustomTabsSession
-keepclassmembers class androidx.browser.customtabs.CustomTabsSession {
   *** createMockSessionForTesting(...);
   *** isEngagementSignalsApiAvailable(...);
   *** mayLaunchUrl(...);
   *** postMessage(...);
   *** receiveFile(...);
   *** requestPostMessageChannel(...);
   *** requestPostMessageChannel(...);
   *** setActionButton(...);
   *** setEngagementSignalsCallback(...);
   *** setEngagementSignalsCallback(...);
   *** setSecondaryToolbarSwipeUpGesture(...);
   *** setSecondaryToolbarViews(...);
   *** setToolbarItem(...);
   *** validateRelationship(...);
}

-keep class androidx.browser.customtabs.CustomTabsSessionToken
-keepclassmembers class androidx.browser.customtabs.CustomTabsSessionToken {
   *** getCallback(...);
   *** hasCallback(...);
   *** hasId(...);
   *** createMockSessionTokenForTesting(...);
   *** getSessionTokenFromIntent(...);
   *** isAssociatedWith(...);
}

-keep class androidx.browser.customtabs.EngagementSignalsCallback
-keepclassmembers class androidx.browser.customtabs.EngagementSignalsCallback {
}

-keep class androidx.browser.customtabs.ExperimentalMinimizationCallback
-keepclassmembers class androidx.browser.customtabs.ExperimentalMinimizationCallback {
}

-keep class androidx.browser.customtabs.PostMessageBackend
-keepclassmembers class androidx.browser.customtabs.PostMessageBackend {
}

-keep class androidx.browser.customtabs.PostMessageService
-keepclassmembers class androidx.browser.customtabs.PostMessageService {
   <init>(...);
   *** onBind(...);
}

-keep class androidx.browser.customtabs.PostMessageServiceConnection
-keepclassmembers class androidx.browser.customtabs.PostMessageServiceConnection {
   <init>(...);
   *** bindSessionToPostMessageService(...);
   *** bindSessionToPostMessageService(...);
   *** cleanup(...);
   *** notifyMessageChannelReady(...);
   *** onDisconnectChannel(...);
   *** onNotifyMessageChannelReady(...);
   *** onPostMessage(...);
   *** onPostMessageServiceConnected(...);
   *** onPostMessageServiceDisconnected(...);
   *** onServiceConnected(...);
   *** onServiceDisconnected(...);
   *** postMessage(...);
   *** setPackageName(...);
   *** unbindFromContext(...);
}

-keep class androidx.browser.customtabs.PostMessageServiceConnection
-keepclassmembers class androidx.browser.customtabs.PostMessageServiceConnection {
}

-keep class androidx.browser.customtabs.TrustedWebUtils
-keepclassmembers class androidx.browser.customtabs.TrustedWebUtils {
   *** areSplashScreensSupported(...);
   *** launchAsTrustedWebActivity(...);
   *** launchBrowserSiteSettings(...);
   *** transferSplashImage(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

# ACW for Xamarin.AndroidX.Collection.Jvm
-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** getIsEmpty(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.Concurrent.Futures
-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
   <init>(...);
   *** isCancelled(...);
   *** isDone(...);
   *** addListener(...);
   *** afterDone(...);
   *** cancel(...);
   *** get(...);
   *** get(...);
   *** interruptTask(...);
   *** pendingToString(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
   *** wasInterrupted(...);
}

-keep class androidx.concurrent.futures.AbstractResolvableFuture
-keepclassmembers class androidx.concurrent.futures.AbstractResolvableFuture {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Completer
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Completer {
   *** addCancellationListener(...);
   *** set(...);
   *** setCancelled(...);
   *** setException(...);
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter$Resolver {
}

-keep class androidx.concurrent.futures.CallbackToFutureAdapter
-keepclassmembers class androidx.concurrent.futures.CallbackToFutureAdapter {
   *** getFuture(...);
}

-keep class androidx.concurrent.futures.DirectExecutor
-keepclassmembers class androidx.concurrent.futures.DirectExecutor {
   *** execute(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.concurrent.futures.ResolvableFuture
-keepclassmembers class androidx.concurrent.futures.ResolvableFuture {
   *** create(...);
   *** set(...);
   *** setException(...);
   *** setFuture(...);
}

# ACW for Xamarin.AndroidX.ConstraintLayout
-keep class androidx.constraintlayout.widget.Barrier
-keepclassmembers class androidx.constraintlayout.widget.Barrier {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAllowsGoneWidget(...);
   *** setAllowsGoneWidget(...);
   *** getMargin(...);
   *** setMargin(...);
   *** getType(...);
   *** setType(...);
   *** allowsGoneWidget(...);
   *** setDpMargin(...);
}

-keep class androidx.constraintlayout.widget.ConstraintAttribute$AttributeType
-keepclassmembers class androidx.constraintlayout.widget.ConstraintAttribute$AttributeType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.widget.ConstraintAttribute
-keepclassmembers class androidx.constraintlayout.widget.ConstraintAttribute {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getColorValue(...);
   *** setColorValue(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
   *** getIntegerValue(...);
   *** isBooleanValue(...);
   *** isContinuous(...);
   *** isMethod(...);
   *** getName(...);
   *** getStringValue(...);
   *** setStringValue(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** applyCustom(...);
   *** diff(...);
   *** extractAttributes(...);
   *** getValuesToInterpolate(...);
   *** numberOfInterpolatedValues(...);
   *** parse(...);
   *** setAttributes(...);
   *** setIntValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.widget.ConstraintHelper
-keepclassmembers class androidx.constraintlayout.widget.ConstraintHelper {
   <init>(...);
   <init>(...);
   <init>(...);
   *** addView(...);
   *** applyLayoutFeatures(...);
   *** applyLayoutFeatures(...);
   *** applyLayoutFeaturesInConstraintSet(...);
   *** containsId(...);
   *** getReferencedIds(...);
   *** getViews(...);
   *** indexFromId(...);
   *** init(...);
   *** loadParameters(...);
   *** onDraw(...);
   *** removeView(...);
   *** resolveRtl(...);
   *** setIds(...);
   *** setReferenceTags(...);
   *** setReferencedIds(...);
   *** updatePostConstraints(...);
   *** updatePostLayout(...);
   *** updatePostMeasure(...);
   *** updatePreDraw(...);
   *** updatePreLayout(...);
   *** updatePreLayout(...);
   *** validateParams(...);
}

-keep class androidx.constraintlayout.widget.ConstraintHelper
-keepclassmembers class androidx.constraintlayout.widget.ConstraintHelper {
}

-keep class androidx.constraintlayout.widget.ConstraintLayout$LayoutParams
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConstraintTag(...);
   *** getConstraintWidget(...);
   *** reset(...);
   *** setWidgetDebugName(...);
   *** validate(...);
}

-keep class androidx.constraintlayout.widget.ConstraintLayout
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isRtl(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getOptimizationLevel(...);
   *** setOptimizationLevel(...);
   *** getSceneString(...);
   *** getSharedValues(...);
   *** applyConstraintsFromLayoutParams(...);
   *** fillMetrics(...);
   *** getDesignInformation(...);
   *** getViewById(...);
   *** getViewWidget(...);
   *** loadLayoutDescription(...);
   *** onLayout(...);
   *** parseLayoutDescription(...);
   *** resolveMeasuredDimension(...);
   *** resolveSystem(...);
   *** setConstraintSet(...);
   *** setDesignInformation(...);
   *** setOnConstraintsChanged(...);
   *** setSelfDimensionBehaviour(...);
   *** setState(...);
}

-keep class androidx.constraintlayout.widget.ConstraintLayoutStates
-keepclassmembers class androidx.constraintlayout.widget.ConstraintLayoutStates {
   *** needsToChange(...);
   *** setOnConstraintsChanged(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.widget.ConstraintProperties
-keepclassmembers class androidx.constraintlayout.widget.ConstraintProperties {
   <init>(...);
   *** addToHorizontalChain(...);
   *** addToHorizontalChainRTL(...);
   *** addToVerticalChain(...);
   *** alpha(...);
   *** apply(...);
   *** center(...);
   *** centerHorizontally(...);
   *** centerHorizontally(...);
   *** centerHorizontallyRtl(...);
   *** centerHorizontallyRtl(...);
   *** centerVertically(...);
   *** centerVertically(...);
   *** connect(...);
   *** constrainDefaultHeight(...);
   *** constrainDefaultWidth(...);
   *** constrainHeight(...);
   *** constrainMaxHeight(...);
   *** constrainMaxWidth(...);
   *** constrainMinHeight(...);
   *** constrainMinWidth(...);
   *** constrainWidth(...);
   *** dimensionRatio(...);
   *** elevation(...);
   *** goneMargin(...);
   *** horizontalBias(...);
   *** horizontalChainStyle(...);
   *** horizontalWeight(...);
   *** margin(...);
   *** removeConstraints(...);
   *** removeFromHorizontalChain(...);
   *** removeFromVerticalChain(...);
   *** rotation(...);
   *** rotationX(...);
   *** rotationY(...);
   *** scaleX(...);
   *** scaleY(...);
   *** transformPivot(...);
   *** transformPivotX(...);
   *** transformPivotY(...);
   *** translation(...);
   *** translationX(...);
   *** translationY(...);
   *** translationZ(...);
   *** verticalBias(...);
   *** verticalChainStyle(...);
   *** verticalWeight(...);
   *** visibility(...);
}

-keep class androidx.constraintlayout.widget.Constraints$LayoutParams
-keepclassmembers class androidx.constraintlayout.widget.Constraints$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.constraintlayout.widget.Constraints
-keepclassmembers class androidx.constraintlayout.widget.Constraints {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getConstraintSet(...);
   *** onLayout(...);
}

-keep class androidx.constraintlayout.widget.ConstraintsChangedListener
-keepclassmembers class androidx.constraintlayout.widget.ConstraintsChangedListener {
   <init>(...);
   *** postLayoutChange(...);
   *** preLayoutChange(...);
}

-keep class androidx.constraintlayout.widget.ConstraintsChangedListener
-keepclassmembers class androidx.constraintlayout.widget.ConstraintsChangedListener {
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Constraint$Delta {
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Constraint
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Constraint {
   <init>(...);
   *** applyDelta(...);
   *** applyTo(...);
   *** clone(...);
   *** printDelta(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Layout
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Layout {
   <init>(...);
   *** copyFrom(...);
   *** dump(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Motion
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Motion {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$PropertySet
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$PropertySet {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet$Transform
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet$Transform {
   <init>(...);
   *** copyFrom(...);
}

-keep class androidx.constraintlayout.widget.ConstraintSet
-keepclassmembers class androidx.constraintlayout.widget.ConstraintSet {
   <init>(...);
   *** getCustomAttributeSet(...);
   *** isForceId(...);
   *** setForceId(...);
   *** addColorAttributes(...);
   *** addFloatAttributes(...);
   *** addIntAttributes(...);
   *** addStringAttributes(...);
   *** addToHorizontalChain(...);
   *** addToHorizontalChainRTL(...);
   *** addToVerticalChain(...);
   *** applyCustomAttributes(...);
   *** applyDeltaFrom(...);
   *** applyTo(...);
   *** applyToHelper(...);
   *** applyToLayoutParams(...);
   *** applyToWithoutCustom(...);
   *** buildDelta(...);
   *** center(...);
   *** centerHorizontally(...);
   *** centerHorizontally(...);
   *** centerHorizontallyRtl(...);
   *** centerHorizontallyRtl(...);
   *** centerVertically(...);
   *** centerVertically(...);
   *** clear(...);
   *** clear(...);
   *** clone(...);
   *** clone(...);
   *** clone(...);
   *** clone(...);
   *** connect(...);
   *** connect(...);
   *** constrainCircle(...);
   *** constrainDefaultHeight(...);
   *** constrainDefaultWidth(...);
   *** constrainHeight(...);
   *** constrainMaxHeight(...);
   *** constrainMaxWidth(...);
   *** constrainMinHeight(...);
   *** constrainMinWidth(...);
   *** constrainPercentHeight(...);
   *** constrainPercentWidth(...);
   *** constrainWidth(...);
   *** constrainedHeight(...);
   *** constrainedWidth(...);
   *** create(...);
   *** createBarrier(...);
   *** createHorizontalChain(...);
   *** createHorizontalChainRtl(...);
   *** createVerticalChain(...);
   *** dump(...);
   *** getApplyElevation(...);
   *** getConstraint(...);
   *** getHeight(...);
   *** getKnownIds(...);
   *** getParameters(...);
   *** getReferencedIds(...);
   *** getVisibility(...);
   *** getVisibilityMode(...);
   *** getWidth(...);
   *** load(...);
   *** load(...);
   *** parseColorAttributes(...);
   *** parseFloatAttributes(...);
   *** parseIntAttributes(...);
   *** parseStringAttributes(...);
   *** readFallback(...);
   *** readFallback(...);
   *** removeAttribute(...);
   *** removeFromHorizontalChain(...);
   *** removeFromVerticalChain(...);
   *** setAlpha(...);
   *** setApplyElevation(...);
   *** setBarrierType(...);
   *** setColorValue(...);
   *** setDimensionRatio(...);
   *** setEditorAbsoluteX(...);
   *** setEditorAbsoluteY(...);
   *** setElevation(...);
   *** setFloatValue(...);
   *** setGoneMargin(...);
   *** setGuidelineBegin(...);
   *** setGuidelineEnd(...);
   *** setGuidelinePercent(...);
   *** setHorizontalBias(...);
   *** setHorizontalChainStyle(...);
   *** setHorizontalWeight(...);
   *** setIntValue(...);
   *** setLayoutWrapBehavior(...);
   *** setMargin(...);
   *** setReferencedIds(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setStringValue(...);
   *** setTransformPivot(...);
   *** setTransformPivotX(...);
   *** setTransformPivotY(...);
   *** setTranslation(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setValidateOnParse(...);
   *** setVerticalBias(...);
   *** setVerticalChainStyle(...);
   *** setVerticalWeight(...);
   *** setVisibility(...);
   *** setVisibilityMode(...);
   *** writeState(...);
}

-keep class androidx.constraintlayout.widget.Group
-keepclassmembers class androidx.constraintlayout.widget.Group {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onAttachedToWindow(...);
}

-keep class androidx.constraintlayout.widget.Guideline
-keepclassmembers class androidx.constraintlayout.widget.Guideline {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** setFilterRedundantCalls(...);
   *** setGuidelineBegin(...);
   *** setGuidelineEnd(...);
   *** setGuidelinePercent(...);
}

-keep class androidx.constraintlayout.widget.Placeholder
-keepclassmembers class androidx.constraintlayout.widget.Placeholder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContent(...);
   *** getEmptyVisibility(...);
   *** setEmptyVisibility(...);
   *** onDraw(...);
   *** setContentId(...);
   *** updatePostMeasure(...);
   *** updatePreLayout(...);
}

-keep class androidx.constraintlayout.widget.ReactiveGuide
-keepclassmembers class androidx.constraintlayout.widget.ReactiveGuide {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getApplyToConstraintSetId(...);
   *** setApplyToConstraintSetId(...);
   *** getAttributeId(...);
   *** setAttributeId(...);
   *** isAnimatingChange(...);
   *** onNewValue(...);
   *** setAnimateChange(...);
   *** setGuidelineBegin(...);
   *** setGuidelineEnd(...);
   *** setGuidelinePercent(...);
}

-keep class androidx.constraintlayout.widget.SharedValues$SharedValuesListener
-keepclassmembers class androidx.constraintlayout.widget.SharedValues$SharedValuesListener {
}

-keep class mono.androidx.constraintlayout.widget.SharedValues_SharedValuesListenerImplementor
-keepclassmembers class mono.androidx.constraintlayout.widget.SharedValues_SharedValuesListenerImplementor {
}

-keep class androidx.constraintlayout.widget.SharedValues
-keepclassmembers class androidx.constraintlayout.widget.SharedValues {
   <init>(...);
   *** addListener(...);
   *** clearListeners(...);
   *** fireNewValue(...);
   *** getValue(...);
   *** removeListener(...);
   *** removeListener(...);
}

-keep class androidx.constraintlayout.widget.StateSet
-keepclassmembers class androidx.constraintlayout.widget.StateSet {
   <init>(...);
   *** convertToConstraintSet(...);
   *** needsToChange(...);
   *** setOnConstraintsChanged(...);
   *** stateGetConstraintID(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.widget.VirtualLayout
-keepclassmembers class androidx.constraintlayout.widget.VirtualLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onAttachedToWindow(...);
   *** onMeasure(...);
}

-keep class androidx.constraintlayout.widget.VirtualLayout
-keepclassmembers class androidx.constraintlayout.widget.VirtualLayout {
}

-keep class androidx.constraintlayout.utils.widget.ImageFilterButton
-keepclassmembers class androidx.constraintlayout.utils.widget.ImageFilterButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContrast(...);
   *** setContrast(...);
   *** getCrossfade(...);
   *** setCrossfade(...);
   *** getImagePanX(...);
   *** setImagePanX(...);
   *** getImagePanY(...);
   *** setImagePanY(...);
   *** getImageRotate(...);
   *** setImageRotate(...);
   *** getImageZoom(...);
   *** setImageZoom(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
   *** getSaturation(...);
   *** setSaturation(...);
   *** getWarmth(...);
   *** setWarmth(...);
   *** setAltImageResource(...);
   *** setBrightness(...);
}

-keep class androidx.constraintlayout.utils.widget.ImageFilterView
-keepclassmembers class androidx.constraintlayout.utils.widget.ImageFilterView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBrightness(...);
   *** setBrightness(...);
   *** getContrast(...);
   *** setContrast(...);
   *** getCrossfade(...);
   *** setCrossfade(...);
   *** getImagePanX(...);
   *** setImagePanX(...);
   *** getImagePanY(...);
   *** setImagePanY(...);
   *** getImageRotate(...);
   *** setImageRotate(...);
   *** getImageZoom(...);
   *** setImageZoom(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
   *** getSaturation(...);
   *** setSaturation(...);
   *** getWarmth(...);
   *** setWarmth(...);
   *** setAltImageResource(...);
}

-keep class androidx.constraintlayout.utils.widget.MockView
-keepclassmembers class androidx.constraintlayout.utils.widget.MockView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onDraw(...);
}

-keep class androidx.constraintlayout.utils.widget.MotionButton
-keepclassmembers class androidx.constraintlayout.utils.widget.MotionButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
}

-keep class androidx.constraintlayout.utils.widget.MotionLabel
-keepclassmembers class androidx.constraintlayout.utils.widget.MotionLabel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getRound(...);
   *** setRound(...);
   *** getRoundPercent(...);
   *** setRoundPercent(...);
   *** getScaleFromTextSize(...);
   *** setScaleFromTextSize(...);
   *** getTextBackgroundPanX(...);
   *** setTextBackgroundPanX(...);
   *** getTextBackgroundPanY(...);
   *** setTextBackgroundPanY(...);
   *** getTextBackgroundRotate(...);
   *** setTextBackgroundRotate(...);
   *** getTextBackgroundZoom(...);
   *** setTextBackgroundZoom(...);
   *** getTextOutlineColor(...);
   *** setTextOutlineColor(...);
   *** getTextPanX(...);
   *** setTextPanX(...);
   *** getTextPanY(...);
   *** setTextPanY(...);
   *** getTextureHeight(...);
   *** setTextureHeight(...);
   *** getTextureWidth(...);
   *** setTextureWidth(...);
   *** getTypeface(...);
   *** setTypeface(...);
   *** layout(...);
   *** setGravity(...);
   *** setText(...);
   *** setTextFillColor(...);
   *** setTextOutlineThickness(...);
   *** setTextSize(...);
}

-keep class androidx.constraintlayout.utils.widget.MotionTelltales
-keepclassmembers class androidx.constraintlayout.utils.widget.MotionTelltales {
   <init>(...);
   <init>(...);
   <init>(...);
   *** setText(...);
}

-keep class androidx.constraintlayout.helper.widget.Carousel$Adapter
-keepclassmembers class androidx.constraintlayout.helper.widget.Carousel$Adapter {
}

-keep class androidx.constraintlayout.helper.widget.Carousel
-keepclassmembers class androidx.constraintlayout.helper.widget.Carousel {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCurrentIndex(...);
   *** jumpToIndex(...);
   *** refresh(...);
   *** setAdapter(...);
   *** transitionToIndex(...);
}

-keep class androidx.constraintlayout.helper.widget.CircularFlow
-keepclassmembers class androidx.constraintlayout.helper.widget.CircularFlow {
   <init>(...);
   <init>(...);
   <init>(...);
   *** addViewToCircularFlow(...);
   *** getAngles(...);
   *** getRadius(...);
   *** isUpdatable(...);
   *** removeElementFromArray(...);
   *** removeElementFromArray(...);
   *** setDefaultAngle(...);
   *** setDefaultRadius(...);
   *** updateAngle(...);
   *** updateRadius(...);
   *** updateReference(...);
}

-keep class androidx.constraintlayout.helper.widget.Flow
-keepclassmembers class androidx.constraintlayout.helper.widget.Flow {
   <init>(...);
   <init>(...);
   <init>(...);
   *** setFirstHorizontalBias(...);
   *** setFirstHorizontalStyle(...);
   *** setFirstVerticalBias(...);
   *** setFirstVerticalStyle(...);
   *** setHorizontalAlign(...);
   *** setHorizontalBias(...);
   *** setHorizontalGap(...);
   *** setHorizontalStyle(...);
   *** setLastHorizontalBias(...);
   *** setLastHorizontalStyle(...);
   *** setLastVerticalBias(...);
   *** setLastVerticalStyle(...);
   *** setMaxElementsWrap(...);
   *** setOrientation(...);
   *** setPadding(...);
   *** setPaddingBottom(...);
   *** setPaddingLeft(...);
   *** setPaddingRight(...);
   *** setPaddingTop(...);
   *** setVerticalAlign(...);
   *** setVerticalBias(...);
   *** setVerticalGap(...);
   *** setVerticalStyle(...);
   *** setWrapMode(...);
}

-keep class androidx.constraintlayout.helper.widget.Layer
-keepclassmembers class androidx.constraintlayout.helper.widget.Layer {
   <init>(...);
   <init>(...);
   <init>(...);
   *** calcCenters(...);
}

-keep class androidx.constraintlayout.helper.widget.MotionEffect
-keepclassmembers class androidx.constraintlayout.helper.widget.MotionEffect {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.constraintlayout.helper.widget.MotionPlaceholder
-keepclassmembers class androidx.constraintlayout.helper.widget.MotionPlaceholder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.constraintlayout.motion.utils.CustomSupport
-keepclassmembers class androidx.constraintlayout.motion.utils.CustomSupport {
   <init>(...);
   *** setInterpolatedValue(...);
}

-keep class androidx.constraintlayout.motion.utils.StopLogic
-keepclassmembers class androidx.constraintlayout.motion.utils.StopLogic {
   <init>(...);
   *** isStopped(...);
   *** getVelocity(...);
   *** config(...);
   *** debug(...);
   *** getInterpolation(...);
   *** getVelocity(...);
   *** springConfig(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewOscillator$PathRotateSet {
   <init>(...);
   *** setPathRotate(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewOscillator
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewOscillator {
   <init>(...);
   *** makeSpline(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewOscillator
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewOscillator {
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline$CustomSet
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline$PathRotate
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline$PathRotate {
   <init>(...);
   *** setPathRotate(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline {
   <init>(...);
   *** makeCustomSpline(...);
   *** makeSpline(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewSpline
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewSpline {
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewState
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewState {
   <init>(...);
   *** getState(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle$PathRotate {
   <init>(...);
   *** setPathRotate(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle {
   <init>(...);
   *** get(...);
   *** makeCustomSpline(...);
   *** makeSpline(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.utils.ViewTimeCycle
-keepclassmembers class androidx.constraintlayout.motion.utils.ViewTimeCycle {
   *** setProperty(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout$MotionTracker {
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout$TransitionListener {
}

-keep class mono.androidx.constraintlayout.motion.widget.MotionLayout_TransitionListenerImplementor
-keepclassmembers class mono.androidx.constraintlayout.motion.widget.MotionLayout_TransitionListenerImplementor {
}

-keep class androidx.constraintlayout.motion.widget.MotionLayout
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCurrentState(...);
   *** getDefinedTransitions(...);
   *** isDelayedApplicationOfInitialState(...);
   *** setDelayedApplicationOfInitialState(...);
   *** getDesignTool(...);
   *** getEndState(...);
   *** isInteractionEnabled(...);
   *** setInteractionEnabled(...);
   *** isInRotation(...);
   *** getNanoTime(...);
   *** getProgress(...);
   *** setProgress(...);
   *** getScene(...);
   *** setScene(...);
   *** getStartState(...);
   *** getTargetPosition(...);
   *** getTransitionState(...);
   *** setTransitionState(...);
   *** getTransitionTimeMs(...);
   *** getVelocity(...);
   *** applyViewTransition(...);
   *** cloneConstraintSet(...);
   *** enableTransition(...);
   *** enableViewTransition(...);
   *** fireTransitionCompleted(...);
   *** fireTrigger(...);
   *** getConstraintSet(...);
   *** getConstraintSetIds(...);
   *** getDebugMode(...);
   *** getTransition(...);
   *** getViewVelocity(...);
   *** isViewTransitionEnabled(...);
   *** jumpToState(...);
   *** obtainVelocityTracker(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** rebuildMotion(...);
   *** rebuildScene(...);
   *** removeTransitionListener(...);
   *** rotateTo(...);
   *** scheduleTransitionTo(...);
   *** setDebugMode(...);
   *** setInterpolatedProgress(...);
   *** setOnHide(...);
   *** setOnShow(...);
   *** setProgress(...);
   *** setTransition(...);
   *** setTransition(...);
   *** setTransition(...);
   *** setTransitionDuration(...);
   *** setTransitionListener(...);
   *** touchAnimateTo(...);
   *** touchSpringTo(...);
   *** transitionToEnd(...);
   *** transitionToEnd(...);
   *** transitionToStart(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** transitionToState(...);
   *** updateState(...);
   *** updateState(...);
   *** updateStateAnimate(...);
   *** viewTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.Debug
-keepclassmembers class androidx.constraintlayout.motion.widget.Debug {
   <init>(...);
   *** getLoc(...);
   *** getLocation(...);
   *** getLocation2(...);
   *** dumpLayoutParams(...);
   *** dumpLayoutParams(...);
   *** dumpPoc(...);
   *** getActionType(...);
   *** getCallFrom(...);
   *** getName(...);
   *** getName(...);
   *** getName(...);
   *** getState(...);
   *** getState(...);
   *** logStack(...);
   *** printStack(...);
}

-keep class androidx.constraintlayout.motion.widget.DesignTool
-keepclassmembers class androidx.constraintlayout.motion.widget.DesignTool {
   <init>(...);
   *** getEndState(...);
   *** isInTransition(...);
   *** getProgress(...);
   *** getStartState(...);
   *** getState(...);
   *** setState(...);
   *** getTransitionTimeMs(...);
   *** designAccess(...);
   *** disableAutoTransition(...);
   *** dumpConstraintSet(...);
   *** getAnimationKeyFrames(...);
   *** getAnimationPath(...);
   *** getAnimationRectangles(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePosition(...);
   *** getKeyFramePositions(...);
   *** getKeyframe(...);
   *** getKeyframe(...);
   *** getKeyframeAtLocation(...);
   *** getPositionKeyframe(...);
   *** setAttributes(...);
   *** setKeyFrame(...);
   *** setKeyFramePosition(...);
   *** setKeyframe(...);
   *** setToolPosition(...);
   *** setTransition(...);
   *** setViewDebug(...);
}

-keep class androidx.constraintlayout.motion.widget.Animatable
-keepclassmembers class androidx.constraintlayout.motion.widget.Animatable {
}

-keep class androidx.constraintlayout.motion.widget.CustomFloatAttributes
-keepclassmembers class androidx.constraintlayout.motion.widget.CustomFloatAttributes {
}

-keep class androidx.constraintlayout.motion.widget.FloatLayout
-keepclassmembers class androidx.constraintlayout.motion.widget.FloatLayout {
}

-keep class androidx.constraintlayout.motion.widget.MotionHelperInterface
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionHelperInterface {
}

-keep class androidx.constraintlayout.motion.widget.Key
-keepclassmembers class androidx.constraintlayout.motion.widget.Key {
   <init>(...);
   *** getFramePosition(...);
   *** setFramePosition(...);
   *** addValues(...);
   *** clone(...);
   *** copy(...);
   *** setInterpolation(...);
   *** setValue(...);
   *** setViewId(...);
}

-keep class androidx.constraintlayout.motion.widget.Key
-keepclassmembers class androidx.constraintlayout.motion.widget.Key {
   *** addValues(...);
   *** clone(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyAttributes
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyAttributes {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyCycle
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyCycle {
   <init>(...);
   *** addCycleValues(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getValue(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyFrames
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyFrames {
   <init>(...);
   <init>(...);
   *** getKeys(...);
   *** addAllFrames(...);
   *** addFrames(...);
   *** addKey(...);
   *** getKeyFramesForView(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyPosition
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyPosition {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** intersects(...);
   *** load(...);
   *** positionAttributes(...);
   *** setType(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyTimeCycle
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyTimeCycle {
   <init>(...);
   *** addTimeValues(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.KeyTrigger
-keepclassmembers class androidx.constraintlayout.motion.widget.KeyTrigger {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** conditionallyFire(...);
   *** getAttributeNames(...);
   *** load(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionController
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionController {
   *** getAnimateRelativeTo(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** getDrawPath(...);
   *** setDrawPath(...);
   *** getFinalHeight(...);
   *** getFinalWidth(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** getStartHeight(...);
   *** getStartWidth(...);
   *** getStartX(...);
   *** getStartY(...);
   *** getTransformPivotTarget(...);
   *** setTransformPivotTarget(...);
   *** getView(...);
   *** setView(...);
   *** addKey(...);
   *** getCenter(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePositions(...);
   *** remeasure(...);
   *** setPathMotionArc(...);
   *** setStartState(...);
   *** setup(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionHelper
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionHelper {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isDecorator(...);
   *** isUseOnHide(...);
   *** isUsedOnShow(...);
   *** getProgress(...);
   *** setProgress(...);
   *** onFinishedMotionScene(...);
   *** onPostDraw(...);
   *** onPreDraw(...);
   *** onPreSetup(...);
   *** onTransitionChange(...);
   *** onTransitionCompleted(...);
   *** onTransitionStarted(...);
   *** onTransitionTrigger(...);
   *** setProgress(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionInterpolator
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionInterpolator {
   <init>(...);
   *** getVelocity(...);
   *** getInterpolation(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionInterpolator
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionInterpolator {
   *** getVelocity(...);
   *** getInterpolation(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene$Transition$TransitionOnClick {
   <init>(...);
   <init>(...);
   *** addOnClickListeners(...);
   *** onClick(...);
   *** removeOnClickListeners(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene$Transition
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene$Transition {
   <init>(...);
   *** getAutoTransition(...);
   *** setAutoTransition(...);
   *** getDuration(...);
   *** setDuration(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getEndConstraintSetId(...);
   *** getId(...);
   *** getKeyFrameList(...);
   *** getLayoutDuringTransition(...);
   *** setLayoutDuringTransition(...);
   *** getOnClickList(...);
   *** getPathMotionArc(...);
   *** setPathMotionArc(...);
   *** getStagger(...);
   *** setStagger(...);
   *** getStartConstraintSetId(...);
   *** getTouchResponse(...);
   *** addKeyFrame(...);
   *** addOnClick(...);
   *** addOnClick(...);
   *** debugString(...);
   *** isTransitionFlag(...);
   *** removeOnClick(...);
   *** setEnable(...);
   *** setInterpolatorInfo(...);
   *** setOnSwipe(...);
   *** setOnTouchUp(...);
   *** setTransitionFlag(...);
}

-keep class androidx.constraintlayout.motion.widget.MotionScene
-keepclassmembers class androidx.constraintlayout.motion.widget.MotionScene {
   <init>(...);
   *** getDefinedTransitions(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getInterpolator(...);
   *** getStaggered(...);
   *** addOnClickListeners(...);
   *** addTransition(...);
   *** applyViewTransition(...);
   *** bestTransitionFor(...);
   *** disableAutoTransition(...);
   *** enableViewTransition(...);
   *** gatPathMotionArc(...);
   *** getConstraintSet(...);
   *** getConstraintSetIds(...);
   *** getKeyFrames(...);
   *** getPathPercent(...);
   *** getTransitionById(...);
   *** getTransitionsWithState(...);
   *** isViewTransitionEnabled(...);
   *** lookUpConstraintId(...);
   *** lookUpConstraintName(...);
   *** onLayout(...);
   *** removeTransition(...);
   *** setConstraintSet(...);
   *** setKeyframe(...);
   *** setRtl(...);
   *** setTransition(...);
   *** stripID(...);
   *** validateLayout(...);
   *** viewTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.OnSwipe
-keepclassmembers class androidx.constraintlayout.motion.widget.OnSwipe {
   <init>(...);
   *** getAutoCompleteMode(...);
   *** setAutoCompleteMode(...);
   *** getDragDirection(...);
   *** getDragScale(...);
   *** getDragThreshold(...);
   *** getLimitBoundsTo(...);
   *** getMaxAcceleration(...);
   *** getMaxVelocity(...);
   *** getMoveWhenScrollAtTop(...);
   *** getNestedScrollFlags(...);
   *** getOnTouchUp(...);
   *** getRotationCenterId(...);
   *** getSpringBoundary(...);
   *** getSpringDamping(...);
   *** getSpringMass(...);
   *** getSpringStiffness(...);
   *** getSpringStopThreshold(...);
   *** getTouchAnchorId(...);
   *** getTouchAnchorSide(...);
   *** getTouchRegionId(...);
   *** setDragDirection(...);
   *** setDragScale(...);
   *** setDragThreshold(...);
   *** setLimitBoundsTo(...);
   *** setMaxAcceleration(...);
   *** setMaxVelocity(...);
   *** setMoveWhenScrollAtTop(...);
   *** setNestedScrollFlags(...);
   *** setOnTouchUp(...);
   *** setRotateCenter(...);
   *** setSpringBoundary(...);
   *** setSpringDamping(...);
   *** setSpringMass(...);
   *** setSpringStiffness(...);
   *** setSpringStopThreshold(...);
   *** setTouchAnchorId(...);
   *** setTouchAnchorSide(...);
   *** setTouchRegionId(...);
}

-keep class androidx.constraintlayout.motion.widget.TransitionAdapter
-keepclassmembers class androidx.constraintlayout.motion.widget.TransitionAdapter {
   <init>(...);
   *** onTransitionChange(...);
   *** onTransitionCompleted(...);
   *** onTransitionStarted(...);
   *** onTransitionTrigger(...);
}

-keep class androidx.constraintlayout.motion.widget.TransitionAdapter
-keepclassmembers class androidx.constraintlayout.motion.widget.TransitionAdapter {
}

-keep class androidx.constraintlayout.motion.widget.TransitionBuilder
-keepclassmembers class androidx.constraintlayout.motion.widget.TransitionBuilder {
   <init>(...);
   *** buildTransition(...);
   *** validate(...);
}

-keep class androidx.constraintlayout.motion.widget.ViewTransition
-keepclassmembers class androidx.constraintlayout.motion.widget.ViewTransition {
   *** getSharedValue(...);
   *** setSharedValue(...);
   *** getSharedValueCurrent(...);
   *** setSharedValueCurrent(...);
   *** getSharedValueID(...);
   *** setSharedValueID(...);
   *** getStateTransition(...);
   *** setStateTransition(...);
}

-keep class androidx.constraintlayout.motion.widget.ViewTransitionController
-keepclassmembers class androidx.constraintlayout.motion.widget.ViewTransitionController {
   <init>(...);
   *** add(...);
}

# ACW for Xamarin.AndroidX.ConstraintLayout.Core
-keep class androidx.constraintlayout.core.ArrayLinkedVariables
-keepclassmembers class androidx.constraintlayout.core.ArrayLinkedVariables {
   *** getCurrentSize(...);
   *** getHead(...);
   *** add(...);
   *** clear(...);
   *** contains(...);
   *** display(...);
   *** divideByAmount(...);
   *** get(...);
   *** getId(...);
   *** getNextIndice(...);
   *** getValue(...);
   *** getVariable(...);
   *** getVariableValue(...);
   *** indexOf(...);
   *** invert(...);
   *** put(...);
   *** remove(...);
   *** sizeInBytes(...);
   *** use(...);
}

-keep class androidx.constraintlayout.core.ArrayRow$ArrayRowVariables
-keepclassmembers class androidx.constraintlayout.core.ArrayRow$ArrayRowVariables {
}

-keep class androidx.constraintlayout.core.ArrayRow
-keepclassmembers class androidx.constraintlayout.core.ArrayRow {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** getKey(...);
   *** addError(...);
   *** addError(...);
   *** clear(...);
   *** createRowDimensionRatio(...);
   *** createRowEqualDimension(...);
   *** createRowEqualMatchDimensions(...);
   *** createRowEquals(...);
   *** createRowEquals(...);
   *** createRowGreaterThan(...);
   *** createRowGreaterThan(...);
   *** createRowLowerThan(...);
   *** createRowWithAngle(...);
   *** getPivotCandidate(...);
   *** pickPivot(...);
   *** reset(...);
   *** updateFromFinalVariable(...);
   *** updateFromRow(...);
   *** updateFromSynonymVariable(...);
   *** updateFromSystem(...);
}

-keep class androidx.constraintlayout.core.Cache
-keepclassmembers class androidx.constraintlayout.core.Cache {
   <init>(...);
}

-keep class androidx.constraintlayout.core.GoalRow
-keepclassmembers class androidx.constraintlayout.core.GoalRow {
   <init>(...);
}

-keep class androidx.constraintlayout.core.LinearSystem
-keepclassmembers class androidx.constraintlayout.core.LinearSystem {
   <init>(...);
   *** getCache(...);
   *** getMemoryUsed(...);
   *** getMetrics(...);
   *** getNumEquations(...);
   *** getNumVariables(...);
   *** addCenterPoint(...);
   *** addCentering(...);
   *** addConstraint(...);
   *** addEquality(...);
   *** addEquality(...);
   *** addGreaterBarrier(...);
   *** addGreaterThan(...);
   *** addLowerBarrier(...);
   *** addLowerThan(...);
   *** addRatio(...);
   *** addSynonym(...);
   *** createErrorVariable(...);
   *** createExtraVariable(...);
   *** createObjectVariable(...);
   *** createRow(...);
   *** createRowDimensionPercent(...);
   *** createSlackVariable(...);
   *** displayReadableRows(...);
   *** displayVariablesReadableRows(...);
   *** fillMetrics(...);
   *** getObjectVariableValue(...);
   *** minimize(...);
   *** removeRow(...);
   *** reset(...);
}

-keep class androidx.constraintlayout.core.Metrics
-keepclassmembers class androidx.constraintlayout.core.Metrics {
   <init>(...);
   *** reset(...);
}

-keep class androidx.constraintlayout.core.PriorityGoalRow
-keepclassmembers class androidx.constraintlayout.core.PriorityGoalRow {
   <init>(...);
}

-keep class androidx.constraintlayout.core.SolverVariable$Type
-keepclassmembers class androidx.constraintlayout.core.SolverVariable$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.SolverVariable
-keepclassmembers class androidx.constraintlayout.core.SolverVariable {
   <init>(...);
   <init>(...);
   *** getName(...);
   *** setName(...);
   *** addToRow(...);
   *** compareTo(...);
   *** removeFromRow(...);
   *** reset(...);
   *** setFinalValue(...);
   *** setSynonym(...);
   *** setType(...);
   *** updateReferencesWithNewDefinition(...);
}

-keep class androidx.constraintlayout.core.SolverVariableValues
-keepclassmembers class androidx.constraintlayout.core.SolverVariableValues {
   *** getCurrentSize(...);
   *** add(...);
   *** clear(...);
   *** contains(...);
   *** display(...);
   *** divideByAmount(...);
   *** get(...);
   *** getVariable(...);
   *** getVariableValue(...);
   *** indexOf(...);
   *** invert(...);
   *** put(...);
   *** remove(...);
   *** sizeInBytes(...);
   *** use(...);
}

-keep class androidx.constraintlayout.core.widgets.Barrier
-keepclassmembers class androidx.constraintlayout.core.widgets.Barrier {
   <init>(...);
   <init>(...);
   *** getAllowsGoneWidget(...);
   *** setAllowsGoneWidget(...);
   *** getBarrierType(...);
   *** setBarrierType(...);
   *** getMargin(...);
   *** setMargin(...);
   *** getOrientation(...);
   *** allSolved(...);
   *** allowsGoneWidget(...);
   *** markWidgets(...);
}

-keep class androidx.constraintlayout.core.widgets.Chain
-keepclassmembers class androidx.constraintlayout.core.widgets.Chain {
   <init>(...);
   *** applyChainConstraints(...);
}

-keep class androidx.constraintlayout.core.widgets.ChainHead
-keepclassmembers class androidx.constraintlayout.core.widgets.ChainHead {
   <init>(...);
   *** getFirst(...);
   *** getFirstMatchConstraintWidget(...);
   *** getFirstVisibleWidget(...);
   *** getHead(...);
   *** getLast(...);
   *** getLastMatchConstraintWidget(...);
   *** getLastVisibleWidget(...);
   *** getTotalWeight(...);
   *** define(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintAnchor$Type
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintAnchor$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintAnchor
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintAnchor {
   <init>(...);
   *** getDependents(...);
   *** getFinalValue(...);
   *** setFinalValue(...);
   *** hasCenteredDependents(...);
   *** hasDependents(...);
   *** hasFinalValue(...);
   *** isConnected(...);
   *** isSideAnchor(...);
   *** isVerticalAnchor(...);
   *** getMargin(...);
   *** setMargin(...);
   *** getOpposite(...);
   *** getOwner(...);
   *** getSolverVariable(...);
   *** getTarget(...);
   *** connect(...);
   *** connect(...);
   *** copyFrom(...);
   *** findDependents(...);
   *** getType(...);
   *** isConnectionAllowed(...);
   *** isConnectionAllowed(...);
   *** isSimilarDimensionConnection(...);
   *** isValidConnection(...);
   *** reset(...);
   *** resetFinalResolution(...);
   *** resetSolverVariable(...);
   *** setGoneMargin(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidget
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidget {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchors(...);
   *** isAnimated(...);
   *** setAnimated(...);
   *** getBaselineDistance(...);
   *** setBaselineDistance(...);
   *** getBottom(...);
   *** getCompanionWidget(...);
   *** setCompanionWidget(...);
   *** getContainerItemSkip(...);
   *** setContainerItemSkip(...);
   *** getDebugName(...);
   *** setDebugName(...);
   *** getDimensionRatio(...);
   *** getDimensionRatioSide(...);
   *** hasBaseline(...);
   *** setHasBaseline(...);
   *** hasDependencies(...);
   *** hasDimensionOverride(...);
   *** getHeight(...);
   *** setHeight(...);
   *** isHeightWrapContent(...);
   *** setHeightWrapContent(...);
   *** getHorizontalBiasPercent(...);
   *** setHorizontalBiasPercent(...);
   *** getHorizontalChainControlWidget(...);
   *** getHorizontalChainStyle(...);
   *** setHorizontalChainStyle(...);
   *** getHorizontalDimensionBehaviour(...);
   *** setHorizontalDimensionBehaviour(...);
   *** getHorizontalMargin(...);
   *** isInPlaceholder(...);
   *** setInPlaceholder(...);
   *** isInVirtualLayout(...);
   *** setInVirtualLayout(...);
   *** isHorizontalSolvingPassDone(...);
   *** isInHorizontalChain(...);
   *** isInVerticalChain(...);
   *** isResolvedHorizontally(...);
   *** isResolvedVertically(...);
   *** isRoot(...);
   *** isSpreadHeight(...);
   *** isSpreadWidth(...);
   *** isVerticalSolvingPassDone(...);
   *** getLastHorizontalMeasureSpec(...);
   *** getLastVerticalMeasureSpec(...);
   *** getLeft(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** isMeasureRequested(...);
   *** setMeasureRequested(...);
   *** getMinHeight(...);
   *** setMinHeight(...);
   *** getMinWidth(...);
   *** setMinWidth(...);
   *** getOptimizerWrapHeight(...);
   *** getOptimizerWrapWidth(...);
   *** getParent(...);
   *** setParent(...);
   *** getRight(...);
   *** getRootX(...);
   *** getRootY(...);
   *** getTop(...);
   *** getType(...);
   *** setType(...);
   *** getVerticalBiasPercent(...);
   *** setVerticalBiasPercent(...);
   *** getVerticalChainControlWidget(...);
   *** getVerticalChainStyle(...);
   *** setVerticalChainStyle(...);
   *** getVerticalDimensionBehaviour(...);
   *** setVerticalDimensionBehaviour(...);
   *** getVerticalMargin(...);
   *** getVisibility(...);
   *** setVisibility(...);
   *** getWidth(...);
   *** setWidth(...);
   *** isWidthWrapContent(...);
   *** setWidthWrapContent(...);
   *** getWrapBehaviorInParent(...);
   *** setWrapBehaviorInParent(...);
   *** addChildrenToSolverByDependency(...);
   *** addToSolver(...);
   *** allowedInBarrier(...);
   *** connect(...);
   *** connect(...);
   *** connect(...);
   *** connectCircularConstraint(...);
   *** copy(...);
   *** createObjectVariables(...);
   *** ensureMeasureRequested(...);
   *** ensureWidgetRuns(...);
   *** getAnchor(...);
   *** getBiasPercent(...);
   *** getDimensionBehaviour(...);
   *** getLength(...);
   *** getNextChainMember(...);
   *** getPreviousChainMember(...);
   *** getRun(...);
   *** getSceneString(...);
   *** getX(...);
   *** getY(...);
   *** getHasBaseline(...);
   *** hasDanglingDimension(...);
   *** hasResolvedTargets(...);
   *** immediateConnect(...);
   *** isInBarrier(...);
   *** markHorizontalSolvingPassDone(...);
   *** markVerticalSolvingPassDone(...);
   *** oppositeDimensionDependsOn(...);
   *** oppositeDimensionsTied(...);
   *** reset(...);
   *** resetAllConstraints(...);
   *** resetAnchor(...);
   *** resetAnchors(...);
   *** resetFinalResolution(...);
   *** resetSolverVariables(...);
   *** resetSolvingPassFlag(...);
   *** serialize(...);
   *** setDebugSolverName(...);
   *** setDimension(...);
   *** setDimensionRatio(...);
   *** setDimensionRatio(...);
   *** setFinalBaseline(...);
   *** setFinalFrame(...);
   *** setFinalHorizontal(...);
   *** setFinalLeft(...);
   *** setFinalTop(...);
   *** setFinalVertical(...);
   *** setFrame(...);
   *** setFrame(...);
   *** setGoneMargin(...);
   *** setHorizontalDimension(...);
   *** setHorizontalMatchStyle(...);
   *** setHorizontalWeight(...);
   *** setInBarrier(...);
   *** setLastMeasureSpec(...);
   *** setLength(...);
   *** setOffset(...);
   *** setOrigin(...);
   *** setVerticalDimension(...);
   *** setVerticalMatchStyle(...);
   *** setVerticalWeight(...);
   *** setX(...);
   *** setY(...);
   *** setupDimensionRatio(...);
   *** updateFromRuns(...);
   *** updateFromSolver(...);
}

-keep class androidx.constraintlayout.core.widgets.ConstraintWidgetContainer
-keepclassmembers class androidx.constraintlayout.core.widgets.ConstraintWidgetContainer {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getHorizontalGuidelines(...);
   *** isHeightMeasuredTooSmall(...);
   *** isWidthMeasuredTooSmall(...);
   *** getMeasurer(...);
   *** setMeasurer(...);
   *** getOptimizationLevel(...);
   *** setOptimizationLevel(...);
   *** isRtl(...);
   *** setRtl(...);
   *** getSystem(...);
   *** getVerticalGuidelines(...);
   *** addChildrenToSolver(...);
   *** addHorizontalWrapMaxVariable(...);
   *** addHorizontalWrapMinVariable(...);
   *** defineTerminalWidgets(...);
   *** directMeasure(...);
   *** directMeasureSetup(...);
   *** directMeasureWithOrientation(...);
   *** fillMetrics(...);
   *** handlesInternalConstraints(...);
   *** invalidateGraph(...);
   *** invalidateMeasures(...);
   *** measure(...);
   *** measure(...);
   *** optimizeFor(...);
   *** setPadding(...);
   *** setPass(...);
   *** updateChildrenFromSolver(...);
   *** updateHierarchy(...);
}

-keep class androidx.constraintlayout.core.widgets.Flow
-keepclassmembers class androidx.constraintlayout.core.widgets.Flow {
   <init>(...);
   *** getMaxElementsWrap(...);
   *** setFirstHorizontalBias(...);
   *** setFirstHorizontalStyle(...);
   *** setFirstVerticalBias(...);
   *** setFirstVerticalStyle(...);
   *** setHorizontalAlign(...);
   *** setHorizontalBias(...);
   *** setHorizontalGap(...);
   *** setHorizontalStyle(...);
   *** setLastHorizontalBias(...);
   *** setLastHorizontalStyle(...);
   *** setLastVerticalBias(...);
   *** setLastVerticalStyle(...);
   *** setMaxElementsWrap(...);
   *** setOrientation(...);
   *** setVerticalAlign(...);
   *** setVerticalBias(...);
   *** setVerticalGap(...);
   *** setVerticalStyle(...);
   *** setWrapMode(...);
}

-keep class androidx.constraintlayout.core.widgets.Guideline
-keepclassmembers class androidx.constraintlayout.core.widgets.Guideline {
   <init>(...);
   *** getAnchor(...);
   *** isPercent(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRelativeBegin(...);
   *** getRelativeBehaviour(...);
   *** getRelativeEnd(...);
   *** getRelativePercent(...);
   *** cyclePosition(...);
   *** setFinalValue(...);
   *** setGuideBegin(...);
   *** setGuideEnd(...);
   *** setGuidePercent(...);
   *** setGuidePercent(...);
   *** setMinimumPosition(...);
}

-keep class androidx.constraintlayout.core.widgets.HelperWidget
-keepclassmembers class androidx.constraintlayout.core.widgets.HelperWidget {
   <init>(...);
   *** add(...);
   *** addDependents(...);
   *** findGroupInDependents(...);
   *** removeAllIds(...);
   *** updateConstraints(...);
}

-keep class androidx.constraintlayout.core.widgets.Helper
-keepclassmembers class androidx.constraintlayout.core.widgets.Helper {
}

-keep class androidx.constraintlayout.core.widgets.Optimizer
-keepclassmembers class androidx.constraintlayout.core.widgets.Optimizer {
   <init>(...);
   *** enabled(...);
}

-keep class androidx.constraintlayout.core.widgets.Placeholder
-keepclassmembers class androidx.constraintlayout.core.widgets.Placeholder {
   <init>(...);
}

-keep class androidx.constraintlayout.core.widgets.Rectangle
-keepclassmembers class androidx.constraintlayout.core.widgets.Rectangle {
   <init>(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** contains(...);
   *** setBounds(...);
}

-keep class androidx.constraintlayout.core.widgets.VirtualLayout
-keepclassmembers class androidx.constraintlayout.core.widgets.VirtualLayout {
   <init>(...);
   *** getMeasuredHeight(...);
   *** getMeasuredWidth(...);
   *** getPaddingBottom(...);
   *** setPaddingBottom(...);
   *** getPaddingLeft(...);
   *** setPaddingLeft(...);
   *** getPaddingRight(...);
   *** setPaddingRight(...);
   *** getPaddingTop(...);
   *** setPaddingTop(...);
   *** applyRtl(...);
   *** captureWidgets(...);
   *** contains(...);
   *** measure(...);
   *** measure(...);
   *** measureChildren(...);
   *** needSolverPass(...);
   *** needsCallbackFromSolver(...);
   *** setMeasure(...);
   *** setPadding(...);
   *** setPaddingEnd(...);
   *** setPaddingStart(...);
}

-keep class androidx.constraintlayout.core.widgets.WidgetContainer
-keepclassmembers class androidx.constraintlayout.core.widgets.WidgetContainer {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getChildren(...);
   *** getRootConstraintContainer(...);
   *** add(...);
   *** add(...);
   *** layout(...);
   *** remove(...);
   *** removeAllChildren(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measure {
   <init>(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure$Measurer {
}

-keep class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.BasicMeasure {
   <init>(...);
   *** solverMeasure(...);
   *** updateHierarchy(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.ChainRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.ChainRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.DependencyGraph
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.DependencyGraph {
   <init>(...);
   *** buildGraph(...);
   *** buildGraph(...);
   *** defineTerminalWidgets(...);
   *** directMeasure(...);
   *** directMeasureSetup(...);
   *** directMeasureWithOrientation(...);
   *** invalidateGraph(...);
   *** invalidateMeasures(...);
   *** measureWidgets(...);
   *** setMeasurer(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.DependencyNode
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.DependencyNode {
   <init>(...);
   *** addDependency(...);
   *** clear(...);
   *** name(...);
   *** resolve(...);
   *** update(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.Direct
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.Direct {
   <init>(...);
   *** ls(...);
   *** solveChain(...);
   *** solvingPass(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.Grouping
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.Grouping {
   <init>(...);
   *** findDependents(...);
   *** simpleSolvingPass(...);
   *** validInGroup(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.HorizontalWidgetRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.Dependency
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.Dependency {
}

-keep class androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.VerticalWidgetRun {
   <init>(...);
   *** applyToWidget(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetGroup
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetGroup {
   <init>(...);
   *** isAuthoritative(...);
   *** setAuthoritative(...);
   *** getId(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** add(...);
   *** apply(...);
   *** cleanup(...);
   *** clear(...);
   *** intersectWith(...);
   *** measureWrap(...);
   *** moveTo(...);
   *** size(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun {
   <init>(...);
   *** isCenterConnection(...);
   *** isDimensionResolved(...);
   *** isResolved(...);
   *** getWrapDimension(...);
   *** addTarget(...);
   *** getLimitedDimension(...);
   *** getTarget(...);
   *** getTarget(...);
   *** update(...);
   *** updateRunCenter(...);
   *** updateRunEnd(...);
   *** updateRunStart(...);
   *** wrapSize(...);
}

-keep class androidx.constraintlayout.core.widgets.analyzer.WidgetRun
-keepclassmembers class androidx.constraintlayout.core.widgets.analyzer.WidgetRun {
}

-keep class androidx.constraintlayout.core.state.ConstraintReference$ConstraintReferenceFactory
-keepclassmembers class androidx.constraintlayout.core.state.ConstraintReference$ConstraintReferenceFactory {
}

-keep class androidx.constraintlayout.core.state.ConstraintReference
-keepclassmembers class androidx.constraintlayout.core.state.ConstraintReference {
   <init>(...);
   *** getAlpha(...);
   *** getConstraintWidget(...);
   *** setConstraintWidget(...);
   *** getFacade(...);
   *** setFacade(...);
   *** getHeight(...);
   *** getHorizontalChainStyle(...);
   *** setHorizontalChainStyle(...);
   *** getHorizontalChainWeight(...);
   *** setHorizontalChainWeight(...);
   *** getKey(...);
   *** setKey(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getRotationZ(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getTag(...);
   *** setTag(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getVerticalChainWeight(...);
   *** setVerticalChainWeight(...);
   *** getView(...);
   *** setView(...);
   *** getWidth(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** alpha(...);
   *** apply(...);
   *** baseline(...);
   *** baselineToBaseline(...);
   *** baselineToBottom(...);
   *** baselineToTop(...);
   *** bias(...);
   *** bottom(...);
   *** bottomToBottom(...);
   *** bottomToTop(...);
   *** centerHorizontally(...);
   *** centerVertically(...);
   *** circularConstraint(...);
   *** clear(...);
   *** clearHorizontal(...);
   *** clearVertical(...);
   *** createConstraintWidget(...);
   *** end(...);
   *** endToEnd(...);
   *** endToStart(...);
   *** getVerticalChainStyle(...);
   *** height(...);
   *** horizontalBias(...);
   *** left(...);
   *** leftToLeft(...);
   *** leftToRight(...);
   *** margin(...);
   *** margin(...);
   *** marginGone(...);
   *** marginGone(...);
   *** pivotX(...);
   *** pivotY(...);
   *** right(...);
   *** rightToLeft(...);
   *** rightToRight(...);
   *** rotationX(...);
   *** rotationY(...);
   *** rotationZ(...);
   *** scaleX(...);
   *** scaleY(...);
   *** setHeight(...);
   *** setVerticalChainStyle(...);
   *** setWidth(...);
   *** start(...);
   *** startToEnd(...);
   *** startToStart(...);
   *** top(...);
   *** topToBottom(...);
   *** topToTop(...);
   *** translationX(...);
   *** translationY(...);
   *** translationZ(...);
   *** validate(...);
   *** verticalBias(...);
   *** visibility(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.state.Dimension$Type
-keepclassmembers class androidx.constraintlayout.core.state.Dimension$Type {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.Dimension
-keepclassmembers class androidx.constraintlayout.core.state.Dimension {
   *** Fixed(...);
   *** Fixed(...);
   *** Parent(...);
   *** Percent(...);
   *** Ratio(...);
   *** Spread(...);
   *** Suggested(...);
   *** Suggested(...);
   *** Wrap(...);
   *** apply(...);
   *** equalsFixedValue(...);
   *** fixed(...);
   *** fixed(...);
   *** max(...);
   *** max(...);
   *** min(...);
   *** min(...);
   *** percent(...);
   *** ratio(...);
   *** suggested(...);
   *** suggested(...);
}

-keep class androidx.constraintlayout.core.state.HelperReference
-keepclassmembers class androidx.constraintlayout.core.state.HelperReference {
   <init>(...);
   *** getHelperWidget(...);
   *** setHelperWidget(...);
   *** getType(...);
   *** add(...);
}

-keep class androidx.constraintlayout.core.state.Interpolator
-keepclassmembers class androidx.constraintlayout.core.state.Interpolator {
}

-keep class androidx.constraintlayout.core.state.Reference
-keepclassmembers class androidx.constraintlayout.core.state.Reference {
}

-keep class androidx.constraintlayout.core.state.RegistryCallback
-keepclassmembers class androidx.constraintlayout.core.state.RegistryCallback {
}

-keep class androidx.constraintlayout.core.state.Registry
-keepclassmembers class androidx.constraintlayout.core.state.Registry {
   <init>(...);
   *** getInstance(...);
   *** getLayoutList(...);
   *** currentContent(...);
   *** currentLayoutInformation(...);
   *** getLastModified(...);
   *** register(...);
   *** setDrawDebug(...);
   *** setLayoutInformationMode(...);
   *** unregister(...);
   *** updateContent(...);
   *** updateDimensions(...);
   *** updateProgress(...);
}

-keep class androidx.constraintlayout.core.state.State$Chain
-keepclassmembers class androidx.constraintlayout.core.state.State$Chain {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State$Constraint
-keepclassmembers class androidx.constraintlayout.core.state.State$Constraint {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State$Direction
-keepclassmembers class androidx.constraintlayout.core.state.State$Direction {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State$Helper
-keepclassmembers class androidx.constraintlayout.core.state.State$Helper {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.state.State
-keepclassmembers class androidx.constraintlayout.core.state.State {
   <init>(...);
   *** apply(...);
   *** barrier(...);
   *** centerHorizontally(...);
   *** centerVertically(...);
   *** constraints(...);
   *** convertDimension(...);
   *** createConstraintReference(...);
   *** directMapping(...);
   *** getIdsForTag(...);
   *** guideline(...);
   *** height(...);
   *** helper(...);
   *** horizontalChain(...);
   *** horizontalChain(...);
   *** horizontalGuideline(...);
   *** map(...);
   *** reset(...);
   *** sameFixedHeight(...);
   *** sameFixedWidth(...);
   *** setHeight(...);
   *** setTag(...);
   *** setWidth(...);
   *** verticalChain(...);
   *** verticalChain(...);
   *** verticalGuideline(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.state.Transition
-keepclassmembers class androidx.constraintlayout.core.state.Transition {
   <init>(...);
   *** getAutoTransition(...);
   *** hasPositionKeyframes(...);
   *** getInterpolator(...);
   *** isEmpty(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** addKeyAttribute(...);
   *** addKeyCycle(...);
   *** addKeyPosition(...);
   *** addKeyPosition(...);
   *** clear(...);
   *** contains(...);
   *** fillKeyPositions(...);
   *** findNextPosition(...);
   *** findPreviousPosition(...);
   *** getEnd(...);
   *** getEnd(...);
   *** getId(...);
   *** getInterpolated(...);
   *** getInterpolated(...);
   *** getInterpolator(...);
   *** getKeyFrames(...);
   *** getMotion(...);
   *** getNumberKeyPositions(...);
   *** getPath(...);
   *** getStart(...);
   *** getStart(...);
   *** interpolate(...);
   *** setTransitionProperties(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** updateFrom(...);
}

-keep class androidx.constraintlayout.core.state.WidgetFrame
-keepclassmembers class androidx.constraintlayout.core.state.WidgetFrame {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCustomAttributeNames(...);
   *** getId(...);
   *** isDefaultTransform(...);
   *** addCustomColor(...);
   *** addCustomFloat(...);
   *** centerX(...);
   *** centerY(...);
   *** getCustomAttribute(...);
   *** getCustomColor(...);
   *** getCustomFloat(...);
   *** height(...);
   *** interpolate(...);
   *** serialize(...);
   *** serialize(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomValue(...);
   *** setValue(...);
   *** update(...);
   *** update(...);
   *** updateAttributes(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.AlignHorizontallyReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.state.helpers.AlignVerticallyReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.AlignVerticallyReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.state.helpers.BarrierReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.BarrierReference {
   <init>(...);
   *** setBarrierDirection(...);
}

-keep class androidx.constraintlayout.core.state.helpers.ChainReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.ChainReference {
   <init>(...);
   *** getBias(...);
   *** getStyle(...);
   *** style(...);
}

-keep class androidx.constraintlayout.core.state.helpers.GuidelineReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.GuidelineReference {
   <init>(...);
   *** getConstraintWidget(...);
   *** setConstraintWidget(...);
   *** getFacade(...);
   *** getKey(...);
   *** setKey(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** apply(...);
   *** end(...);
   *** percent(...);
   *** start(...);
}

-keep class androidx.constraintlayout.core.state.helpers.HorizontalChainReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.HorizontalChainReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.state.helpers.Facade
-keepclassmembers class androidx.constraintlayout.core.state.helpers.Facade {
}

-keep class androidx.constraintlayout.core.state.helpers.VerticalChainReference
-keepclassmembers class androidx.constraintlayout.core.state.helpers.VerticalChainReference {
   <init>(...);
}

-keep class androidx.constraintlayout.core.parser.CLArray
-keepclassmembers class androidx.constraintlayout.core.parser.CLArray {
   <init>(...);
   *** allocate(...);
}

-keep class androidx.constraintlayout.core.parser.CLContainer
-keepclassmembers class androidx.constraintlayout.core.parser.CLContainer {
   <init>(...);
   *** add(...);
   *** allocate(...);
   *** get(...);
   *** get(...);
   *** getArray(...);
   *** getArray(...);
   *** getArrayOrNull(...);
   *** getBoolean(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getFloat(...);
   *** getFloatOrNaN(...);
   *** getInt(...);
   *** getInt(...);
   *** getObject(...);
   *** getObject(...);
   *** getObjectOrNull(...);
   *** getOrNull(...);
   *** getOrNull(...);
   *** getString(...);
   *** getString(...);
   *** getStringOrNull(...);
   *** getStringOrNull(...);
   *** has(...);
   *** names(...);
   *** put(...);
   *** putNumber(...);
   *** remove(...);
   *** size(...);
}

-keep class androidx.constraintlayout.core.parser.CLElement
-keepclassmembers class androidx.constraintlayout.core.parser.CLElement {
   <init>(...);
   *** getContainer(...);
   *** getDebugName(...);
   *** getEnd(...);
   *** setEnd(...);
   *** getFloat(...);
   *** getInt(...);
   *** isDone(...);
   *** isStarted(...);
   *** getLine(...);
   *** setLine(...);
   *** getStart(...);
   *** setStart(...);
   *** getStrClass(...);
   *** addIndent(...);
   *** content(...);
   *** notStarted(...);
   *** setContainer(...);
   *** toFormattedJSON(...);
   *** toJSON(...);
}

-keep class androidx.constraintlayout.core.parser.CLKey
-keepclassmembers class androidx.constraintlayout.core.parser.CLKey {
   <init>(...);
   *** getName(...);
   *** getValue(...);
   *** allocate(...);
   *** allocate(...);
   *** set(...);
}

-keep class androidx.constraintlayout.core.parser.CLNumber
-keepclassmembers class androidx.constraintlayout.core.parser.CLNumber {
   <init>(...);
   <init>(...);
   *** isInt(...);
   *** allocate(...);
   *** putValue(...);
}

-keep class androidx.constraintlayout.core.parser.CLObject
-keepclassmembers class androidx.constraintlayout.core.parser.CLObject {
   <init>(...);
   *** allocate(...);
   *** iterator(...);
   *** toFormattedJSON(...);
   *** toFormattedJSON(...);
   *** toJSON(...);
}

-keep class androidx.constraintlayout.core.parser.CLParser
-keepclassmembers class androidx.constraintlayout.core.parser.CLParser {
   <init>(...);
   *** parse(...);
   *** parse(...);
}

-keep class androidx.constraintlayout.core.parser.CLParsingException
-keepclassmembers class androidx.constraintlayout.core.parser.CLParsingException {
   <init>(...);
   *** reason(...);
   *** toString(...);
}

-keep class androidx.constraintlayout.core.parser.CLString
-keepclassmembers class androidx.constraintlayout.core.parser.CLString {
   <init>(...);
   *** allocate(...);
}

-keep class androidx.constraintlayout.core.parser.CLToken
-keepclassmembers class androidx.constraintlayout.core.parser.CLToken {
   <init>(...);
   *** getBoolean(...);
   *** isNull(...);
   *** getType(...);
   *** allocate(...);
   *** validate(...);
}

-keep class androidx.constraintlayout.core.motion.CustomAttribute$AttributeType
-keepclassmembers class androidx.constraintlayout.core.motion.CustomAttribute$AttributeType {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.constraintlayout.core.motion.CustomAttribute
-keepclassmembers class androidx.constraintlayout.core.motion.CustomAttribute {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isContinuous(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** diff(...);
   *** getValuesToInterpolate(...);
   *** hsvToRgb(...);
   *** numberOfInterpolatedValues(...);
   *** setColorValue(...);
   *** setFloatValue(...);
   *** setIntValue(...);
   *** setStringValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.core.motion.CustomVariable
-keepclassmembers class androidx.constraintlayout.core.motion.CustomVariable {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBooleanValue(...);
   *** setBooleanValue(...);
   *** getColorValue(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
   *** getIntegerValue(...);
   *** isContinuous(...);
   *** getName(...);
   *** getStringValue(...);
   *** setStringValue(...);
   *** getType(...);
   *** getValueToInterpolate(...);
   *** applyToWidget(...);
   *** colorString(...);
   *** copy(...);
   *** diff(...);
   *** getInterpolatedColor(...);
   *** getValuesToInterpolate(...);
   *** hsvToRgb(...);
   *** numberOfInterpolatedValues(...);
   *** rgbaTocColor(...);
   *** setIntValue(...);
   *** setInterpolatedValue(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class androidx.constraintlayout.core.motion.Motion
-keepclassmembers class androidx.constraintlayout.core.motion.Motion {
   <init>(...);
   *** getAnimateRelativeTo(...);
   *** getCenterX(...);
   *** getCenterY(...);
   *** getDrawPath(...);
   *** setDrawPath(...);
   *** getFinalHeight(...);
   *** getFinalWidth(...);
   *** getFinalX(...);
   *** getFinalY(...);
   *** getStartHeight(...);
   *** getStartWidth(...);
   *** getStartX(...);
   *** getStartY(...);
   *** getTransformPivotTarget(...);
   *** setTransformPivotTarget(...);
   *** getView(...);
   *** setView(...);
   *** addKey(...);
   *** buildKeyFrames(...);
   *** buildPath(...);
   *** buildRect(...);
   *** getCenter(...);
   *** getId(...);
   *** getKeyFrame(...);
   *** getKeyFrameInfo(...);
   *** getKeyFramePositions(...);
   *** interpolate(...);
   *** setEnd(...);
   *** setPathMotionArc(...);
   *** setStart(...);
   *** setStartState(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setup(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.core.motion.MotionPaths
-keepclassmembers class androidx.constraintlayout.core.motion.MotionPaths {
   <init>(...);
   <init>(...);
   *** applyParameters(...);
   *** compareTo(...);
   *** configureRelativeTo(...);
   *** setupRelative(...);
}

-keep class androidx.constraintlayout.core.motion.MotionWidget$Motion
-keepclassmembers class androidx.constraintlayout.core.motion.MotionWidget$Motion {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.MotionWidget$PropertySet
-keepclassmembers class androidx.constraintlayout.core.motion.MotionWidget$PropertySet {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.MotionWidget
-keepclassmembers class androidx.constraintlayout.core.motion.MotionWidget {
   <init>(...);
   <init>(...);
   *** getAlpha(...);
   *** getBottom(...);
   *** getCustomAttributeNames(...);
   *** getHeight(...);
   *** getLeft(...);
   *** getName(...);
   *** getParent(...);
   *** getPivotX(...);
   *** setPivotX(...);
   *** getPivotY(...);
   *** setPivotY(...);
   *** getRight(...);
   *** getRotationX(...);
   *** setRotationX(...);
   *** getRotationY(...);
   *** setRotationY(...);
   *** getRotationZ(...);
   *** setRotationZ(...);
   *** getScaleX(...);
   *** setScaleX(...);
   *** getScaleY(...);
   *** setScaleY(...);
   *** getTop(...);
   *** getTranslationX(...);
   *** setTranslationX(...);
   *** getTranslationY(...);
   *** setTranslationY(...);
   *** getTranslationZ(...);
   *** setTranslationZ(...);
   *** getVisibility(...);
   *** setVisibility(...);
   *** getWidgetFrame(...);
   *** getWidth(...);
   *** findViewById(...);
   *** getCustomAttribute(...);
   *** getId(...);
   *** getValueAttributes(...);
   *** getX(...);
   *** getY(...);
   *** layout(...);
   *** setBounds(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setInterpolatedValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValueAttributes(...);
   *** setValueMotion(...);
   *** setValueMotion(...);
   *** setValueMotion(...);
}

-keep class androidx.constraintlayout.core.motion.utils.ArcCurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.ArcCurveFit {
   <init>(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.CurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.CurveFit {
   <init>(...);
   *** get(...);
   *** getArc(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.CurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.CurveFit {
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Easing
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Easing {
   <init>(...);
   *** get(...);
   *** getDiff(...);
   *** getInterpolator(...);
}

-keep class androidx.constraintlayout.core.motion.utils.FloatRect
-keepclassmembers class androidx.constraintlayout.core.motion.utils.FloatRect {
   <init>(...);
   *** centerX(...);
   *** centerY(...);
}

-keep class androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic
-keepclassmembers class androidx.constraintlayout.core.motion.utils.HyperSpline$Cubic {
   <init>(...);
   *** eval(...);
   *** vel(...);
}

-keep class androidx.constraintlayout.core.motion.utils.HyperSpline
-keepclassmembers class androidx.constraintlayout.core.motion.utils.HyperSpline {
   <init>(...);
   <init>(...);
   *** approxLength(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getVelocity(...);
   *** setup(...);
}

-keep class androidx.constraintlayout.core.motion.utils.DifferentialInterpolator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.DifferentialInterpolator {
}

-keep class androidx.constraintlayout.core.motion.utils.StopEngine
-keepclassmembers class androidx.constraintlayout.core.motion.utils.StopEngine {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType {
   *** getId(...);
   *** getType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$AttributesType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Custom
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Custom {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Custom
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Custom {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$Custom
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$Custom {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$CycleType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$CycleType {
   *** getId(...);
   *** getType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$CycleType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$CycleType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$CycleType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$CycleType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$MotionScene
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$MotionScene {
   *** getId(...);
   *** getType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$MotionScene
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$MotionScene {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$MotionScene
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$MotionScene {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$MotionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$MotionType {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$MotionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$MotionType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$MotionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$MotionType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$OnSwipe
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$OnSwipe {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$OnSwipe
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$OnSwipe {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$OnSwipe
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$OnSwipe {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$PositionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$PositionType {
   *** getId(...);
   *** getType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$PositionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$PositionType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$PositionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$PositionType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$TransitionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$TransitionType {
   *** getId(...);
   *** getType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$TransitionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$TransitionType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$TransitionType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$TransitionType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$TriggerType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$TriggerType {
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$TriggerType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$TriggerType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues$TriggerType
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues$TriggerType {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedValues
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedValues {
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCache
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCache {
   <init>(...);
   *** getFloatValue(...);
   *** setFloatValue(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator$PathRotateSet {
   <init>(...);
   *** setPathRotate(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator {
   <init>(...);
   *** getCurveFit(...);
   *** get(...);
   *** getSlope(...);
   *** makeWidgetCycle(...);
   *** setCustom(...);
   *** setPoint(...);
   *** setPoint(...);
   *** setProperty(...);
   *** setType(...);
   *** setup(...);
   *** variesByPath(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyCycleOscillator {
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomArray {
   <init>(...);
   *** append(...);
   *** clear(...);
   *** dump(...);
   *** keyAt(...);
   *** remove(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray$CustomVar {
   <init>(...);
   *** append(...);
   *** clear(...);
   *** dump(...);
   *** keyAt(...);
   *** remove(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.constraintlayout.core.motion.utils.KeyFrameArray
-keepclassmembers class androidx.constraintlayout.core.motion.utils.KeyFrameArray {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.utils.LinearCurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.LinearCurveFit {
   <init>(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.MonotonicCurveFit
-keepclassmembers class androidx.constraintlayout.core.motion.utils.MonotonicCurveFit {
   <init>(...);
   *** buildWave(...);
   *** getPos(...);
   *** getPos(...);
   *** getPos(...);
   *** getSlope(...);
   *** getSlope(...);
   *** getTimePoints(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Oscillator
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Oscillator {
   <init>(...);
   *** addPoint(...);
   *** getSlope(...);
   *** getValue(...);
   *** normalize(...);
   *** setType(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Rect
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Rect {
   <init>(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Schlick
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Schlick {
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet$CustomSpline {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet {
   <init>(...);
   *** getCurveFit(...);
   *** get(...);
   *** getSlope(...);
   *** makeCustomSpline(...);
   *** makeCustomSplineSet(...);
   *** makeSpline(...);
   *** setPoint(...);
   *** setProperty(...);
   *** setType(...);
   *** setup(...);
}

-keep class androidx.constraintlayout.core.motion.utils.SplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SplineSet {
}

-keep class androidx.constraintlayout.core.motion.utils.SpringStopEngine
-keepclassmembers class androidx.constraintlayout.core.motion.utils.SpringStopEngine {
   <init>(...);
   *** getAcceleration(...);
   *** isStopped(...);
   *** getVelocity(...);
   *** debug(...);
   *** getInterpolation(...);
   *** getVelocity(...);
   *** springConfig(...);
}

-keep class androidx.constraintlayout.core.motion.utils.StepCurve
-keepclassmembers class androidx.constraintlayout.core.motion.utils.StepCurve {
}

-keep class androidx.constraintlayout.core.motion.utils.StopLogicEngine
-keepclassmembers class androidx.constraintlayout.core.motion.utils.StopLogicEngine {
   <init>(...);
   *** isStopped(...);
   *** getVelocity(...);
   *** config(...);
   *** debug(...);
   *** getInterpolation(...);
   *** getVelocity(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomVarSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$CustomVarSet {
   <init>(...);
   *** setPoint(...);
   *** setProperty(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$Sort
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet$Sort {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet {
   <init>(...);
   *** getCurveFit(...);
   *** calcWave(...);
   *** setPoint(...);
   *** setStartTime(...);
   *** setType(...);
   *** setup(...);
}

-keep class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TimeCycleSplineSet {
}

-keep class androidx.constraintlayout.core.motion.utils.TypedBundle
-keepclassmembers class androidx.constraintlayout.core.motion.utils.TypedBundle {
   <init>(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIfNotNull(...);
   *** applyDelta(...);
   *** applyDelta(...);
   *** clear(...);
   *** getInteger(...);
}

-keep class androidx.constraintlayout.core.motion.utils.Utils$DebugHandle
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Utils$DebugHandle {
}

-keep class androidx.constraintlayout.core.motion.utils.Utils
-keepclassmembers class androidx.constraintlayout.core.motion.utils.Utils {
   <init>(...);
   *** getInterpolatedColor(...);
   *** log(...);
   *** log(...);
   *** logStack(...);
   *** loge(...);
   *** rgbaTocColor(...);
   *** setDebugHandle(...);
   *** socketSend(...);
}

-keep class androidx.constraintlayout.core.motion.utils.VelocityMatrix
-keepclassmembers class androidx.constraintlayout.core.motion.utils.VelocityMatrix {
   <init>(...);
   *** applyTransform(...);
   *** clear(...);
   *** setRotationVelocity(...);
   *** setRotationVelocity(...);
   *** setScaleVelocity(...);
   *** setScaleVelocity(...);
   *** setTranslationVelocity(...);
   *** setTranslationVelocity(...);
}

-keep class androidx.constraintlayout.core.motion.utils.ViewState
-keepclassmembers class androidx.constraintlayout.core.motion.utils.ViewState {
   <init>(...);
   *** getState(...);
   *** height(...);
   *** width(...);
}

-keep class androidx.constraintlayout.core.motion.parse.KeyParser
-keepclassmembers class androidx.constraintlayout.core.motion.parse.KeyParser {
   <init>(...);
   *** main(...);
   *** parseAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionConstraintSet
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionConstraintSet {
   <init>(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKey
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKey {
   <init>(...);
   *** getFramePosition(...);
   *** setFramePosition(...);
   *** addValues(...);
   *** clone(...);
   *** copy(...);
   *** getAttributeNames(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setCustomAttribute(...);
   *** setInterpolation(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setValue(...);
   *** setViewId(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKey
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKey {
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyAttributes
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyAttributes {
   <init>(...);
   *** getCurveFit(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
   *** printAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyCycle
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyCycle {
   <init>(...);
   *** addCycleValues(...);
   *** addValues(...);
   *** clone(...);
   *** dump(...);
   *** getAttributeNames(...);
   *** getId(...);
   *** getValue(...);
   *** printAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyPosition
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyPosition {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
   *** intersects(...);
   *** positionAttributes(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyTimeCycle
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyTimeCycle {
   <init>(...);
   *** addTimeValues(...);
   *** addValues(...);
   *** clone(...);
   *** getAttributeNames(...);
   *** getId(...);
}

-keep class androidx.constraintlayout.core.motion.key.MotionKeyTrigger
-keepclassmembers class androidx.constraintlayout.core.motion.key.MotionKeyTrigger {
   <init>(...);
   *** addValues(...);
   *** clone(...);
   *** conditionallyFire(...);
   *** getAttributeNames(...);
   *** getId(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.util.Consumer
-keepclassmembers class androidx.core.util.Consumer {
}

-keep class androidx.core.util.Predicate
-keepclassmembers class androidx.core.util.Predicate {
}

-keep class androidx.core.util.Pair
-keepclassmembers class androidx.core.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class androidx.core.os.LocaleListCompat
-keepclassmembers class androidx.core.os.LocaleListCompat {
   *** getAdjustedDefault(...);
   *** getDefault(...);
   *** getEmptyLocaleList(...);
   *** isEmpty(...);
   *** create(...);
   *** forLanguageTags(...);
   *** get(...);
   *** getFirstMatch(...);
   *** indexOf(...);
   *** matchesLanguageAndScript(...);
   *** size(...);
   *** toLanguageTags(...);
   *** unwrap(...);
   *** wrap(...);
   *** wrap(...);
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** add(...);
   *** max(...);
   *** min(...);
   *** of(...);
   *** of(...);
   *** subtract(...);
   *** toCompatInsets(...);
   *** toPlatformInsets(...);
   *** wrap(...);
}

-keep class androidx.core.graphics.drawable.DrawableCompat
-keepclassmembers class androidx.core.graphics.drawable.DrawableCompat {
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** clearColorFilter(...);
   *** getAlpha(...);
   *** getColorFilter(...);
   *** getLayoutDirection(...);
   *** inflate(...);
   *** isAutoMirrored(...);
   *** jumpToCurrentState(...);
   *** setAutoMirrored(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setLayoutDirection(...);
   *** setTint(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.content.ContextCompat
-keepclassmembers class androidx.core.content.ContextCompat {
   <init>(...);
   *** checkSelfPermission(...);
   *** createAttributionContext(...);
   *** createDeviceProtectedStorageContext(...);
   *** getAttributionTag(...);
   *** getCodeCacheDir(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getContextForLanguage(...);
   *** getDataDir(...);
   *** getDisplayOrDefault(...);
   *** getDrawable(...);
   *** getExternalCacheDirs(...);
   *** getExternalFilesDirs(...);
   *** getMainExecutor(...);
   *** getNoBackupFilesDir(...);
   *** getObbDirs(...);
   *** getString(...);
   *** getSystemService(...);
   *** getSystemServiceName(...);
   *** isDeviceProtectedStorage(...);
   *** registerReceiver(...);
   *** registerReceiver(...);
   *** startActivities(...);
   *** startActivities(...);
   *** startActivity(...);
   *** startForegroundService(...);
}

-keep class androidx.core.content.FileProvider
-keepclassmembers class androidx.core.content.FileProvider {
   <init>(...);
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** getUriForFile(...);
   *** getUriForFile(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class androidx.core.content.res.ResourcesCompat$FontCallback
-keepclassmembers class androidx.core.content.res.ResourcesCompat$FontCallback {
   <init>(...);
   *** callbackFailAsync(...);
   *** callbackSuccessAsync(...);
   *** getHandler(...);
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class androidx.core.content.res.ResourcesCompat$FontCallback
-keepclassmembers class androidx.core.content.res.ResourcesCompat$FontCallback {
   *** onFontRetrievalFailed(...);
   *** onFontRetrieved(...);
}

-keep class androidx.core.content.res.ResourcesCompat
-keepclassmembers class androidx.core.content.res.ResourcesCompat {
   *** clearCachesForTheme(...);
   *** getCachedFont(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDrawable(...);
   *** getDrawableForDensity(...);
   *** getFloat(...);
   *** getFont(...);
   *** getFont(...);
   *** getFont(...);
}

-keep class androidx.core.content.pm.PackageInfoCompat
-keepclassmembers class androidx.core.content.pm.PackageInfoCompat {
   *** getLongVersionCode(...);
   *** getSignatures(...);
   *** hasSignatures(...);
}

-keep class androidx.core.app.ActivityOptionsCompat
-keepclassmembers class androidx.core.app.ActivityOptionsCompat {
   <init>(...);
   *** getLaunchBounds(...);
   *** makeBasic(...);
   *** makeClipRevealAnimation(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeTaskLaunchBehind(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** requestUsageTimeReport(...);
   *** setLaunchBounds(...);
   *** setShareIdentityEnabled(...);
   *** toBundle(...);
   *** update(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** shouldDumpInternalState(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.widget.NestedScrollView$OnScrollChangeListener
-keepclassmembers class androidx.core.widget.NestedScrollView$OnScrollChangeListener {
}

-keep class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor
-keepclassmembers class mono.androidx.core.widget.NestedScrollView_OnScrollChangeListenerImplementor {
}

-keep class androidx.core.widget.NestedScrollView
-keepclassmembers class androidx.core.widget.NestedScrollView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isFillViewport(...);
   *** setFillViewport(...);
   *** getMaxScrollAmount(...);
   *** isSmoothScrollingEnabled(...);
   *** setSmoothScrollingEnabled(...);
   *** arrowScroll(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeScrollDeltaToGetChildRectOnScreen(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** executeKeyEvent(...);
   *** fling(...);
   *** fullScroll(...);
   *** hasNestedScrollingParent(...);
   *** onAttachedToWindow(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** pageScroll(...);
   *** setOnScrollChangeListener(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollTo(...);
   *** smoothScrollTo(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

-keep class androidx.core.widget.CompoundButtonCompat
-keepclassmembers class androidx.core.widget.CompoundButtonCompat {
   *** getButtonDrawable(...);
   *** getButtonTintList(...);
   *** getButtonTintMode(...);
   *** setButtonTintList(...);
   *** setButtonTintMode(...);
}

-keep class androidx.core.widget.TextViewCompat
-keepclassmembers class androidx.core.widget.TextViewCompat {
   *** getAutoSizeMaxTextSize(...);
   *** getAutoSizeMinTextSize(...);
   *** getAutoSizeStepGranularity(...);
   *** getAutoSizeTextAvailableSizes(...);
   *** getAutoSizeTextType(...);
   *** getCompoundDrawableTintList(...);
   *** getCompoundDrawableTintMode(...);
   *** getCompoundDrawablesRelative(...);
   *** getFirstBaselineToTopHeight(...);
   *** getLastBaselineToBottomHeight(...);
   *** getMaxLines(...);
   *** getMinLines(...);
   *** getTextMetricsParams(...);
   *** setAutoSizeTextTypeUniformWithConfiguration(...);
   *** setAutoSizeTextTypeUniformWithPresetSizes(...);
   *** setAutoSizeTextTypeWithDefaults(...);
   *** setCompoundDrawableTintList(...);
   *** setCompoundDrawableTintMode(...);
   *** setCompoundDrawablesRelative(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCompoundDrawablesRelativeWithIntrinsicBounds(...);
   *** setCustomSelectionActionModeCallback(...);
   *** setFirstBaselineToTopHeight(...);
   *** setLastBaselineToBottomHeight(...);
   *** setLineHeight(...);
   *** setLineHeight(...);
   *** setPrecomputedText(...);
   *** setTextAppearance(...);
   *** setTextMetricsParams(...);
   *** unwrapCustomSelectionActionModeCallback(...);
   *** wrapCustomSelectionActionModeCallback(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.ContentInfoCompat
-keepclassmembers class androidx.core.view.ContentInfoCompat {
   *** getClip(...);
   *** getExtras(...);
   *** getFlags(...);
   *** getLinkUri(...);
   *** getSource(...);
   *** partition(...);
   *** partition(...);
   *** toContentInfo(...);
   *** toContentInfoCompat(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
   *** getWaterfallInsets(...);
}

-keep class androidx.core.view.MenuProvider
-keepclassmembers class androidx.core.view.MenuProvider {
}

-keep class androidx.core.view.OnApplyWindowInsetsListener
-keepclassmembers class androidx.core.view.OnApplyWindowInsetsListener {
}

-keep class androidx.core.view.OnReceiveContentListener
-keepclassmembers class androidx.core.view.OnReceiveContentListener {
}

-keep class androidx.core.view.ScrollingView
-keepclassmembers class androidx.core.view.ScrollingView {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.WindowInsetsAnimationControlListenerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControlListenerCompat {
}

-keep class androidx.core.view.MenuItemCompat$OnActionExpandListener
-keepclassmembers class androidx.core.view.MenuItemCompat$OnActionExpandListener {
}

-keep class androidx.core.view.MenuItemCompat
-keepclassmembers class androidx.core.view.MenuItemCompat {
   *** collapseActionView(...);
   *** expandActionView(...);
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getContentDescription(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getNumericModifiers(...);
   *** getTooltipText(...);
   *** isActionViewExpanded(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setAlphabeticShortcut(...);
   *** setContentDescription(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setTooltipText(...);
}

-keep class androidx.core.view.PointerIconCompat
-keepclassmembers class androidx.core.view.PointerIconCompat {
   *** getPointerIcon(...);
   *** create(...);
   *** getSystemIcon(...);
   *** load(...);
}

-keep class androidx.core.view.ScaleGestureDetectorCompat
-keepclassmembers class androidx.core.view.ScaleGestureDetectorCompat {
   *** isQuickScaleEnabled(...);
   *** isQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
   *** setQuickScaleEnabled(...);
}

-keep class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat
-keepclassmembers class androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat {
}

-keep class androidx.core.view.ViewCompat
-keepclassmembers class androidx.core.view.ViewCompat {
   <init>(...);
   *** addAccessibilityAction(...);
   *** addKeyboardNavigationClusters(...);
   *** addOnUnhandledKeyEventListener(...);
   *** animate(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** cancelDragAndDrop(...);
   *** combineMeasuredStates(...);
   *** computeSystemWindowInsets(...);
   *** dispatchApplyWindowInsets(...);
   *** dispatchFinishTemporaryDetach(...);
   *** dispatchNestedFling(...);
   *** dispatchNestedPreFling(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchStartTemporaryDetach(...);
   *** enableAccessibleClickableSpanSupport(...);
   *** generateViewId(...);
   *** getAccessibilityDelegate(...);
   *** getAccessibilityLiveRegion(...);
   *** getAccessibilityNodeProvider(...);
   *** getAccessibilityPaneTitle(...);
   *** getAlpha(...);
   *** getAutofillId(...);
   *** getBackgroundTintList(...);
   *** getBackgroundTintMode(...);
   *** getClipBounds(...);
   *** getContentCaptureSession(...);
   *** getDisplay(...);
   *** getElevation(...);
   *** getFitsSystemWindows(...);
   *** getImportantForAccessibility(...);
   *** getImportantForAutofill(...);
   *** getImportantForContentCapture(...);
   *** getLabelFor(...);
   *** getLayerType(...);
   *** getLayoutDirection(...);
   *** getMatrix(...);
   *** getMeasuredHeightAndState(...);
   *** getMeasuredState(...);
   *** getMeasuredWidthAndState(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getNextClusterForwardId(...);
   *** getOnReceiveContentMimeTypes(...);
   *** getOverScrollMode(...);
   *** getPaddingEnd(...);
   *** getPaddingStart(...);
   *** getParentForAccessibility(...);
   *** getPivotX(...);
   *** getPivotY(...);
   *** getRootWindowInsets(...);
   *** getRotation(...);
   *** getRotationX(...);
   *** getRotationY(...);
   *** getScaleX(...);
   *** getScaleY(...);
   *** getScrollIndicators(...);
   *** getStateDescription(...);
   *** getSystemGestureExclusionRects(...);
   *** getTransitionName(...);
   *** getTranslationX(...);
   *** getTranslationY(...);
   *** getTranslationZ(...);
   *** getWindowInsetsController(...);
   *** getWindowSystemUiVisibility(...);
   *** getX(...);
   *** getY(...);
   *** getZ(...);
   *** hasAccessibilityDelegate(...);
   *** hasExplicitFocusable(...);
   *** hasNestedScrollingParent(...);
   *** hasNestedScrollingParent(...);
   *** hasOnClickListeners(...);
   *** hasOverlappingRendering(...);
   *** hasTransientState(...);
   *** isAccessibilityHeading(...);
   *** isAttachedToWindow(...);
   *** isFocusedByDefault(...);
   *** isImportantForAccessibility(...);
   *** isImportantForAutofill(...);
   *** isImportantForContentCapture(...);
   *** isInLayout(...);
   *** isKeyboardNavigationCluster(...);
   *** isLaidOut(...);
   *** isLayoutDirectionResolved(...);
   *** isNestedScrollingEnabled(...);
   *** isOpaque(...);
   *** isPaddingRelative(...);
   *** isScreenReaderFocusable(...);
   *** jumpDrawablesToCurrentState(...);
   *** keyboardNavigationClusterSearch(...);
   *** offsetLeftAndRight(...);
   *** offsetTopAndBottom(...);
   *** onApplyWindowInsets(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** performHapticFeedback(...);
   *** performHapticFeedback(...);
   *** performReceiveContent(...);
   *** postInvalidateOnAnimation(...);
   *** postInvalidateOnAnimation(...);
   *** postOnAnimation(...);
   *** postOnAnimationDelayed(...);
   *** removeAccessibilityAction(...);
   *** removeOnUnhandledKeyEventListener(...);
   *** replaceAccessibilityAction(...);
   *** requestApplyInsets(...);
   *** requireViewById(...);
   *** resolveSizeAndState(...);
   *** restoreDefaultFocus(...);
   *** saveAttributeDataForStyleable(...);
   *** setAccessibilityDelegate(...);
   *** setAccessibilityHeading(...);
   *** setAccessibilityLiveRegion(...);
   *** setAccessibilityPaneTitle(...);
   *** setActivated(...);
   *** setAlpha(...);
   *** setAutofillHints(...);
   *** setAutofillId(...);
   *** setBackground(...);
   *** setBackgroundTintList(...);
   *** setBackgroundTintMode(...);
   *** setChildrenDrawingOrderEnabled(...);
   *** setClipBounds(...);
   *** setContentCaptureSession(...);
   *** setElevation(...);
   *** setFitsSystemWindows(...);
   *** setFocusedByDefault(...);
   *** setHasTransientState(...);
   *** setImportantForAccessibility(...);
   *** setImportantForAutofill(...);
   *** setImportantForContentCapture(...);
   *** setKeyboardNavigationCluster(...);
   *** setLabelFor(...);
   *** setLayerPaint(...);
   *** setLayerType(...);
   *** setLayoutDirection(...);
   *** setNestedScrollingEnabled(...);
   *** setNextClusterForwardId(...);
   *** setOnApplyWindowInsetsListener(...);
   *** setOnReceiveContentListener(...);
   *** setOverScrollMode(...);
   *** setPaddingRelative(...);
   *** setPivotX(...);
   *** setPivotY(...);
   *** setPointerIcon(...);
   *** setRotation(...);
   *** setRotationX(...);
   *** setRotationY(...);
   *** setSaveFromParentEnabled(...);
   *** setScaleX(...);
   *** setScaleY(...);
   *** setScreenReaderFocusable(...);
   *** setScrollIndicators(...);
   *** setScrollIndicators(...);
   *** setStateDescription(...);
   *** setSystemGestureExclusionRects(...);
   *** setTooltipText(...);
   *** setTransitionName(...);
   *** setTranslationX(...);
   *** setTranslationY(...);
   *** setTranslationZ(...);
   *** setWindowInsetsAnimationCallback(...);
   *** setX(...);
   *** setY(...);
   *** setZ(...);
   *** startDragAndDrop(...);
   *** startNestedScroll(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopNestedScroll(...);
   *** updateDragShadow(...);
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.ViewStructureCompat
-keepclassmembers class androidx.core.view.ViewStructureCompat {
   *** setClassName(...);
   *** setContentDescription(...);
   *** setDimens(...);
   *** setText(...);
   *** toViewStructure(...);
   *** toViewStructureCompat(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$BoundsCompat {
   <init>(...);
   *** getLowerBound(...);
   *** getUpperBound(...);
   *** inset(...);
   *** toBounds(...);
   *** toBoundsCompat(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   <init>(...);
   *** getDispatchMode(...);
   *** onEnd(...);
   *** onPrepare(...);
   *** onProgress(...);
   *** onStart(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat$Callback
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat$Callback {
   *** onProgress(...);
}

-keep class androidx.core.view.WindowInsetsAnimationCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationCompat {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** getDurationMillis(...);
   *** getFraction(...);
   *** setFraction(...);
   *** getInterpolatedFraction(...);
   *** getInterpolator(...);
   *** getTypeMask(...);
}

-keep class androidx.core.view.WindowInsetsAnimationControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsAnimationControllerCompat {
   *** getCurrentAlpha(...);
   *** getCurrentFraction(...);
   *** getCurrentInsets(...);
   *** getHiddenStateInsets(...);
   *** isCancelled(...);
   *** isFinished(...);
   *** isReady(...);
   *** getShownStateInsets(...);
   *** getTypes(...);
   *** finish(...);
   *** setInsetsAndAlpha(...);
}

-keep class androidx.core.view.WindowInsetsCompat$Type
-keepclassmembers class androidx.core.view.WindowInsetsCompat$Type {
   *** captionBar(...);
   *** displayCutout(...);
   *** ime(...);
   *** mandatorySystemGestures(...);
   *** navigationBars(...);
   *** statusBars(...);
   *** systemBars(...);
   *** systemGestures(...);
   *** tappableElement(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** getInsets(...);
   *** getInsetsIgnoringVisibility(...);
   *** inset(...);
   *** inset(...);
   *** isVisible(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
   *** toWindowInsetsCompat(...);
}

-keep class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat$OnControllableInsetsChangedListener {
}

-keep class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor
-keepclassmembers class mono.androidx.core.view.WindowInsetsControllerCompat_OnControllableInsetsChangedListenerImplementor {
}

-keep class androidx.core.view.WindowInsetsControllerCompat
-keepclassmembers class androidx.core.view.WindowInsetsControllerCompat {
   <init>(...);
   *** isAppearanceLightNavigationBars(...);
   *** setAppearanceLightNavigationBars(...);
   *** isAppearanceLightStatusBars(...);
   *** setAppearanceLightStatusBars(...);
   *** getSystemBarsBehavior(...);
   *** setSystemBarsBehavior(...);
   *** addOnControllableInsetsChangedListener(...);
   *** controlWindowInsetsAnimation(...);
   *** hide(...);
   *** removeOnControllableInsetsChangedListener(...);
   *** show(...);
   *** toWindowInsetsControllerCompat(...);
}

-keep class androidx.core.view.contentcapture.ContentCaptureSessionCompat
-keepclassmembers class androidx.core.view.contentcapture.ContentCaptureSessionCompat {
   *** newAutofillId(...);
   *** newVirtualViewStructure(...);
   *** notifyViewTextChanged(...);
   *** notifyViewsAppeared(...);
   *** notifyViewsDisappeared(...);
   *** toContentCaptureSession(...);
   *** toContentCaptureSessionCompat(...);
}

-keep class androidx.core.view.autofill.AutofillIdCompat
-keepclassmembers class androidx.core.view.autofill.AutofillIdCompat {
   *** toAutofillId(...);
   *** toAutofillIdCompat(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** getColumnTitle(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** getRowTitle(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   <init>(...);
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat {
   <init>(...);
   *** getRegionCount(...);
   *** getRegionAt(...);
   *** getTargetForRegion(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityDataSensitive(...);
   *** setAccessibilityDataSensitive(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** getAvailableExtraData(...);
   *** setAvailableExtraData(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContainerTitle(...);
   *** setContainerTitle(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtraRenderingInfo(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isGranularScrollingSupported(...);
   *** setGranularScrollingSupported(...);
   *** hasRequestInitialAccessibilityFocus(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMinDurationBetweenContentChangesMillis(...);
   *** setMinDurationBetweenContentChangesMillis(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getStateDescription(...);
   *** setStateDescription(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** isTextSelectable(...);
   *** setTextSelectable(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTouchDelegateInfo(...);
   *** setTouchDelegateInfo(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getUniqueId(...);
   *** setUniqueId(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getBoundsInWindow(...);
   *** getChild(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** getParent(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setBoundsInWindow(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setQueryFromAppProcessEnabled(...);
   *** setRequestInitialAccessibilityFocus(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** addExtraDataToAccessibilityNodeInfo(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   <init>(...);
   *** getAnchor(...);
   *** getChildCount(...);
   *** getDisplayId(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** isInPictureInPictureMode(...);
   *** getLayer(...);
   *** getLocales(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getTransitionTimeMillis(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getRegionInScreen(...);
   *** getRoot(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
   *** unwrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

-keep class androidx.core.text.PrecomputedTextCompat$Params
-keepclassmembers class androidx.core.text.PrecomputedTextCompat$Params {
   *** getBreakStrategy(...);
   *** getHyphenationFrequency(...);
   *** getTextDirection(...);
   *** getTextPaint(...);
   *** equalsWithoutTextDirection(...);
}

-keep class androidx.core.text.PrecomputedTextCompat
-keepclassmembers class androidx.core.text.PrecomputedTextCompat {
   *** getParagraphCount(...);
   *** charAt(...);
   *** create(...);
   *** getParagraphEnd(...);
   *** getParagraphStart(...);
   *** getParams(...);
   *** getSpanEnd(...);
   *** getSpanFlags(...);
   *** getSpanStart(...);
   *** getSpans(...);
   *** getTextFuture(...);
   *** length(...);
   *** nextSpanTransition(...);
   *** removeSpan(...);
   *** setSpan(...);
   *** subSequence(...);
}

# ACW for Xamarin.AndroidX.Core.Core.Ktx
-keep class androidx.core.widget.TextViewKt
-keepclassmembers class androidx.core.widget.TextViewKt {
   *** addTextChangedListener(...);
   *** doAfterTextChanged(...);
   *** doBeforeTextChanged(...);
   *** doOnTextChanged(...);
}

-keep class androidx.core.view.MenuKt
-keepclassmembers class androidx.core.view.MenuKt {
   *** contains(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** get(...);
   *** getChildren(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** iterator(...);
   *** minusAssign(...);
   *** removeItemAt(...);
}

-keep class androidx.core.view.ViewGroupKt
-keepclassmembers class androidx.core.view.ViewGroupKt {
   *** contains(...);
   *** forEach(...);
   *** forEachIndexed(...);
   *** get(...);
   *** getChildren(...);
   *** getDescendants(...);
   *** getIndices(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** iterator(...);
   *** minusAssign(...);
   *** plusAssign(...);
   *** setMargins(...);
   *** updateMargins(...);
   *** updateMarginsRelative(...);
}

-keep class androidx.core.view.ViewKt
-keepclassmembers class androidx.core.view.ViewKt {
   *** doOnAttach(...);
   *** doOnDetach(...);
   *** doOnLayout(...);
   *** doOnNextLayout(...);
   *** doOnPreDraw(...);
   *** drawToBitmap(...);
   *** getAllViews(...);
   *** getAncestors(...);
   *** getMarginBottom(...);
   *** getMarginEnd(...);
   *** getMarginLeft(...);
   *** getMarginRight(...);
   *** getMarginStart(...);
   *** getMarginTop(...);
   *** isGone(...);
   *** isInvisible(...);
   *** isVisible(...);
   *** postDelayed(...);
   *** postOnAnimationDelayed(...);
   *** setGone(...);
   *** setInvisible(...);
   *** setPadding(...);
   *** setVisible(...);
   *** updateLayoutParams(...);
   *** updatePadding(...);
   *** updatePaddingRelative(...);
}

-keep class androidx.core.util.AndroidXConsumerKt
-keepclassmembers class androidx.core.util.AndroidXConsumerKt {
   *** asAndroidXConsumer(...);
}

-keep class androidx.core.util.AtomicFileKt
-keepclassmembers class androidx.core.util.AtomicFileKt {
   *** readBytes(...);
   *** readText(...);
   *** tryWrite(...);
   *** writeBytes(...);
   *** writeText(...);
}

-keep class androidx.core.util.ConsumerKt
-keepclassmembers class androidx.core.util.ConsumerKt {
   *** asConsumer(...);
}

-keep class androidx.core.util.HalfKt
-keepclassmembers class androidx.core.util.HalfKt {
   *** toHalf(...);
   *** toHalf(...);
   *** toHalf(...);
   *** toHalf(...);
}

-keep class androidx.core.util.LongSparseArrayKt
-keepclassmembers class androidx.core.util.LongSparseArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.LruCacheKt
-keepclassmembers class androidx.core.util.LruCacheKt {
   *** lruCache(...);
}

-keep class androidx.core.util.PairKt
-keepclassmembers class androidx.core.util.PairKt {
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** toAndroidPair(...);
   *** toAndroidXPair(...);
   *** toKotlinPair(...);
   *** toKotlinPair(...);
}

-keep class androidx.core.util.RangeKt
-keepclassmembers class androidx.core.util.RangeKt {
   *** and(...);
   *** plus(...);
   *** plus(...);
   *** rangeTo(...);
   *** toClosedRange(...);
   *** toRange(...);
}

-keep class androidx.core.util.RunnableKt
-keepclassmembers class androidx.core.util.RunnableKt {
   *** asRunnable(...);
}

-keep class androidx.core.util.SizeKt
-keepclassmembers class androidx.core.util.SizeKt {
   *** component1(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component2(...);
}

-keep class androidx.core.util.SparseArrayKt
-keepclassmembers class androidx.core.util.SparseArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseBooleanArrayKt
-keepclassmembers class androidx.core.util.SparseBooleanArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseIntArrayKt
-keepclassmembers class androidx.core.util.SparseIntArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.util.SparseLongArrayKt
-keepclassmembers class androidx.core.util.SparseLongArrayKt {
   *** contains(...);
   *** containsKey(...);
   *** containsValue(...);
   *** forEach(...);
   *** getOrDefault(...);
   *** getOrElse(...);
   *** getSize(...);
   *** isEmpty(...);
   *** isNotEmpty(...);
   *** keyIterator(...);
   *** plus(...);
   *** putAll(...);
   *** remove(...);
   *** set(...);
   *** valueIterator(...);
}

-keep class androidx.core.transition.TransitionKt
-keepclassmembers class androidx.core.transition.TransitionKt {
   *** addListener(...);
   *** doOnCancel(...);
   *** doOnEnd(...);
   *** doOnPause(...);
   *** doOnResume(...);
   *** doOnStart(...);
}

-keep class androidx.core.text.CharSequenceKt
-keepclassmembers class androidx.core.text.CharSequenceKt {
   *** isDigitsOnly(...);
   *** trimmedLength(...);
}

-keep class androidx.core.text.HtmlKt
-keepclassmembers class androidx.core.text.HtmlKt {
   *** parseAsHtml(...);
   *** toHtml(...);
}

-keep class androidx.core.text.LocaleKt
-keepclassmembers class androidx.core.text.LocaleKt {
   *** getLayoutDirection(...);
}

-keep class androidx.core.text.SpannableStringBuilderKt
-keepclassmembers class androidx.core.text.SpannableStringBuilderKt {
   *** backgroundColor(...);
   *** bold(...);
   *** buildSpannedString(...);
   *** color(...);
   *** inSpans(...);
   *** inSpans(...);
   *** italic(...);
   *** scale(...);
   *** strikeThrough(...);
   *** subscript(...);
   *** superscript(...);
   *** underline(...);
}

-keep class androidx.core.text.SpannableStringKt
-keepclassmembers class androidx.core.text.SpannableStringKt {
   *** clearSpans(...);
   *** set(...);
   *** set(...);
   *** toSpannable(...);
}

-keep class androidx.core.text.SpannedStringKt
-keepclassmembers class androidx.core.text.SpannedStringKt {
   *** toSpanned(...);
}

-keep class androidx.core.text.StringKt
-keepclassmembers class androidx.core.text.StringKt {
   *** htmlEncode(...);
}

-keep class androidx.core.os.BundleKt
-keepclassmembers class androidx.core.os.BundleKt {
   *** bundleOf(...);
   *** bundleOf(...);
}

-keep class androidx.core.os.HandlerKt
-keepclassmembers class androidx.core.os.HandlerKt {
   *** postAtTime(...);
   *** postDelayed(...);
}

-keep class androidx.core.os.OutcomeReceiverKt
-keepclassmembers class androidx.core.os.OutcomeReceiverKt {
   *** asOutcomeReceiver(...);
}

-keep class androidx.core.os.PersistableBundleKt
-keepclassmembers class androidx.core.os.PersistableBundleKt {
   *** persistableBundleOf(...);
   *** persistableBundleOf(...);
   *** toPersistableBundle(...);
}

-keep class androidx.core.os.TraceKt
-keepclassmembers class androidx.core.os.TraceKt {
   *** trace(...);
}

-keep class androidx.core.net.UriKt
-keepclassmembers class androidx.core.net.UriKt {
   *** toFile(...);
   *** toUri(...);
   *** toUri(...);
}

-keep class androidx.core.location.LocationKt
-keepclassmembers class androidx.core.location.LocationKt {
   *** component1(...);
   *** component2(...);
}

-keep class androidx.core.graphics.BitmapKt
-keepclassmembers class androidx.core.graphics.BitmapKt {
   *** applyCanvas(...);
   *** contains(...);
   *** contains(...);
   *** createBitmap(...);
   *** createBitmap(...);
   *** get(...);
   *** scale(...);
   *** set(...);
}

-keep class androidx.core.graphics.CanvasKt
-keepclassmembers class androidx.core.graphics.CanvasKt {
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withClip(...);
   *** withMatrix(...);
   *** withRotation(...);
   *** withSave(...);
   *** withScale(...);
   *** withSkew(...);
   *** withTranslation(...);
}

-keep class androidx.core.graphics.ColorKt
-keepclassmembers class androidx.core.graphics.ColorKt {
   *** component1(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component2(...);
   *** component3(...);
   *** component3(...);
   *** component3(...);
   *** component4(...);
   *** component4(...);
   *** component4(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** convertTo(...);
   *** getAlpha(...);
   *** getAlpha(...);
   *** getBlue(...);
   *** getBlue(...);
   *** getColorSpace(...);
   *** getGreen(...);
   *** getGreen(...);
   *** getLuminance(...);
   *** getLuminance(...);
   *** getRed(...);
   *** getRed(...);
   *** isSrgb(...);
   *** isWideGamut(...);
   *** plus(...);
   *** toColor(...);
   *** toColor(...);
   *** toColorInt(...);
   *** toColorInt(...);
   *** toColorLong(...);
}

-keep class androidx.core.graphics.ImageDecoderKt
-keepclassmembers class androidx.core.graphics.ImageDecoderKt {
   *** decodeBitmap(...);
   *** decodeDrawable(...);
}

-keep class androidx.core.graphics.MatrixKt
-keepclassmembers class androidx.core.graphics.MatrixKt {
   *** rotationMatrix(...);
   *** scaleMatrix(...);
   *** times(...);
   *** translationMatrix(...);
   *** values(...);
}

-keep class androidx.core.graphics.PaintKt
-keepclassmembers class androidx.core.graphics.PaintKt {
   *** setBlendMode(...);
}

-keep class androidx.core.graphics.PathKt
-keepclassmembers class androidx.core.graphics.PathKt {
   *** and(...);
   *** flatten(...);
   *** minus(...);
   *** or(...);
   *** plus(...);
   *** xor(...);
}

-keep class androidx.core.graphics.PictureKt
-keepclassmembers class androidx.core.graphics.PictureKt {
   *** record(...);
}

-keep class androidx.core.graphics.PointKt
-keepclassmembers class androidx.core.graphics.PointKt {
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** div(...);
   *** div(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** times(...);
   *** times(...);
   *** toPoint(...);
   *** toPointF(...);
   *** unaryMinus(...);
   *** unaryMinus(...);
}

-keep class androidx.core.graphics.PorterDuffKt
-keepclassmembers class androidx.core.graphics.PorterDuffKt {
   *** toColorFilter(...);
   *** toXfermode(...);
}

-keep class androidx.core.graphics.RectKt
-keepclassmembers class androidx.core.graphics.RectKt {
   *** and(...);
   *** and(...);
   *** component1(...);
   *** component1(...);
   *** component2(...);
   *** component2(...);
   *** component3(...);
   *** component3(...);
   *** component4(...);
   *** component4(...);
   *** contains(...);
   *** contains(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** minus(...);
   *** or(...);
   *** or(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** plus(...);
   *** times(...);
   *** times(...);
   *** times(...);
   *** toRect(...);
   *** toRectF(...);
   *** toRegion(...);
   *** toRegion(...);
   *** transform(...);
   *** xor(...);
   *** xor(...);
}

-keep class androidx.core.graphics.RegionKt
-keepclassmembers class androidx.core.graphics.RegionKt {
   *** and(...);
   *** and(...);
   *** contains(...);
   *** forEach(...);
   *** iterator(...);
   *** minus(...);
   *** minus(...);
   *** not(...);
   *** or(...);
   *** or(...);
   *** plus(...);
   *** plus(...);
   *** unaryMinus(...);
   *** xor(...);
   *** xor(...);
}

-keep class androidx.core.graphics.ShaderKt
-keepclassmembers class androidx.core.graphics.ShaderKt {
   *** transform(...);
}

-keep class androidx.core.graphics.drawable.BitmapDrawableKt
-keepclassmembers class androidx.core.graphics.drawable.BitmapDrawableKt {
   *** toDrawable(...);
}

-keep class androidx.core.graphics.drawable.ColorDrawableKt
-keepclassmembers class androidx.core.graphics.drawable.ColorDrawableKt {
   *** toDrawable(...);
   *** toDrawable(...);
}

-keep class androidx.core.graphics.drawable.DrawableKt
-keepclassmembers class androidx.core.graphics.drawable.DrawableKt {
   *** toBitmap(...);
   *** toBitmapOrNull(...);
   *** updateBounds(...);
}

-keep class androidx.core.graphics.drawable.IconKt
-keepclassmembers class androidx.core.graphics.drawable.IconKt {
   *** toAdaptiveIcon(...);
   *** toIcon(...);
   *** toIcon(...);
   *** toIcon(...);
}

-keep class androidx.core.database.CursorKt
-keepclassmembers class androidx.core.database.CursorKt {
   *** getBlobOrNull(...);
   *** getDoubleOrNull(...);
   *** getFloatOrNull(...);
   *** getIntOrNull(...);
   *** getLongOrNull(...);
   *** getShortOrNull(...);
   *** getStringOrNull(...);
}

-keep class androidx.core.database.sqlite.SQLiteDatabaseKt
-keepclassmembers class androidx.core.database.sqlite.SQLiteDatabaseKt {
   *** transaction(...);
}

-keep class androidx.core.content.ContentValuesKt
-keepclassmembers class androidx.core.content.ContentValuesKt {
   *** contentValuesOf(...);
}

-keep class androidx.core.content.ContextKt
-keepclassmembers class androidx.core.content.ContextKt {
   *** withStyledAttributes(...);
   *** withStyledAttributes(...);
}

-keep class androidx.core.content.SharedPreferencesKt
-keepclassmembers class androidx.core.content.SharedPreferencesKt {
   *** edit(...);
}

-keep class androidx.core.content.res.TypedArrayKt
-keepclassmembers class androidx.core.content.res.TypedArrayKt {
   *** getBooleanOrThrow(...);
   *** getColorOrThrow(...);
   *** getColorStateListOrThrow(...);
   *** getDimensionOrThrow(...);
   *** getDimensionPixelOffsetOrThrow(...);
   *** getDimensionPixelSizeOrThrow(...);
   *** getDrawableOrThrow(...);
   *** getFloatOrThrow(...);
   *** getFontOrThrow(...);
   *** getIntOrThrow(...);
   *** getIntegerOrThrow(...);
   *** getResourceIdOrThrow(...);
   *** getStringOrThrow(...);
   *** getTextArrayOrThrow(...);
   *** getTextOrThrow(...);
   *** use(...);
}

-keep class androidx.core.animation.AnimatorKt
-keepclassmembers class androidx.core.animation.AnimatorKt {
   *** addListener(...);
   *** addPauseListener(...);
   *** doOnCancel(...);
   *** doOnEnd(...);
   *** doOnPause(...);
   *** doOnRepeat(...);
   *** doOnResume(...);
   *** doOnStart(...);
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.CustomView.PoolingContainer
-keep class androidx.customview.poolingcontainer.PoolingContainerListener
-keepclassmembers class androidx.customview.poolingcontainer.PoolingContainerListener {
}

-keep class mono.androidx.customview.poolingcontainer.PoolingContainerListenerImplementor
-keepclassmembers class mono.androidx.customview.poolingcontainer.PoolingContainerListenerImplementor {
}

-keep class androidx.customview.poolingcontainer.PoolingContainer
-keepclassmembers class androidx.customview.poolingcontainer.PoolingContainer {
   *** addPoolingContainerListener(...);
   *** callPoolingContainerOnRelease(...);
   *** callPoolingContainerOnReleaseForChildren(...);
   *** isPoolingContainer(...);
   *** isWithinPoolingContainer(...);
   *** removePoolingContainerListener(...);
   *** setPoolingContainer(...);
}

# ACW for Xamarin.AndroidX.DocumentFile
-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getParentFile(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** findFile(...);
   *** fromFile(...);
   *** fromSingleUri(...);
   *** fromTreeUri(...);
   *** isDocumentUri(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

-keep class androidx.documentfile.provider.DocumentFile
-keepclassmembers class androidx.documentfile.provider.DocumentFile {
   *** isDirectory(...);
   *** isFile(...);
   *** isVirtual(...);
   *** getName(...);
   *** getType(...);
   *** getUri(...);
   *** canRead(...);
   *** canWrite(...);
   *** createDirectory(...);
   *** createFile(...);
   *** delete(...);
   *** exists(...);
   *** lastModified(...);
   *** length(...);
   *** listFiles(...);
   *** renameTo(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout$LayoutParams
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.DynamicAnimation
-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationEndListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationEndListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$OnAnimationUpdateListener {
}

-keep class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor
-keepclassmembers class mono.androidx.dynamicanimation.animation.DynamicAnimation_OnAnimationUpdateListenerImplementor {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation$ViewProperty {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
   *** isRunning(...);
   *** getMinimumVisibleChange(...);
   *** addEndListener(...);
   *** addUpdateListener(...);
   *** cancel(...);
   *** doAnimationFrame(...);
   *** removeEndListener(...);
   *** removeUpdateListener(...);
   *** setMaxValue(...);
   *** setMinValue(...);
   *** setMinimumVisibleChange(...);
   *** setStartValue(...);
   *** setStartVelocity(...);
   *** start(...);
}

-keep class androidx.dynamicanimation.animation.DynamicAnimation
-keepclassmembers class androidx.dynamicanimation.animation.DynamicAnimation {
}

-keep class androidx.dynamicanimation.animation.FlingAnimation
-keepclassmembers class androidx.dynamicanimation.animation.FlingAnimation {
   <init>(...);
   <init>(...);
   *** getFriction(...);
   *** setFriction(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   <init>(...);
   *** createFloatPropertyCompat(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatPropertyCompat
-keepclassmembers class androidx.dynamicanimation.animation.FloatPropertyCompat {
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.FloatValueHolder
-keepclassmembers class androidx.dynamicanimation.animation.FloatValueHolder {
   <init>(...);
   <init>(...);
   *** getValue(...);
   *** setValue(...);
}

-keep class androidx.dynamicanimation.animation.SpringAnimation
-keepclassmembers class androidx.dynamicanimation.animation.SpringAnimation {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpring(...);
   *** animateToFinalPosition(...);
   *** canSkipToEnd(...);
   *** setSpring(...);
   *** skipToEnd(...);
}

-keep class androidx.dynamicanimation.animation.SpringForce
-keepclassmembers class androidx.dynamicanimation.animation.SpringForce {
   <init>(...);
   <init>(...);
   *** getDampingRatio(...);
   *** getFinalPosition(...);
   *** getStiffness(...);
   *** getAcceleration(...);
   *** isAtEquilibrium(...);
   *** setDampingRatio(...);
   *** setFinalPosition(...);
   *** setStiffness(...);
}

# ACW for Xamarin.AndroidX.Emoji2
-keep class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigFactory {
   <init>(...);
   *** create(...);
}

-keep class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper {
   <init>(...);
   *** getProviderInfo(...);
   *** getSigningSignatures(...);
   *** queryIntentContentProviders(...);
}

-keep class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig$DefaultEmojiCompatConfigHelper_API28 {
   <init>(...);
}

-keep class androidx.emoji2.text.DefaultEmojiCompatConfig
-keepclassmembers class androidx.emoji2.text.DefaultEmojiCompatConfig {
   *** create(...);
}

-keep class androidx.emoji2.text.EmojiCompat$CodepointSequenceMatchResult
-keepclassmembers class androidx.emoji2.text.EmojiCompat$CodepointSequenceMatchResult {
}

-keep class androidx.emoji2.text.EmojiCompat$Config
-keepclassmembers class androidx.emoji2.text.EmojiCompat$Config {
   <init>(...);
   *** getMetadataRepoLoader(...);
   *** registerInitCallback(...);
   *** registerInitCallback(...);
   *** setEmojiSpanIndicatorColor(...);
   *** setEmojiSpanIndicatorEnabled(...);
   *** setGlyphChecker(...);
   *** setMetadataLoadStrategy(...);
   *** setReplaceAll(...);
   *** setSpanFactory(...);
   *** setUseEmojiAsDefaultStyle(...);
   *** setUseEmojiAsDefaultStyle(...);
   *** unregisterInitCallback(...);
}

-keep class androidx.emoji2.text.EmojiCompat$Config
-keepclassmembers class androidx.emoji2.text.EmojiCompat$Config {
}

-keep class androidx.emoji2.text.EmojiCompat$DefaultSpanFactory
-keepclassmembers class androidx.emoji2.text.EmojiCompat$DefaultSpanFactory {
   <init>(...);
   *** createSpan(...);
}

-keep class androidx.emoji2.text.EmojiCompat$GlyphChecker
-keepclassmembers class androidx.emoji2.text.EmojiCompat$GlyphChecker {
}

-keep class androidx.emoji2.text.EmojiCompat$InitCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$InitCallback {
   <init>(...);
   *** onFailed(...);
   *** onInitialized(...);
}

-keep class androidx.emoji2.text.EmojiCompat$InitCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$InitCallback {
}

-keep class androidx.emoji2.text.EmojiCompat$LoadStrategy
-keepclassmembers class androidx.emoji2.text.EmojiCompat$LoadStrategy {
}

-keep class androidx.emoji2.text.EmojiCompat$MetadataRepoLoader
-keepclassmembers class androidx.emoji2.text.EmojiCompat$MetadataRepoLoader {
}

-keep class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback {
   <init>(...);
   *** onFailed(...);
   *** onLoaded(...);
}

-keep class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback
-keepclassmembers class androidx.emoji2.text.EmojiCompat$MetadataRepoLoaderCallback {
   *** onFailed(...);
   *** onLoaded(...);
}

-keep class androidx.emoji2.text.EmojiCompat$ReplaceStrategy
-keepclassmembers class androidx.emoji2.text.EmojiCompat$ReplaceStrategy {
}

-keep class androidx.emoji2.text.EmojiCompat$SpanFactory
-keepclassmembers class androidx.emoji2.text.EmojiCompat$SpanFactory {
}

-keep class androidx.emoji2.text.EmojiCompat
-keepclassmembers class androidx.emoji2.text.EmojiCompat {
   *** getAssetSignature(...);
   *** getEmojiSpanIndicatorColor(...);
   *** isConfigured(...);
   *** isEmojiSpanIndicatorEnabled(...);
   *** getLoadState(...);
   *** get(...);
   *** getEmojiEnd(...);
   *** getEmojiMatch(...);
   *** getEmojiStart(...);
   *** handleDeleteSurroundingText(...);
   *** handleOnKeyDown(...);
   *** hasEmojiGlyph(...);
   *** hasEmojiGlyph(...);
   *** init(...);
   *** init(...);
   *** init(...);
   *** load(...);
   *** process(...);
   *** process(...);
   *** process(...);
   *** process(...);
   *** registerInitCallback(...);
   *** registerInitCallback(...);
   *** reset(...);
   *** reset(...);
   *** skipDefaultConfigurationLookup(...);
   *** unregisterInitCallback(...);
   *** updateEditorInfo(...);
}

-keep class androidx.emoji2.text.EmojiCompatInitializer
-keepclassmembers class androidx.emoji2.text.EmojiCompatInitializer {
   <init>(...);
   *** create(...);
   *** dependencies(...);
}

-keep class androidx.emoji2.text.EmojiDefaults
-keepclassmembers class androidx.emoji2.text.EmojiDefaults {
}

-keep class androidx.emoji2.text.EmojiSpan
-keepclassmembers class androidx.emoji2.text.EmojiSpan {
   *** getHeight(...);
   *** getId(...);
   *** getTypefaceRasterizer(...);
   *** getSize(...);
}

-keep class androidx.emoji2.text.EmojiSpan
-keepclassmembers class androidx.emoji2.text.EmojiSpan {
   *** draw(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$ExponentialBackoffRetryPolicy {
   <init>(...);
   *** getRetryDelay(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$FontProviderHelper {
   <init>(...);
   *** buildTypeface(...);
   *** fetchFonts(...);
   *** registerObserver(...);
   *** unregisterObserver(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy {
   <init>(...);
   *** getRetryDelay(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig$RetryPolicy {
   *** getRetryDelay(...);
}

-keep class androidx.emoji2.text.FontRequestEmojiCompatConfig
-keepclassmembers class androidx.emoji2.text.FontRequestEmojiCompatConfig {
   <init>(...);
   <init>(...);
   *** setHandler(...);
   *** setLoadingExecutor(...);
   *** setRetryPolicy(...);
}

-keep class androidx.emoji2.text.MetadataRepo
-keepclassmembers class androidx.emoji2.text.MetadataRepo {
   *** getMetadataList(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** getEmojiCharArray(...);
}

-keep class androidx.emoji2.text.SpannableBuilder
-keepclassmembers class androidx.emoji2.text.SpannableBuilder {
   *** beginBatchEdit(...);
   *** create(...);
   *** endBatchEdit(...);
   *** getSpans(...);
}

-keep class androidx.emoji2.text.TypefaceEmojiRasterizer$HasGlyph
-keepclassmembers class androidx.emoji2.text.TypefaceEmojiRasterizer$HasGlyph {
}

-keep class androidx.emoji2.text.TypefaceEmojiRasterizer
-keepclassmembers class androidx.emoji2.text.TypefaceEmojiRasterizer {
   *** getCodepointsLength(...);
   *** getCompatAdded(...);
   *** getHasGlyph(...);
   *** getHeight(...);
   *** getId(...);
   *** isDefaultEmoji(...);
   *** isPreferredSystemRender(...);
   *** getSdkAdded(...);
   *** getTypeface(...);
   *** getWidth(...);
   *** draw(...);
   *** getCodepointAt(...);
   *** resetHasGlyphCache(...);
   *** setExclusion(...);
   *** setHasGlyph(...);
}

-keep class androidx.emoji2.text.TypefaceEmojiSpan
-keepclassmembers class androidx.emoji2.text.TypefaceEmojiSpan {
   <init>(...);
   *** draw(...);
}

-keep class androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf
-keepclassmembers class androidx.emoji2.text.flatbuffer.ArrayReadWriteBuf {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** data(...);
   *** get(...);
   *** getBoolean(...);
   *** getDouble(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getShort(...);
   *** getString(...);
   *** limit(...);
   *** put(...);
   *** put(...);
   *** putBoolean(...);
   *** putDouble(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putShort(...);
   *** requestCapacity(...);
   *** set(...);
   *** set(...);
   *** setBoolean(...);
   *** setDouble(...);
   *** setFloat(...);
   *** setInt(...);
   *** setLong(...);
   *** setShort(...);
   *** writePosition(...);
}

-keep class androidx.emoji2.text.flatbuffer.BaseVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.BaseVector {
   <init>(...);
   *** __element(...);
   *** __reset(...);
   *** __vector(...);
   *** length(...);
   *** reset(...);
}

-keep class androidx.emoji2.text.flatbuffer.BooleanVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.BooleanVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf
-keepclassmembers class androidx.emoji2.text.flatbuffer.ByteBufferReadWriteBuf {
   <init>(...);
   *** data(...);
   *** get(...);
   *** getBoolean(...);
   *** getDouble(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getShort(...);
   *** getString(...);
   *** limit(...);
   *** put(...);
   *** put(...);
   *** putBoolean(...);
   *** putDouble(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putShort(...);
   *** requestCapacity(...);
   *** set(...);
   *** set(...);
   *** setBoolean(...);
   *** setDouble(...);
   *** setFloat(...);
   *** setInt(...);
   *** setLong(...);
   *** setShort(...);
   *** writePosition(...);
}

-keep class androidx.emoji2.text.flatbuffer.ByteBufferUtil
-keepclassmembers class androidx.emoji2.text.flatbuffer.ByteBufferUtil {
   <init>(...);
   *** getSizePrefix(...);
   *** removeSizePrefix(...);
}

-keep class androidx.emoji2.text.flatbuffer.ByteVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.ByteVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** getAsUnsigned(...);
}

-keep class androidx.emoji2.text.flatbuffer.Constants
-keepclassmembers class androidx.emoji2.text.flatbuffer.Constants {
   <init>(...);
   *** FLATBUFFERS_1_12_0(...);
}

-keep class androidx.emoji2.text.flatbuffer.DoubleVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.DoubleVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory {
   <init>(...);
   *** newByteBuffer(...);
   *** releaseByteBuffer(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$ByteBufferFactory {
   *** newByteBuffer(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$HeapByteBufferFactory
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder$HeapByteBufferFactory {
   <init>(...);
   *** newByteBuffer(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlatBufferBuilder
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlatBufferBuilder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** Nested(...);
   *** addBoolean(...);
   *** addBoolean(...);
   *** addByte(...);
   *** addByte(...);
   *** addDouble(...);
   *** addDouble(...);
   *** addFloat(...);
   *** addFloat(...);
   *** addInt(...);
   *** addInt(...);
   *** addLong(...);
   *** addLong(...);
   *** addOffset(...);
   *** addOffset(...);
   *** addShort(...);
   *** addShort(...);
   *** addStruct(...);
   *** clear(...);
   *** createByteVector(...);
   *** createByteVector(...);
   *** createByteVector(...);
   *** createSortedVectorOfTables(...);
   *** createString(...);
   *** createString(...);
   *** createUnintializedVector(...);
   *** createVectorOfTables(...);
   *** dataBuffer(...);
   *** endTable(...);
   *** endVector(...);
   *** finish(...);
   *** finish(...);
   *** finish(...);
   *** finish(...);
   *** finishSizePrefixed(...);
   *** finishSizePrefixed(...);
   *** finished(...);
   *** forceDefaults(...);
   *** init(...);
   *** isFieldPresent(...);
   *** notNested(...);
   *** offset(...);
   *** pad(...);
   *** prep(...);
   *** putBoolean(...);
   *** putByte(...);
   *** putDouble(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putShort(...);
   *** required(...);
   *** sizedByteArray(...);
   *** sizedByteArray(...);
   *** sizedInputStream(...);
   *** slot(...);
   *** startTable(...);
   *** startVector(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException {
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers$KeyVector {
   *** size(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers$Reference
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers$Reference {
   *** isBlob(...);
   *** isBoolean(...);
   *** isFloat(...);
   *** isInt(...);
   *** isIntOrUInt(...);
   *** isKey(...);
   *** isMap(...);
   *** isNull(...);
   *** isNumeric(...);
   *** isString(...);
   *** isTypedVector(...);
   *** isUInt(...);
   *** isVector(...);
   *** getType(...);
   *** asBoolean(...);
   *** asFloat(...);
   *** asInt(...);
   *** asLong(...);
   *** asString(...);
   *** asUInt(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffers
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffers {
   <init>(...);
   *** getRoot(...);
}

-keep class androidx.emoji2.text.flatbuffer.FlexBuffersBuilder
-keepclassmembers class androidx.emoji2.text.flatbuffer.FlexBuffersBuilder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBuffer(...);
   *** endMap(...);
   *** endVector(...);
   *** finish(...);
   *** putBlob(...);
   *** putBlob(...);
   *** putBoolean(...);
   *** putBoolean(...);
   *** putFloat(...);
   *** putFloat(...);
   *** putFloat(...);
   *** putFloat(...);
   *** putInt(...);
   *** putInt(...);
   *** putInt(...);
   *** putInt(...);
   *** putString(...);
   *** putString(...);
   *** putUInt(...);
   *** putUInt(...);
   *** putUInt64(...);
   *** startMap(...);
   *** startVector(...);
}

-keep class androidx.emoji2.text.flatbuffer.FloatVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.FloatVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.IntVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.IntVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** getAsUnsigned(...);
}

-keep class androidx.emoji2.text.flatbuffer.LongVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.LongVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataItem$Vector
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataItem$Vector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataItem
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataItem {
   <init>(...);
   *** ValidateVersion(...);
   *** __assign(...);
   *** __init(...);
   *** addCodepoints(...);
   *** addCompatAdded(...);
   *** addEmojiStyle(...);
   *** addHeight(...);
   *** addId(...);
   *** addSdkAdded(...);
   *** addWidth(...);
   *** codepoints(...);
   *** codepointsAsByteBuffer(...);
   *** codepointsInByteBuffer(...);
   *** codepointsLength(...);
   *** codepointsVector(...);
   *** codepointsVector(...);
   *** compatAdded(...);
   *** createCodepointsVector(...);
   *** createMetadataItem(...);
   *** emojiStyle(...);
   *** endMetadataItem(...);
   *** getRootAsMetadataItem(...);
   *** getRootAsMetadataItem(...);
   *** height(...);
   *** id(...);
   *** sdkAdded(...);
   *** startCodepointsVector(...);
   *** startMetadataItem(...);
   *** width(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataList$Vector
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataList$Vector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.MetadataList
-keepclassmembers class androidx.emoji2.text.flatbuffer.MetadataList {
   <init>(...);
   *** ValidateVersion(...);
   *** __assign(...);
   *** __init(...);
   *** addList(...);
   *** addSourceSha(...);
   *** addVersion(...);
   *** createListVector(...);
   *** createMetadataList(...);
   *** endMetadataList(...);
   *** finishMetadataListBuffer(...);
   *** finishSizePrefixedMetadataListBuffer(...);
   *** getRootAsMetadataList(...);
   *** getRootAsMetadataList(...);
   *** list(...);
   *** list(...);
   *** listLength(...);
   *** listVector(...);
   *** listVector(...);
   *** sourceSha(...);
   *** sourceShaAsByteBuffer(...);
   *** sourceShaInByteBuffer(...);
   *** startListVector(...);
   *** startMetadataList(...);
   *** version(...);
}

-keep class androidx.emoji2.text.flatbuffer.ShortVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.ShortVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
   *** getAsUnsigned(...);
}

-keep class androidx.emoji2.text.flatbuffer.StringVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.StringVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.Struct
-keepclassmembers class androidx.emoji2.text.flatbuffer.Struct {
   <init>(...);
   *** __reset(...);
   *** __reset(...);
}

-keep class androidx.emoji2.text.flatbuffer.Table
-keepclassmembers class androidx.emoji2.text.flatbuffer.Table {
   <init>(...);
   *** getByteBuffer(...);
   *** __has_identifier(...);
   *** __indirect(...);
   *** __indirect(...);
   *** __offset(...);
   *** __offset(...);
   *** __reset(...);
   *** __reset(...);
   *** __string(...);
   *** __string(...);
   *** __union(...);
   *** __union(...);
   *** __vector(...);
   *** __vector_as_bytebuffer(...);
   *** __vector_in_bytebuffer(...);
   *** __vector_len(...);
   *** compareStrings(...);
   *** compareStrings(...);
   *** keysCompare(...);
   *** sortTables(...);
}

-keep class androidx.emoji2.text.flatbuffer.UnionVector
-keepclassmembers class androidx.emoji2.text.flatbuffer.UnionVector {
   <init>(...);
   *** __assign(...);
   *** get(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8 {
   <init>(...);
   *** getDefault(...);
   *** setDefault(...);
   *** decodeUtf8(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8 {
   *** decodeUtf8(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8Old
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8Old {
   <init>(...);
   *** decodeUtf8(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

-keep class androidx.emoji2.text.flatbuffer.Utf8Safe
-keepclassmembers class androidx.emoji2.text.flatbuffer.Utf8Safe {
   <init>(...);
   *** decodeUtf8(...);
   *** decodeUtf8Array(...);
   *** decodeUtf8Buffer(...);
   *** encodeUtf8(...);
   *** encodedLength(...);
}

# ACW for Xamarin.AndroidX.Emoji2.ViewsHelper
-keep class androidx.emoji2.viewsintegration.EmojiEditTextHelper
-keepclassmembers class androidx.emoji2.viewsintegration.EmojiEditTextHelper {
   <init>(...);
   <init>(...);
   *** getEmojiReplaceStrategy(...);
   *** setEmojiReplaceStrategy(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getMaxEmojiCount(...);
   *** setMaxEmojiCount(...);
   *** getKeyListener(...);
   *** onCreateInputConnection(...);
}

-keep class androidx.emoji2.viewsintegration.EmojiTextViewHelper
-keepclassmembers class androidx.emoji2.viewsintegration.EmojiTextViewHelper {
   <init>(...);
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getFilters(...);
   *** setAllCaps(...);
   *** updateTransformationMethod(...);
   *** wrapTransformationMethod(...);
}

# ACW for Xamarin.AndroidX.ExifInterface
-keep class androidx.exifinterface.media.ExifInterface$ExifStreamType
-keepclassmembers class androidx.exifinterface.media.ExifInterface$ExifStreamType {
}

-keep class androidx.exifinterface.media.ExifInterface$IfdType
-keepclassmembers class androidx.exifinterface.media.ExifInterface$IfdType {
}

-keep class androidx.exifinterface.media.ExifInterface
-keepclassmembers class androidx.exifinterface.media.ExifInterface {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDateTime(...);
   *** setDateTime(...);
   *** getDateTimeDigitized(...);
   *** getDateTimeOriginal(...);
   *** getGpsDateTime(...);
   *** hasThumbnail(...);
   *** isFlipped(...);
   *** isThumbnailCompressed(...);
   *** getRotationDegrees(...);
   *** getThumbnailBitmap(...);
   *** flipHorizontally(...);
   *** flipVertically(...);
   *** getAltitude(...);
   *** getAttribute(...);
   *** getAttributeBytes(...);
   *** getAttributeDouble(...);
   *** getAttributeInt(...);
   *** getAttributeRange(...);
   *** getLatLong(...);
   *** getLatLong(...);
   *** getThumbnail(...);
   *** getThumbnailBytes(...);
   *** getThumbnailRange(...);
   *** hasAttribute(...);
   *** isSupportedMimeType(...);
   *** resetOrientation(...);
   *** rotate(...);
   *** saveAttributes(...);
   *** setAltitude(...);
   *** setAttribute(...);
   *** setGpsInfo(...);
   *** setLatLong(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.DialogFragment
-keepclassmembers class androidx.fragment.app.DialogFragment {
   <init>(...);
   <init>(...);
   *** isCancelable(...);
   *** setCancelable(...);
   *** getDialog(...);
   *** getShowsDialog(...);
   *** setShowsDialog(...);
   *** getTheme(...);
   *** dismiss(...);
   *** dismissAllowingStateLoss(...);
   *** dismissNow(...);
   *** onCancel(...);
   *** onCreateDialog(...);
   *** onDismiss(...);
   *** requireComponentDialog(...);
   *** requireDialog(...);
   *** setStyle(...);
   *** setupDialog(...);
   *** show(...);
   *** show(...);
   *** showNow(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   <init>(...);
   *** instantiate(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainerView
-keepclassmembers class androidx.fragment.app.FragmentContainerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getFragment(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   <init>(...);
   *** getActivity(...);
   *** getContext(...);
   *** getFragmentManager(...);
   *** getHandler(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onStartActivityFromFragment(...);
   *** onStartIntentSenderFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** getHost(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** getStrictModePolicy(...);
   *** setStrictModePolicy(...);
   *** addFragmentOnAttachListener(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** clearBackStack(...);
   *** clearFragmentResult(...);
   *** clearFragmentResultListener(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** enablePredictiveBack(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** findFragmentManager(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** isLoggingEnabled(...);
   *** onContainerAvailable(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeFragmentOnAttachListener(...);
   *** removeOnBackStackChangedListener(...);
   *** restoreBackStack(...);
   *** saveBackStack(...);
   *** saveFragmentInstanceState(...);
   *** setFragmentResult(...);
   *** setFragmentResultListener(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

-keep class androidx.fragment.app.FragmentOnAttachListener
-keepclassmembers class androidx.fragment.app.FragmentOnAttachListener {
}

-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor {
}

-keep class androidx.fragment.app.FragmentResultListener
-keepclassmembers class androidx.fragment.app.FragmentResultListener {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode$Policy
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode$Policy {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode {
   *** getDefaultPolicy(...);
   *** setDefaultPolicy(...);
   *** onFragmentReuse(...);
   *** onFragmentTagUsage(...);
   *** onGetRetainInstanceUsage(...);
   *** onGetTargetFragmentRequestCodeUsage(...);
   *** onGetTargetFragmentUsage(...);
   *** onPolicyViolation(...);
   *** onSetRetainInstanceUsage(...);
   *** onSetTargetFragmentUsage(...);
   *** onSetUserVisibleHint(...);
   *** onWrongFragmentContainer(...);
   *** onWrongNestedHierarchy(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
   *** getFragment(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
}

# ACW for Xamarin.AndroidX.Fragment.Ktx
-keep class androidx.fragment.app.FragmentKt
-keepclassmembers class androidx.fragment.app.FragmentKt {
   *** clearFragmentResult(...);
   *** clearFragmentResultListener(...);
   *** setFragmentResult(...);
   *** setFragmentResultListener(...);
}

-keep class androidx.fragment.app.FragmentManagerKt
-keepclassmembers class androidx.fragment.app.FragmentManagerKt {
   *** commit(...);
   *** commitNow(...);
   *** transaction(...);
}

-keep class androidx.fragment.app.FragmentTransactionKt
-keepclassmembers class androidx.fragment.app.FragmentTransactionKt {
}

-keep class androidx.fragment.app.FragmentViewModelLazyKt
-keepclassmembers class androidx.fragment.app.FragmentViewModelLazyKt {
   *** createViewModelLazy(...);
}

-keep class androidx.fragment.app.ViewKt
-keepclassmembers class androidx.fragment.app.ViewKt {
   *** findFragment(...);
}

# ACW for Xamarin.AndroidX.Interpolator
-keep class androidx.interpolator.view.animation.FastOutLinearInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutLinearInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.FastOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.FastOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LinearOutSlowInInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LinearOutSlowInInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
   <init>(...);
   *** getInterpolation(...);
}

-keep class androidx.interpolator.view.animation.LookupTableInterpolator
-keepclassmembers class androidx.interpolator.view.animation.LookupTableInterpolator {
}

# ACW for Xamarin.AndroidX.Legacy.Support.Core.Utils
-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   <init>(...);
   *** completeWakefulIntent(...);
   *** startWakefulService(...);
}

-keep class androidx.legacy.content.WakefulBroadcastReceiver
-keepclassmembers class androidx.legacy.content.WakefulBroadcastReceiver {
   *** onReceive(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Common.Jvm
-keep class androidx.lifecycle.Lifecycle$Event
-keepclassmembers class androidx.lifecycle.Lifecycle$Event {
   *** getTargetState(...);
   *** downFrom(...);
   *** downTo(...);
   *** upFrom(...);
   *** upTo(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** getCurrentStateFlow(...);
   *** getInternalScopeRef(...);
   *** setInternalScopeRef(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData
-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   <init>(...);
   <init>(...);
   *** getLiveData(...);
   *** compute(...);
   *** invalidate(...);
}

-keep class androidx.lifecycle.ComputableLiveData
-keepclassmembers class androidx.lifecycle.ComputableLiveData {
   *** compute(...);
}

-keep class androidx.lifecycle.CoroutineLiveDataKt
-keepclassmembers class androidx.lifecycle.CoroutineLiveDataKt {
   *** liveData(...);
   *** liveData(...);
   *** liveData(...);
   *** liveData(...);
   *** liveData(...);
}

-keep class androidx.lifecycle.FlowLiveDataConversions
-keepclassmembers class androidx.lifecycle.FlowLiveDataConversions {
   *** asFlow(...);
   *** asLiveData(...);
   *** asLiveData(...);
   *** asLiveData(...);
   *** asLiveData(...);
}

-keep class androidx.lifecycle.LiveDataScope
-keepclassmembers class androidx.lifecycle.LiveDataScope {
}

-keep class androidx.lifecycle.MediatorLiveData
-keepclassmembers class androidx.lifecycle.MediatorLiveData {
   <init>(...);
   <init>(...);
   *** addSource(...);
   *** removeSource(...);
}

-keep class androidx.lifecycle.Transformations
-keepclassmembers class androidx.lifecycle.Transformations {
   *** distinctUntilChanged(...);
   *** map(...);
   *** switchMap(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** isInitialized(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

-keep class androidx.lifecycle.MutableLiveData
-keepclassmembers class androidx.lifecycle.MutableLiveData {
   <init>(...);
   <init>(...);
   *** postValue(...);
   *** setValue(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Process
-keep class androidx.lifecycle.ProcessLifecycleInitializer
-keepclassmembers class androidx.lifecycle.ProcessLifecycleInitializer {
   <init>(...);
   *** create(...);
   *** dependencies(...);
}

-keep class androidx.lifecycle.ProcessLifecycleOwner$Companion
-keepclassmembers class androidx.lifecycle.ProcessLifecycleOwner$Companion {
   <init>(...);
   *** get(...);
}

-keep class androidx.lifecycle.ProcessLifecycleOwner
-keepclassmembers class androidx.lifecycle.ProcessLifecycleOwner {
   *** getLifecycle(...);
   *** get(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.Runtime.Android
-keep class androidx.lifecycle.FlowExtKt
-keepclassmembers class androidx.lifecycle.FlowExtKt {
   *** flowWithLifecycle(...);
}

-keep class androidx.lifecycle.LifecycleRegistryOwner
-keepclassmembers class androidx.lifecycle.LifecycleRegistryOwner {
}

-keep class androidx.lifecycle.LifecycleDestroyedException
-keepclassmembers class androidx.lifecycle.LifecycleDestroyedException {
   <init>(...);
}

-keep class androidx.lifecycle.LifecycleRegistry$Companion
-keepclassmembers class androidx.lifecycle.LifecycleRegistry$Companion {
   <init>(...);
   *** createUnsafe(...);
}

-keep class androidx.lifecycle.LifecycleRegistry
-keepclassmembers class androidx.lifecycle.LifecycleRegistry {
   <init>(...);
   <init>(...);
   *** getCurrentState(...);
   *** getObserverCount(...);
   *** addObserver(...);
   *** createUnsafe(...);
   *** handleLifecycleEvent(...);
   *** markState(...);
   *** removeObserver(...);
   *** setCurrentState(...);
}

-keep class androidx.lifecycle.LifecycleRegistry_androidKt
-keepclassmembers class androidx.lifecycle.LifecycleRegistry_androidKt {
}

-keep class androidx.lifecycle.RepeatOnLifecycleKt
-keepclassmembers class androidx.lifecycle.RepeatOnLifecycleKt {
   *** repeatOnLifecycle(...);
   *** repeatOnLifecycle(...);
}

-keep class androidx.lifecycle.ReportFragment$ActivityInitializationListener
-keepclassmembers class androidx.lifecycle.ReportFragment$ActivityInitializationListener {
}

-keep class mono.androidx.lifecycle.ReportFragment_ActivityInitializationListenerImplementor
-keepclassmembers class mono.androidx.lifecycle.ReportFragment_ActivityInitializationListenerImplementor {
}

-keep class androidx.lifecycle.ReportFragment$Companion
-keepclassmembers class androidx.lifecycle.ReportFragment$Companion {
   <init>(...);
   *** get(...);
   *** injectIfNeededIn(...);
}

-keep class androidx.lifecycle.ReportFragment
-keepclassmembers class androidx.lifecycle.ReportFragment {
   <init>(...);
   *** get(...);
   *** injectIfNeededIn(...);
   *** setProcessListener(...);
}

-keep class androidx.lifecycle.ViewKt
-keepclassmembers class androidx.lifecycle.ViewKt {
}

-keep class androidx.lifecycle.ViewTreeLifecycleOwner
-keepclassmembers class androidx.lifecycle.ViewTreeLifecycleOwner {
   *** get(...);
   *** set(...);
}

-keep class androidx.lifecycle.WithLifecycleStateKt
-keepclassmembers class androidx.lifecycle.WithLifecycleStateKt {
   *** withCreated(...);
   *** withCreated(...);
   *** withResumed(...);
   *** withResumed(...);
   *** withStarted(...);
   *** withStarted(...);
   *** withStateAtLeast(...);
   *** withStateAtLeast(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel.Android
-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModel
-keepclassmembers class androidx.lifecycle.ViewModel {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** addCloseable(...);
   *** addCloseable(...);
   *** getCloseable(...);
   *** onCleared(...);
}

-keep class androidx.lifecycle.ViewModel
-keepclassmembers class androidx.lifecycle.ViewModel {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory$Companion
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory$Companion {
   *** from(...);
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** create(...);
   *** create(...);
   *** get(...);
   *** get(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
   *** get(...);
   *** keys(...);
   *** put(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras$Key
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras$Key {
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

-keep class androidx.lifecycle.viewmodel.CreationExtras
-keepclassmembers class androidx.lifecycle.viewmodel.CreationExtras {
   *** get(...);
}

-keep class androidx.lifecycle.viewmodel.ViewModelInitializer
-keepclassmembers class androidx.lifecycle.viewmodel.ViewModelInitializer {
   <init>(...);
   <init>(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
-keep class androidx.lifecycle.SavedStateHandle
-keepclassmembers class androidx.lifecycle.SavedStateHandle {
   <init>(...);
   <init>(...);
   *** clearSavedStateProvider(...);
   *** contains(...);
   *** createHandle(...);
   *** get(...);
   *** getLiveData(...);
   *** getLiveData(...);
   *** getStateFlow(...);
   *** keys(...);
   *** remove(...);
   *** savedStateProvider(...);
   *** set(...);
   *** setSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.LocalBroadcastManager
-keep class androidx.localbroadcastmanager.content.LocalBroadcastManager
-keepclassmembers class androidx.localbroadcastmanager.content.LocalBroadcastManager {
   *** getInstance(...);
   *** registerReceiver(...);
   *** sendBroadcast(...);
   *** sendBroadcastSync(...);
   *** unregisterReceiver(...);
}

# ACW for Xamarin.AndroidX.Navigation.Common
-keep class androidx.navigation.NavDirections
-keepclassmembers class androidx.navigation.NavDirections {
}

-keep class androidx.navigation.NavViewModelStoreProvider
-keepclassmembers class androidx.navigation.NavViewModelStoreProvider {
}

-keep class androidx.navigation.NavAction
-keepclassmembers class androidx.navigation.NavAction {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDefaultArguments(...);
   *** setDefaultArguments(...);
   *** getDestinationId(...);
   *** getNavOptions(...);
   *** setNavOptions(...);
}

-keep class androidx.navigation.NavArgument
-keepclassmembers class androidx.navigation.NavArgument {
   *** getDefaultValue(...);
   *** isDefaultValuePresent(...);
   *** isNullable(...);
   *** getType(...);
   *** putDefaultValue(...);
   *** verify(...);
}

-keep class androidx.navigation.NavBackStackEntry
-keepclassmembers class androidx.navigation.NavBackStackEntry {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDefaultViewModelCreationExtras(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getDestination(...);
   *** setDestination(...);
   *** getId(...);
   *** getLifecycle(...);
   *** getMaxLifecycle(...);
   *** setMaxLifecycle(...);
   *** getSavedStateHandle(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** handleLifecycleEvent(...);
   *** saveState(...);
   *** updateState(...);
}

-keep class androidx.navigation.NavDeepLink
-keepclassmembers class androidx.navigation.NavDeepLink {
   <init>(...);
   *** getAction(...);
   *** isExactDeepLink(...);
   *** getMimeType(...);
   *** getUriPattern(...);
   *** getMatchingArguments(...);
   *** getMimeTypeMatchRating(...);
}

-keep class androidx.navigation.NavDeepLinkRequest
-keepclassmembers class androidx.navigation.NavDeepLinkRequest {
   <init>(...);
   <init>(...);
   *** getAction(...);
   *** getMimeType(...);
   *** getUri(...);
}

-keep class androidx.navigation.NavDestination$DeepLinkMatch
-keepclassmembers class androidx.navigation.NavDestination$DeepLinkMatch {
   <init>(...);
   *** getDestination(...);
   *** getMatchingArgs(...);
   *** compareTo(...);
   *** hasMatchingArgs(...);
   *** compareTo(...);
}

-keep class androidx.navigation.NavDestination
-keepclassmembers class androidx.navigation.NavDestination {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDisplayName(...);
   *** getId(...);
   *** setId(...);
   *** getLabel(...);
   *** setLabel(...);
   *** getNavigatorName(...);
   *** getParent(...);
   *** setParent(...);
   *** getRoute(...);
   *** setRoute(...);
   *** addArgument(...);
   *** addDeepLink(...);
   *** addDeepLink(...);
   *** addInDefaultArgs(...);
   *** buildDeepLinkIds(...);
   *** buildDeepLinkIds(...);
   *** fillInLabel(...);
   *** getAction(...);
   *** getDisplayName(...);
   *** getHierarchy(...);
   *** hasDeepLink(...);
   *** hasDeepLink(...);
   *** hasRoute(...);
   *** hasRoute(...);
   *** matchDeepLink(...);
   *** matchDeepLink(...);
   *** onInflate(...);
   *** parseClassFromName(...);
   *** parseClassFromNameInternal(...);
   *** putAction(...);
   *** putAction(...);
   *** removeAction(...);
   *** removeArgument(...);
   *** supportsActions(...);
}

-keep class androidx.navigation.NavGraph
-keepclassmembers class androidx.navigation.NavGraph {
   <init>(...);
   *** getNodes(...);
   *** getStartDestDisplayName(...);
   *** getStartDestination(...);
   *** setStartDestination(...);
   *** getStartDestinationId(...);
   *** getStartDestinationRoute(...);
   *** addAll(...);
   *** addDestination(...);
   *** addDestinations(...);
   *** addDestinations(...);
   *** clear(...);
   *** findNode(...);
   *** findNode(...);
   *** findNode(...);
   *** findNode(...);
   *** findNodeComprehensive(...);
   *** findStartDestination(...);
   *** iterator(...);
   *** matchDeepLinkComprehensive(...);
   *** remove(...);
   *** setStartDestination(...);
   *** setStartDestination(...);
   *** setStartDestination(...);
}

-keep class androidx.navigation.NavGraphNavigator
-keepclassmembers class androidx.navigation.NavGraphNavigator {
   <init>(...);
   *** getBackStack(...);
   *** createDestination(...);
}

-keep class androidx.navigation.Navigator$Extras
-keepclassmembers class androidx.navigation.Navigator$Extras {
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   <init>(...);
   *** isAttached(...);
   *** getState(...);
   *** createDestination(...);
   *** navigate(...);
   *** navigate(...);
   *** onAttach(...);
   *** onLaunchSingleTop(...);
   *** onRestoreState(...);
   *** onSaveState(...);
   *** popBackStack(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   *** createDestination(...);
}

-keep class androidx.navigation.NavigatorProvider
-keepclassmembers class androidx.navigation.NavigatorProvider {
   <init>(...);
   *** getNavigators(...);
   *** addNavigator(...);
   *** addNavigator(...);
   *** getNavigator(...);
   *** getNavigator(...);
}

-keep class androidx.navigation.NavigatorState
-keepclassmembers class androidx.navigation.NavigatorState {
   <init>(...);
   *** getBackStack(...);
   *** isNavigating(...);
   *** setNavigating(...);
   *** getTransitionsInProgress(...);
   *** createBackStackEntry(...);
   *** markTransitionComplete(...);
   *** onLaunchSingleTop(...);
   *** onLaunchSingleTopWithTransition(...);
   *** pop(...);
   *** popWithTransition(...);
   *** prepareForTransition(...);
   *** push(...);
   *** pushWithTransition(...);
}

-keep class androidx.navigation.NavigatorState
-keepclassmembers class androidx.navigation.NavigatorState {
   *** createBackStackEntry(...);
}

-keep class androidx.navigation.NavOptions
-keepclassmembers class androidx.navigation.NavOptions {
   *** getEnterAnim(...);
   *** getExitAnim(...);
   *** isPopUpToInclusive(...);
   *** getPopEnterAnim(...);
   *** getPopExitAnim(...);
   *** getPopUpTo(...);
   *** getPopUpToId(...);
   *** getPopUpToRoute(...);
   *** getPopUpToRouteClass(...);
   *** getPopUpToRouteObject(...);
   *** shouldLaunchSingleTop(...);
   *** shouldPopUpToSaveState(...);
   *** shouldRestoreState(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   <init>(...);
   *** isNullableAllowed(...);
   *** getName(...);
   *** fromArgType(...);
   *** get(...);
   *** inferFromValue(...);
   *** inferFromValueType(...);
   *** parseAndPut(...);
   *** parseAndPut(...);
   *** parseValue(...);
   *** parseValue(...);
   *** serializeAsValue(...);
   *** valueEquals(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   *** get(...);
   *** parseValue(...);
}

# ACW for Xamarin.AndroidX.Navigation.Fragment
-keep class androidx.navigation.fragment.FragmentNavigator$Destination
-keepclassmembers class androidx.navigation.fragment.FragmentNavigator$Destination {
   <init>(...);
   <init>(...);
   *** getClassName(...);
   *** setClassName(...);
}

-keep class androidx.navigation.fragment.FragmentNavigator
-keepclassmembers class androidx.navigation.fragment.FragmentNavigator {
   <init>(...);
   *** createDestination(...);
   *** instantiateFragment(...);
   *** navigate(...);
}

-keep class androidx.navigation.fragment.NavHostFragment
-keepclassmembers class androidx.navigation.fragment.NavHostFragment {
   <init>(...);
   *** getNavController(...);
   *** create(...);
   *** create(...);
   *** createFragmentNavigator(...);
   *** findNavController(...);
   *** onCreateNavController(...);
   *** onCreateNavHostController(...);
}

# ACW for Xamarin.AndroidX.Navigation.Runtime
-keep class androidx.navigation.NavController$OnDestinationChangedListener
-keepclassmembers class androidx.navigation.NavController$OnDestinationChangedListener {
}

-keep class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor
-keepclassmembers class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor {
}

-keep class androidx.navigation.NavController
-keepclassmembers class androidx.navigation.NavController {
   <init>(...);
   *** getContext(...);
   *** getCurrentBackStack(...);
   *** getCurrentBackStackEntry(...);
   *** getCurrentBackStackEntryFlow(...);
   *** getCurrentDestination(...);
   *** getGraph(...);
   *** setGraph(...);
   *** getNavInflater(...);
   *** getNavigatorProvider(...);
   *** setNavigatorProvider(...);
   *** getPreviousBackStackEntry(...);
   *** getVisibleEntries(...);
   *** addOnDestinationChangedListener(...);
   *** clearBackStack(...);
   *** clearBackStack(...);
   *** clearBackStack(...);
   *** createDeepLink(...);
   *** enableDeepLinkSaveState(...);
   *** enableOnBackPressed(...);
   *** findDestination(...);
   *** findDestination(...);
   *** findDestinationComprehensive(...);
   *** getBackStackEntry(...);
   *** getBackStackEntry(...);
   *** getBackStackEntry(...);
   *** getViewModelStoreOwner(...);
   *** handleDeepLink(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigateUp(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** removeOnDestinationChangedListener(...);
   *** restoreState(...);
   *** saveState(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setLifecycleOwner(...);
   *** setOnBackPressedDispatcher(...);
   *** setViewModelStore(...);
}

-keep class androidx.navigation.NavDeepLinkBuilder
-keepclassmembers class androidx.navigation.NavDeepLinkBuilder {
   <init>(...);
   *** addDestination(...);
   *** addDestination(...);
   *** addDestination(...);
   *** addDestination(...);
   *** createPendingIntent(...);
   *** createTaskStackBuilder(...);
   *** setArguments(...);
   *** setComponentName(...);
   *** setComponentName(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setDestination(...);
   *** setGraph(...);
   *** setGraph(...);
}

-keep class androidx.navigation.NavHostController
-keepclassmembers class androidx.navigation.NavHostController {
   <init>(...);
   *** enableOnBackPressed(...);
   *** setLifecycleOwner(...);
   *** setOnBackPressedDispatcher(...);
   *** setViewModelStore(...);
}

-keep class androidx.navigation.NavInflater
-keepclassmembers class androidx.navigation.NavInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.AndroidX.Navigation.UI
-keep class androidx.navigation.ui.AppBarConfiguration$Builder
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** setDrawerLayout(...);
   *** setFallbackOnNavigateUpListener(...);
   *** setOpenableLayout(...);
}

-keep class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener {
}

-keep class androidx.navigation.ui.AppBarConfiguration
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration {
   <init>(...);
   *** getDrawerLayout(...);
   *** getFallbackOnNavigateUpListener(...);
   *** getOpenableLayout(...);
   *** getTopLevelDestinations(...);
   *** isTopLevelDestination(...);
}

-keep class androidx.navigation.ui.NavigationUI
-keepclassmembers class androidx.navigation.ui.NavigationUI {
   *** findBottomSheetBehavior(...);
   *** navigateUp(...);
   *** navigateUp(...);
   *** onNavDestinationSelected(...);
   *** onNavDestinationSelected(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
}

# ACW for Xamarin.AndroidX.Print
-keep class androidx.print.PrintHelper$OnPrintFinishCallback
-keepclassmembers class androidx.print.PrintHelper$OnPrintFinishCallback {
}

-keep class androidx.print.PrintHelper
-keepclassmembers class androidx.print.PrintHelper {
   <init>(...);
   *** getColorMode(...);
   *** setColorMode(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScaleMode(...);
   *** setScaleMode(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** printBitmap(...);
   *** systemSupportsPrint(...);
}

# ACW for Xamarin.AndroidX.ProfileInstaller.ProfileInstaller
-keep class androidx.profileinstaller.DeviceProfileWriter
-keepclassmembers class androidx.profileinstaller.DeviceProfileWriter {
   <init>(...);
   *** deviceAllowsProfileInstallerAotWrites(...);
   *** read(...);
   *** transcodeIfNeeded(...);
   *** write(...);
}

-keep class androidx.profileinstaller.ProfileInstaller$DiagnosticCode
-keepclassmembers class androidx.profileinstaller.ProfileInstaller$DiagnosticCode {
}

-keep class androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback
-keepclassmembers class androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback {
}

-keep class androidx.profileinstaller.ProfileInstaller$ResultCode
-keepclassmembers class androidx.profileinstaller.ProfileInstaller$ResultCode {
}

-keep class androidx.profileinstaller.ProfileInstaller
-keepclassmembers class androidx.profileinstaller.ProfileInstaller {
   *** writeProfile(...);
   *** writeProfile(...);
}

-keep class androidx.profileinstaller.ProfileInstallerInitializer$Result
-keepclassmembers class androidx.profileinstaller.ProfileInstallerInitializer$Result {
   <init>(...);
}

-keep class androidx.profileinstaller.ProfileInstallerInitializer
-keepclassmembers class androidx.profileinstaller.ProfileInstallerInitializer {
   <init>(...);
   *** create(...);
   *** dependencies(...);
}

-keep class androidx.profileinstaller.ProfileInstallReceiver
-keepclassmembers class androidx.profileinstaller.ProfileInstallReceiver {
   <init>(...);
   *** onReceive(...);
}

-keep class androidx.profileinstaller.ProfileVerifier$CompilationStatus$ResultCode
-keepclassmembers class androidx.profileinstaller.ProfileVerifier$CompilationStatus$ResultCode {
}

-keep class androidx.profileinstaller.ProfileVerifier$CompilationStatus
-keepclassmembers class androidx.profileinstaller.ProfileVerifier$CompilationStatus {
   *** hasProfileEnqueuedForCompilation(...);
   *** isCompiledWithProfile(...);
   *** getProfileInstallResultCode(...);
}

-keep class androidx.profileinstaller.ProfileVerifier
-keepclassmembers class androidx.profileinstaller.ProfileVerifier {
   *** getCompilationStatusAsync(...);
   *** writeProfileVerification(...);
}

-keep class androidx.profileinstaller.ProfileVersion
-keepclassmembers class androidx.profileinstaller.ProfileVersion {
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   <init>(...);
   *** isSpanGroupIndexCacheEnabled(...);
   *** setSpanGroupIndexCacheEnabled(...);
   *** isSpanIndexCacheEnabled(...);
   *** setSpanIndexCacheEnabled(...);
   *** getSpanGroupIndex(...);
   *** getSpanIndex(...);
   *** getSpanSize(...);
   *** invalidateSpanGroupIndexCache(...);
   *** invalidateSpanIndexCache(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup {
   *** getSpanSize(...);
}

-keep class androidx.recyclerview.widget.GridLayoutManager
-keepclassmembers class androidx.recyclerview.widget.GridLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSpanCount(...);
   *** setSpanCount(...);
   *** isUsingSpansToEstimateScrollbarDimensions(...);
   *** setUsingSpansToEstimateScrollbarDimensions(...);
   *** getSpanSizeLookup(...);
   *** setSpanSizeLookup(...);
}

-keep class androidx.recyclerview.widget.ItemTouchUIUtil
-keepclassmembers class androidx.recyclerview.widget.ItemTouchUIUtil {
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   <init>(...);
   *** getBoundingBoxMargin(...);
   *** getDefaultUIUtil(...);
   *** isItemViewSwipeEnabled(...);
   *** isLongPressDragEnabled(...);
   *** canDropOver(...);
   *** chooseDropTarget(...);
   *** clearView(...);
   *** convertToAbsoluteDirection(...);
   *** convertToRelativeDirection(...);
   *** getAnimationDuration(...);
   *** getMoveThreshold(...);
   *** getMovementFlags(...);
   *** getSwipeEscapeVelocity(...);
   *** getSwipeThreshold(...);
   *** getSwipeVelocityThreshold(...);
   *** interpolateOutOfBoundsScroll(...);
   *** makeFlag(...);
   *** makeMovementFlags(...);
   *** onChildDraw(...);
   *** onChildDrawOver(...);
   *** onMove(...);
   *** onMoved(...);
   *** onSelectedChanged(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper$Callback
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper$Callback {
   *** getMovementFlags(...);
   *** onMove(...);
   *** onSwiped(...);
}

-keep class androidx.recyclerview.widget.ItemTouchHelper
-keepclassmembers class androidx.recyclerview.widget.ItemTouchHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** onChildViewAttachedToWindow(...);
   *** onChildViewDetachedFromWindow(...);
   *** startDrag(...);
   *** startSwipe(...);
}

-keep class androidx.recyclerview.widget.LinearLayoutManager
-keepclassmembers class androidx.recyclerview.widget.LinearLayoutManager {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialPrefetchItemCount(...);
   *** setInitialPrefetchItemCount(...);
   *** isLayoutRTL(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getRecycleChildrenOnDetach(...);
   *** setRecycleChildrenOnDetach(...);
   *** getReverseLayout(...);
   *** setReverseLayout(...);
   *** isSmoothScrollbarEnabled(...);
   *** setSmoothScrollbarEnabled(...);
   *** getStackFromEnd(...);
   *** setStackFromEnd(...);
   *** calculateExtraLayoutSpace(...);
   *** computeScrollVectorForPosition(...);
   *** findFirstCompletelyVisibleItemPosition(...);
   *** findFirstVisibleItemPosition(...);
   *** findLastCompletelyVisibleItemPosition(...);
   *** findLastVisibleItemPosition(...);
   *** generateDefaultLayoutParams(...);
   *** getExtraLayoutSpace(...);
   *** prepareForDrop(...);
   *** scrollToPositionWithOffset(...);
}

-keep class androidx.recyclerview.widget.LinearSmoothScroller
-keepclassmembers class androidx.recyclerview.widget.LinearSmoothScroller {
   <init>(...);
   *** getHorizontalSnapPreference(...);
   *** getVerticalSnapPreference(...);
   *** calculateDtToFit(...);
   *** calculateDxToMakeVisible(...);
   *** calculateDyToMakeVisible(...);
   *** calculateSpeedPerPixel(...);
   *** calculateTimeForDeceleration(...);
   *** calculateTimeForScrolling(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** updateActionForInterimTarget(...);
}

-keep class androidx.recyclerview.widget.LinearSnapHelper
-keepclassmembers class androidx.recyclerview.widget.LinearSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getLayoutManager(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getTotalSpaceChange(...);
   *** createHorizontalHelper(...);
   *** createOrientationHelper(...);
   *** createVerticalHelper(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
   *** onLayoutComplete(...);
}

-keep class androidx.recyclerview.widget.OrientationHelper
-keepclassmembers class androidx.recyclerview.widget.OrientationHelper {
   *** getEnd(...);
   *** getEndAfterPadding(...);
   *** getEndPadding(...);
   *** getMode(...);
   *** getModeInOther(...);
   *** getStartAfterPadding(...);
   *** getTotalSpace(...);
   *** getDecoratedEnd(...);
   *** getDecoratedMeasurement(...);
   *** getDecoratedMeasurementInOther(...);
   *** getDecoratedStart(...);
   *** getTransformedEndWithDecoration(...);
   *** getTransformedStartWithDecoration(...);
   *** offsetChild(...);
   *** offsetChildren(...);
}

-keep class androidx.recyclerview.widget.PagerSnapHelper
-keepclassmembers class androidx.recyclerview.widget.PagerSnapHelper {
   <init>(...);
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** findRelativeAdapterPositionIn(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getStateRestorationPolicy(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** setStateRestorationPolicy(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
   *** onStateRestorationPolicyChanged(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getBindingAdapterPosition(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getAdapterPosition(...);
   *** getBindingAdapter(...);
   *** getBindingAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** addRecyclerListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** nestedScrollBy(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** removeRecyclerListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setDebugAssertionsEnabled(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setVerboseLoggingEnabled(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   <init>(...);
   *** attachToRecyclerView(...);
   *** calculateDistanceToFinalSnap(...);
   *** calculateScrollDistance(...);
   *** createScroller(...);
   *** createSnapScroller(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.SnapHelper
-keepclassmembers class androidx.recyclerview.widget.SnapHelper {
   *** calculateDistanceToFinalSnap(...);
   *** findSnapView(...);
   *** findTargetSnapPosition(...);
}

# ACW for Xamarin.AndroidX.ResourceInspection.Annotation
-keep class androidx.resourceinspection.annotation.AppCompatShadowedAttributes
-keepclassmembers class androidx.resourceinspection.annotation.AppCompatShadowedAttributes {
}

-keep class androidx.resourceinspection.annotation.Attribute$IntMap
-keepclassmembers class androidx.resourceinspection.annotation.Attribute$IntMap {
}

-keep class androidx.resourceinspection.annotation.Attribute
-keepclassmembers class androidx.resourceinspection.annotation.Attribute {
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** getSavedStateProvider(...);
   *** performSave(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.SavedState.SavedState.Ktx
-keep class androidx.savedstate.ViewKt
-keepclassmembers class androidx.savedstate.ViewKt {
}

# ACW for Xamarin.AndroidX.Security.SecurityCrypto
-keep class androidx.security.crypto.EncryptedFile$Builder
-keepclassmembers class androidx.security.crypto.EncryptedFile$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setKeysetAlias(...);
   *** setKeysetPrefName(...);
}

-keep class androidx.security.crypto.EncryptedFile$FileEncryptionScheme
-keepclassmembers class androidx.security.crypto.EncryptedFile$FileEncryptionScheme {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.security.crypto.EncryptedFile
-keepclassmembers class androidx.security.crypto.EncryptedFile {
   *** openFileInput(...);
   *** openFileOutput(...);
}

-keep class androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme
-keepclassmembers class androidx.security.crypto.EncryptedSharedPreferences$PrefKeyEncryptionScheme {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme
-keepclassmembers class androidx.security.crypto.EncryptedSharedPreferences$PrefValueEncryptionScheme {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.security.crypto.EncryptedSharedPreferences
-keepclassmembers class androidx.security.crypto.EncryptedSharedPreferences {
   *** getAll(...);
   *** contains(...);
   *** create(...);
   *** create(...);
   *** edit(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getString(...);
   *** getStringSet(...);
   *** registerOnSharedPreferenceChangeListener(...);
   *** unregisterOnSharedPreferenceChangeListener(...);
}

-keep class androidx.security.crypto.MasterKey$Builder
-keepclassmembers class androidx.security.crypto.MasterKey$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setKeyGenParameterSpec(...);
   *** setKeyScheme(...);
   *** setRequestStrongBoxBacked(...);
   *** setUserAuthenticationRequired(...);
   *** setUserAuthenticationRequired(...);
}

-keep class androidx.security.crypto.MasterKey$KeyScheme
-keepclassmembers class androidx.security.crypto.MasterKey$KeyScheme {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.security.crypto.MasterKey
-keepclassmembers class androidx.security.crypto.MasterKey {
   *** getDefaultAuthenticationValidityDurationSeconds(...);
   *** isKeyStoreBacked(...);
   *** isStrongBoxBacked(...);
   *** isUserAuthenticationRequired(...);
   *** getUserAuthenticationValidityDurationSeconds(...);
}

-keep class androidx.security.crypto.MasterKeys
-keepclassmembers class androidx.security.crypto.MasterKeys {
   *** getOrCreate(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getLockMode(...);
   *** setLockMode(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** close(...);
   *** closePane(...);
   *** onLayout(...);
   *** open(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.Startup.StartupRuntime
-keep class androidx.startup.AppInitializer
-keepclassmembers class androidx.startup.AppInitializer {
   *** getInstance(...);
   *** initializeComponent(...);
   *** isEagerlyInitialized(...);
}

-keep class androidx.startup.Initializer
-keepclassmembers class androidx.startup.Initializer {
}

-keep class androidx.startup.InitializationProvider
-keepclassmembers class androidx.startup.InitializationProvider {
   <init>(...);
   *** delete(...);
   *** getType(...);
   *** insert(...);
   *** onCreate(...);
   *** query(...);
   *** update(...);
}

-keep class androidx.startup.StartupException
-keepclassmembers class androidx.startup.StartupException {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.startup.StartupLogger
-keepclassmembers class androidx.startup.StartupLogger {
   *** e(...);
   *** i(...);
   *** w(...);
}

# ACW for Xamarin.AndroidX.SwipeRefreshLayout
-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener {
}

-keep class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor
-keepclassmembers class mono.androidx.swiperefreshlayout.widget.SwipeRefreshLayout_OnRefreshListenerImplementor {
}

-keep class androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-keepclassmembers class androidx.swiperefreshlayout.widget.SwipeRefreshLayout {
   <init>(...);
   <init>(...);
   *** getProgressCircleDiameter(...);
   *** getProgressViewEndOffset(...);
   *** getProgressViewStartOffset(...);
   *** isRefreshing(...);
   *** setRefreshing(...);
   *** canChildScrollUp(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** hasNestedScrollingParent(...);
   *** onLayout(...);
   *** onMeasure(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setColorScheme(...);
   *** setColorSchemeColors(...);
   *** setColorSchemeResources(...);
   *** setDistanceToTriggerSync(...);
   *** setLegacyRequestDisallowInterceptTouchEventEnabled(...);
   *** setOnChildScrollUpCallback(...);
   *** setOnRefreshListener(...);
   *** setProgressBackgroundColor(...);
   *** setProgressBackgroundColorSchemeColor(...);
   *** setProgressBackgroundColorSchemeResource(...);
   *** setProgressViewEndTarget(...);
   *** setProgressViewOffset(...);
   *** setSize(...);
   *** setSlingshotDistance(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
}

# ACW for Xamarin.AndroidX.Tracing.Tracing
-keep class androidx.tracing.Trace
-keepclassmembers class androidx.tracing.Trace {
   *** isEnabled(...);
   *** beginAsyncSection(...);
   *** beginSection(...);
   *** endAsyncSection(...);
   *** endSection(...);
   *** forceEnableAppTracing(...);
   *** setCounter(...);
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.TransitionSeekController
-keepclassmembers class androidx.transition.TransitionSeekController {
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** isSeekingSupported(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getRootTransition(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** controlDelayedTransition(...);
   *** createSeekController(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat {
   *** isRunning(...);
   *** getOpacity(...);
   *** clearAnimationCallbacks(...);
   *** clearAnimationCallbacks(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
   *** unregisterAnimationCallback(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat {
   *** loadInterpolator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat {
   *** loadAnimator(...);
   *** loadAnimator(...);
   *** loadAnimator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.ArgbEvaluator
-keepclassmembers class androidx.vectordrawable.graphics.drawable.ArgbEvaluator {
   <init>(...);
   *** getInstance(...);
   *** evaluate(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

-keep class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat {
   <init>(...);
   <init>(...);
   *** getInterpolation(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** getVersionedParcelable(...);
   *** getVersionedParcelableList(...);
   *** putVersionedParcelable(...);
   *** putVersionedParcelableList(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readCharSequence(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readMap(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeCharSequence(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeMap(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.AndroidX.ViewPager2
-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
}

-keep class androidx.viewpager2.widget.ViewPager2$PageTransformer
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$PageTransformer {
}

-keep class androidx.viewpager2.widget.ViewPager2
-keepclassmembers class androidx.viewpager2.widget.ViewPager2 {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getItemDecorationCount(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScrollState(...);
   *** isUserInputEnabled(...);
   *** setUserInputEnabled(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** beginFakeDrag(...);
   *** dispatchRestoreInstanceState(...);
   *** endFakeDrag(...);
   *** fakeDragBy(...);
   *** getItemDecorationAt(...);
   *** invalidateItemDecorations(...);
   *** onLayout(...);
   *** registerOnPageChangeCallback(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** requestTransform(...);
   *** setCurrentItem(...);
   *** setPageTransformer(...);
   *** unregisterOnPageChangeCallback(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter$FragmentTransactionCallback$OnPostEventListener
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter$FragmentTransactionCallback$OnPostEventListener {
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter$FragmentTransactionCallback
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter$FragmentTransactionCallback {
   <init>(...);
   *** onFragmentMaxLifecyclePreUpdated(...);
   *** onFragmentPreAdded(...);
   *** onFragmentPreRemoved(...);
   *** onFragmentPreSavedInstanceState(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter$FragmentTransactionCallback
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter$FragmentTransactionCallback {
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsItem(...);
   *** createFragment(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewRecycled(...);
   *** registerFragmentTransactionCallback(...);
   *** restoreState(...);
   *** saveState(...);
   *** unregisterFragmentTransactionCallback(...);
   *** onBindViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   *** createFragment(...);
   *** getItemCount(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentViewHolder
-keepclassmembers class androidx.viewpager2.adapter.FragmentViewHolder {
}

# ACW for Xamarin.AndroidX.Window
-keep class androidx.window.RequiresWindowSdkExtension
-keepclassmembers class androidx.window.RequiresWindowSdkExtension {
}

-keep class androidx.window.WindowProperties
-keepclassmembers class androidx.window.WindowProperties {
}

-keep class androidx.window.WindowSdkExtensions$Companion
-keepclassmembers class androidx.window.WindowSdkExtensions$Companion {
   <init>(...);
   *** getInstance(...);
}

-keep class androidx.window.WindowSdkExtensions
-keepclassmembers class androidx.window.WindowSdkExtensions {
   *** getExtensionVersion(...);
   *** getInstance(...);
}

-keep class androidx.window.WindowSdkExtensions
-keepclassmembers class androidx.window.WindowSdkExtensions {
}

-keep class androidx.window.layout.DisplayFeature
-keepclassmembers class androidx.window.layout.DisplayFeature {
}

-keep class androidx.window.layout.FoldingFeature$OcclusionType$Companion
-keepclassmembers class androidx.window.layout.FoldingFeature$OcclusionType$Companion {
   <init>(...);
}

-keep class androidx.window.layout.FoldingFeature$OcclusionType
-keepclassmembers class androidx.window.layout.FoldingFeature$OcclusionType {
}

-keep class androidx.window.layout.FoldingFeature$Orientation$Companion
-keepclassmembers class androidx.window.layout.FoldingFeature$Orientation$Companion {
   <init>(...);
}

-keep class androidx.window.layout.FoldingFeature$Orientation
-keepclassmembers class androidx.window.layout.FoldingFeature$Orientation {
}

-keep class androidx.window.layout.FoldingFeature$State$Companion
-keepclassmembers class androidx.window.layout.FoldingFeature$State$Companion {
   <init>(...);
}

-keep class androidx.window.layout.FoldingFeature$State
-keepclassmembers class androidx.window.layout.FoldingFeature$State {
}

-keep class androidx.window.layout.FoldingFeature
-keepclassmembers class androidx.window.layout.FoldingFeature {
}

-keep class androidx.window.layout.WindowInfoTracker$Companion
-keepclassmembers class androidx.window.layout.WindowInfoTracker$Companion {
   *** getOrCreate(...);
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.layout.WindowInfoTracker
-keepclassmembers class androidx.window.layout.WindowInfoTracker {
   *** getOrCreate(...);
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.layout.WindowInfoTracker
-keepclassmembers class androidx.window.layout.WindowInfoTracker {
}

-keep class androidx.window.layout.WindowInfoTracker
-keepclassmembers class androidx.window.layout.WindowInfoTracker {
}

-keep class androidx.window.layout.WindowInfoTrackerDecorator
-keepclassmembers class androidx.window.layout.WindowInfoTrackerDecorator {
}

-keep class androidx.window.layout.WindowMetricsCalculator$Companion
-keepclassmembers class androidx.window.layout.WindowMetricsCalculator$Companion {
   *** getOrCreate(...);
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.layout.WindowMetricsCalculator
-keepclassmembers class androidx.window.layout.WindowMetricsCalculator {
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.layout.WindowMetricsCalculator
-keepclassmembers class androidx.window.layout.WindowMetricsCalculator {
}

-keep class androidx.window.layout.WindowMetricsCalculator
-keepclassmembers class androidx.window.layout.WindowMetricsCalculator {
}

-keep class androidx.window.layout.WindowMetricsCalculatorDecorator
-keepclassmembers class androidx.window.layout.WindowMetricsCalculatorDecorator {
}

-keep class androidx.window.layout.WindowLayoutInfo
-keepclassmembers class androidx.window.layout.WindowLayoutInfo {
   <init>(...);
   *** getDisplayFeatures(...);
}

-keep class androidx.window.layout.WindowMetrics
-keepclassmembers class androidx.window.layout.WindowMetrics {
   <init>(...);
   *** getBounds(...);
   *** getWindowInsets(...);
}

-keep class androidx.window.embedding.ActivityEmbeddingController$Companion
-keepclassmembers class androidx.window.embedding.ActivityEmbeddingController$Companion {
   <init>(...);
   *** getInstance(...);
}

-keep class androidx.window.embedding.ActivityEmbeddingController
-keepclassmembers class androidx.window.embedding.ActivityEmbeddingController {
   *** getActivityStack(...);
   *** getInstance(...);
   *** isActivityEmbedded(...);
}

-keep class androidx.window.embedding.ActivityFilter
-keepclassmembers class androidx.window.embedding.ActivityFilter {
   <init>(...);
   *** getComponentName(...);
   *** getIntentAction(...);
   *** matchesActivity(...);
   *** matchesIntent(...);
}

-keep class androidx.window.embedding.ActivityRule$Builder
-keepclassmembers class androidx.window.embedding.ActivityRule$Builder {
   <init>(...);
   *** build(...);
   *** setAlwaysExpand(...);
   *** setTag(...);
}

-keep class androidx.window.embedding.ActivityRule
-keepclassmembers class androidx.window.embedding.ActivityRule {
   *** getAlwaysExpand(...);
   *** getFilters(...);
}

-keep class androidx.window.embedding.ActivityStack
-keepclassmembers class androidx.window.embedding.ActivityStack {
   <init>(...);
   *** isEmpty(...);
   *** contains(...);
}

-keep class androidx.window.embedding.EmbeddingAspectRatio$Companion
-keepclassmembers class androidx.window.embedding.EmbeddingAspectRatio$Companion {
   <init>(...);
   *** ratio(...);
}

-keep class androidx.window.embedding.EmbeddingAspectRatio
-keepclassmembers class androidx.window.embedding.EmbeddingAspectRatio {
   <init>(...);
   *** ratio(...);
}

-keep class androidx.window.embedding.EmbeddingRule
-keepclassmembers class androidx.window.embedding.EmbeddingRule {
   *** getTag(...);
}

-keep class androidx.window.embedding.EmbeddingRule
-keepclassmembers class androidx.window.embedding.EmbeddingRule {
}

-keep class androidx.window.embedding.EmbeddingBackend$Companion
-keepclassmembers class androidx.window.embedding.EmbeddingBackend$Companion {
   *** getInstance(...);
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.embedding.EmbeddingBackend
-keepclassmembers class androidx.window.embedding.EmbeddingBackend {
   *** getInstance(...);
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.embedding.EmbeddingBackend
-keepclassmembers class androidx.window.embedding.EmbeddingBackend {
}

-keep class androidx.window.embedding.EmbeddingBackend
-keepclassmembers class androidx.window.embedding.EmbeddingBackend {
}

-keep class androidx.window.embedding.EmbeddingBackendDecorator
-keepclassmembers class androidx.window.embedding.EmbeddingBackendDecorator {
}

-keep class androidx.window.embedding.RuleController$Companion
-keepclassmembers class androidx.window.embedding.RuleController$Companion {
   <init>(...);
   *** getInstance(...);
   *** parseRules(...);
}

-keep class androidx.window.embedding.RuleController
-keepclassmembers class androidx.window.embedding.RuleController {
   *** getRules(...);
   *** setRules(...);
   *** addRule(...);
   *** clearRules(...);
   *** getInstance(...);
   *** parseRules(...);
   *** removeRule(...);
}

-keep class androidx.window.embedding.SplitAttributes$Builder
-keepclassmembers class androidx.window.embedding.SplitAttributes$Builder {
   <init>(...);
   *** build(...);
   *** setLayoutDirection(...);
   *** setSplitType(...);
}

-keep class androidx.window.embedding.SplitAttributes$Companion
-keepclassmembers class androidx.window.embedding.SplitAttributes$Companion {
   <init>(...);
}

-keep class androidx.window.embedding.SplitAttributes$LayoutDirection$Companion
-keepclassmembers class androidx.window.embedding.SplitAttributes$LayoutDirection$Companion {
   <init>(...);
}

-keep class androidx.window.embedding.SplitAttributes$LayoutDirection
-keepclassmembers class androidx.window.embedding.SplitAttributes$LayoutDirection {
}

-keep class androidx.window.embedding.SplitAttributes$SplitType$Companion
-keepclassmembers class androidx.window.embedding.SplitAttributes$SplitType$Companion {
   <init>(...);
   *** ratio(...);
}

-keep class androidx.window.embedding.SplitAttributes$SplitType
-keepclassmembers class androidx.window.embedding.SplitAttributes$SplitType {
   *** ratio(...);
}

-keep class androidx.window.embedding.SplitAttributes
-keepclassmembers class androidx.window.embedding.SplitAttributes {
   <init>(...);
   <init>(...);
   *** getLayoutDirection(...);
   *** getSplitType(...);
}

-keep class androidx.window.embedding.SplitAttributesCalculatorParams
-keepclassmembers class androidx.window.embedding.SplitAttributesCalculatorParams {
   <init>(...);
   *** getDefaultSplitAttributes(...);
   *** getParentConfiguration(...);
   *** getParentWindowLayoutInfo(...);
   *** getParentWindowMetrics(...);
   *** getSplitRuleTag(...);
   *** areDefaultConstraintsSatisfied(...);
}

-keep class androidx.window.embedding.SplitController$Companion
-keepclassmembers class androidx.window.embedding.SplitController$Companion {
   <init>(...);
   *** getInstance(...);
}

-keep class androidx.window.embedding.SplitController$SplitSupportStatus$Companion
-keepclassmembers class androidx.window.embedding.SplitController$SplitSupportStatus$Companion {
   <init>(...);
}

-keep class androidx.window.embedding.SplitController$SplitSupportStatus
-keepclassmembers class androidx.window.embedding.SplitController$SplitSupportStatus {
}

-keep class androidx.window.embedding.SplitController
-keepclassmembers class androidx.window.embedding.SplitController {
   *** clearSplitAttributesCalculator(...);
   *** getInstance(...);
   *** getSplitSupportStatus(...);
   *** invalidateTopVisibleSplitAttributes(...);
   *** setSplitAttributesCalculator(...);
   *** splitInfoList(...);
   *** updateSplitAttributes(...);
}

-keep class androidx.window.embedding.SplitInfo
-keepclassmembers class androidx.window.embedding.SplitInfo {
   <init>(...);
   *** getPrimaryActivityStack(...);
   *** getSecondaryActivityStack(...);
   *** getSplitAttributes(...);
   *** contains(...);
}

-keep class androidx.window.embedding.SplitPairFilter
-keepclassmembers class androidx.window.embedding.SplitPairFilter {
   <init>(...);
   *** getPrimaryActivityName(...);
   *** getSecondaryActivityIntentAction(...);
   *** getSecondaryActivityName(...);
   *** matchesActivityIntentPair(...);
   *** matchesActivityPair(...);
}

-keep class androidx.window.embedding.SplitPairRule$Builder
-keepclassmembers class androidx.window.embedding.SplitPairRule$Builder {
   <init>(...);
   *** build(...);
   *** setClearTop(...);
   *** setDefaultSplitAttributes(...);
   *** setFinishPrimaryWithSecondary(...);
   *** setFinishSecondaryWithPrimary(...);
   *** setMaxAspectRatioInLandscape(...);
   *** setMaxAspectRatioInPortrait(...);
   *** setMinHeightDp(...);
   *** setMinSmallestWidthDp(...);
   *** setMinWidthDp(...);
   *** setTag(...);
}

-keep class androidx.window.embedding.SplitPairRule
-keepclassmembers class androidx.window.embedding.SplitPairRule {
   *** getClearTop(...);
   *** getFilters(...);
   *** getFinishPrimaryWithSecondary(...);
   *** getFinishSecondaryWithPrimary(...);
}

-keep class androidx.window.embedding.SplitPlaceholderRule$Builder
-keepclassmembers class androidx.window.embedding.SplitPlaceholderRule$Builder {
   <init>(...);
   *** build(...);
   *** setDefaultSplitAttributes(...);
   *** setFinishPrimaryWithPlaceholder(...);
   *** setMaxAspectRatioInLandscape(...);
   *** setMaxAspectRatioInPortrait(...);
   *** setMinHeightDp(...);
   *** setMinSmallestWidthDp(...);
   *** setMinWidthDp(...);
   *** setSticky(...);
   *** setTag(...);
}

-keep class androidx.window.embedding.SplitPlaceholderRule
-keepclassmembers class androidx.window.embedding.SplitPlaceholderRule {
   *** getFilters(...);
   *** getFinishPrimaryWithPlaceholder(...);
   *** isSticky(...);
   *** getPlaceholderIntent(...);
}

-keep class androidx.window.embedding.SplitRule$Companion
-keepclassmembers class androidx.window.embedding.SplitRule$Companion {
   <init>(...);
}

-keep class androidx.window.embedding.SplitRule$FinishBehavior$Companion
-keepclassmembers class androidx.window.embedding.SplitRule$FinishBehavior$Companion {
   <init>(...);
}

-keep class androidx.window.embedding.SplitRule$FinishBehavior
-keepclassmembers class androidx.window.embedding.SplitRule$FinishBehavior {
}

-keep class androidx.window.embedding.SplitRule
-keepclassmembers class androidx.window.embedding.SplitRule {
   *** getDefaultSplitAttributes(...);
   *** getMaxAspectRatioInLandscape(...);
   *** getMaxAspectRatioInPortrait(...);
   *** getMinHeightDp(...);
   *** getMinSmallestWidthDp(...);
   *** getMinWidthDp(...);
}

-keep class androidx.window.core.ExperimentalWindowApi
-keepclassmembers class androidx.window.core.ExperimentalWindowApi {
}

-keep class androidx.window.area.WindowAreaController$Companion
-keepclassmembers class androidx.window.area.WindowAreaController$Companion {
   *** getOrCreate(...);
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.area.WindowAreaController
-keepclassmembers class androidx.window.area.WindowAreaController {
   *** overrideDecorator(...);
   *** reset(...);
}

-keep class androidx.window.area.WindowAreaController
-keepclassmembers class androidx.window.area.WindowAreaController {
}

-keep class androidx.window.area.WindowAreaController
-keepclassmembers class androidx.window.area.WindowAreaController {
}

-keep class androidx.window.area.WindowAreaControllerDecorator
-keepclassmembers class androidx.window.area.WindowAreaControllerDecorator {
}

-keep class androidx.window.area.WindowAreaPresentationSessionCallback
-keepclassmembers class androidx.window.area.WindowAreaPresentationSessionCallback {
}

-keep class androidx.window.area.WindowAreaSession
-keepclassmembers class androidx.window.area.WindowAreaSession {
}

-keep class androidx.window.area.WindowAreaSessionCallback
-keepclassmembers class androidx.window.area.WindowAreaSessionCallback {
}

-keep class androidx.window.area.WindowAreaSessionPresenter
-keepclassmembers class androidx.window.area.WindowAreaSessionPresenter {
}

-keep class androidx.window.area.WindowAreaCapability$Operation$Companion
-keepclassmembers class androidx.window.area.WindowAreaCapability$Operation$Companion {
   <init>(...);
}

-keep class androidx.window.area.WindowAreaCapability$Operation
-keepclassmembers class androidx.window.area.WindowAreaCapability$Operation {
}

-keep class androidx.window.area.WindowAreaCapability$Status$Companion
-keepclassmembers class androidx.window.area.WindowAreaCapability$Status$Companion {
   <init>(...);
}

-keep class androidx.window.area.WindowAreaCapability$Status
-keepclassmembers class androidx.window.area.WindowAreaCapability$Status {
}

-keep class androidx.window.area.WindowAreaCapability
-keepclassmembers class androidx.window.area.WindowAreaCapability {
   *** getOperation(...);
   *** getStatus(...);
}

-keep class androidx.window.area.WindowAreaInfo$Type$Companion
-keepclassmembers class androidx.window.area.WindowAreaInfo$Type$Companion {
   <init>(...);
}

-keep class androidx.window.area.WindowAreaInfo$Type
-keepclassmembers class androidx.window.area.WindowAreaInfo$Type {
}

-keep class androidx.window.area.WindowAreaInfo
-keepclassmembers class androidx.window.area.WindowAreaInfo {
   *** getMetrics(...);
   *** setMetrics(...);
   *** getToken(...);
   *** getActiveSession(...);
   *** getCapability(...);
   *** getType(...);
}

-keep class androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
-keepclassmembers class androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements {
}

-keep class androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
-keepclassmembers class androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements {
}

-keep class androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
-keepclassmembers class androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements {
}

-keep class androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
-keepclassmembers class androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements {
}

# ACW for Xamarin.AndroidX.Window.Extensions.Core.Core
-keep class androidx.window.extensions.core.util.function.Consumer
-keepclassmembers class androidx.window.extensions.core.util.function.Consumer {
}

-keep class androidx.window.extensions.core.util.function.Function
-keepclassmembers class androidx.window.extensions.core.util.function.Function {
}

-keep class androidx.window.extensions.core.util.function.Predicate
-keepclassmembers class androidx.window.extensions.core.util.function.Predicate {
}

# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.shape.CornerTreatment
-keepclassmembers class com.google.android.material.shape.CornerTreatment {
   <init>(...);
   *** getCornerPath(...);
   *** getCornerPath(...);
   *** getCornerPath(...);
}

-keep class com.google.android.material.shape.EdgeTreatment
-keepclassmembers class com.google.android.material.shape.EdgeTreatment {
   <init>(...);
   *** getEdgePath(...);
   *** getEdgePath(...);
}

-keep class com.google.android.material.shape.CornerSize
-keepclassmembers class com.google.android.material.shape.CornerSize {
}

-keep class com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState
-keepclassmembers class com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState {
   <init>(...);
   <init>(...);
   *** getChangingConfigurations(...);
   *** newDrawable(...);
}

-keep class com.google.android.material.shape.MaterialShapeDrawable
-keepclassmembers class com.google.android.material.shape.MaterialShapeDrawable {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBottomLeftCornerResolvedSize(...);
   *** getBottomRightCornerResolvedSize(...);
   *** getBoundsAsRectF(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getFillColor(...);
   *** setFillColor(...);
   *** getInterpolation(...);
   *** setInterpolation(...);
   *** isElevationOverlayEnabled(...);
   *** isElevationOverlayInitialized(...);
   *** isRoundRect(...);
   *** getOpacity(...);
   *** getPaintStyle(...);
   *** setPaintStyle(...);
   *** getParentAbsoluteElevation(...);
   *** setParentAbsoluteElevation(...);
   *** getResolvedTintColor(...);
   *** getScale(...);
   *** setScale(...);
   *** getShadowCompatRotation(...);
   *** setShadowCompatRotation(...);
   *** getShadowCompatibilityMode(...);
   *** setShadowCompatibilityMode(...);
   *** getShadowElevation(...);
   *** setShadowElevation(...);
   *** isShadowEnabled(...);
   *** setShadowEnabled(...);
   *** getShadowOffsetX(...);
   *** getShadowOffsetY(...);
   *** getShadowRadius(...);
   *** setShadowRadius(...);
   *** getShadowVerticalOffset(...);
   *** setShadowVerticalOffset(...);
   *** getShapeAppearanceModel(...);
   *** setShapeAppearanceModel(...);
   *** getShapedViewModel(...);
   *** setShapedViewModel(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeTintList(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** getTintList(...);
   *** getTopLeftCornerResolvedSize(...);
   *** getTopRightCornerResolvedSize(...);
   *** getTranslationZ(...);
   *** setTranslationZ(...);
   *** calculatePathForSize(...);
   *** compositeElevationOverlayIfNeeded(...);
   *** createWithElevationOverlay(...);
   *** createWithElevationOverlay(...);
   *** createWithElevationOverlay(...);
   *** draw(...);
   *** drawShape(...);
   *** drawStrokeShape(...);
   *** getPathForSize(...);
   *** getZ(...);
   *** initializeElevationOverlay(...);
   *** isPointInTransparentRegion(...);
   *** requiresCompatShadow(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setCornerSize(...);
   *** setCornerSize(...);
   *** setEdgeIntersectionCheckEnable(...);
   *** setPadding(...);
   *** setShadowBitmapDrawingEnable(...);
   *** setShadowColor(...);
   *** setStroke(...);
   *** setStroke(...);
   *** setStrokeTint(...);
   *** setStrokeTint(...);
   *** setUseTintColorForShadow(...);
   *** setZ(...);
}

-keep class com.google.android.material.shape.ShapeAppearanceModel$Builder
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** setAllCornerSizes(...);
   *** setAllCornerSizes(...);
   *** setAllCorners(...);
   *** setAllCorners(...);
   *** setAllEdges(...);
   *** setBottomEdge(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCorner(...);
   *** setBottomLeftCornerSize(...);
   *** setBottomLeftCornerSize(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCorner(...);
   *** setBottomRightCornerSize(...);
   *** setBottomRightCornerSize(...);
   *** setLeftEdge(...);
   *** setRightEdge(...);
   *** setTopEdge(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCorner(...);
   *** setTopLeftCornerSize(...);
   *** setTopLeftCornerSize(...);
   *** setTopRightCorner(...);
   *** setTopRightCorner(...);
   *** setTopRightCorner(...);
   *** setTopRightCornerSize(...);
   *** setTopRightCornerSize(...);
}

-keep class com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel$CornerSizeUnaryOperator {
}

-keep class com.google.android.material.shape.ShapeAppearanceModel
-keepclassmembers class com.google.android.material.shape.ShapeAppearanceModel {
   <init>(...);
   *** getBottomEdge(...);
   *** getBottomLeftCorner(...);
   *** getBottomLeftCornerSize(...);
   *** getBottomRightCorner(...);
   *** getBottomRightCornerSize(...);
   *** getLeftEdge(...);
   *** getRightEdge(...);
   *** getTopEdge(...);
   *** getTopLeftCorner(...);
   *** getTopLeftCornerSize(...);
   *** getTopRightCorner(...);
   *** getTopRightCornerSize(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** builder(...);
   *** isRoundRect(...);
   *** toBuilder(...);
   *** withCornerSize(...);
   *** withCornerSize(...);
   *** withTransformedCornerSizes(...);
}

-keep class com.google.android.material.shape.ShapePath
-keepclassmembers class com.google.android.material.shape.ShapePath {
   <init>(...);
   <init>(...);
   *** addArc(...);
   *** applyToPath(...);
   *** cubicToPoint(...);
   *** lineTo(...);
   *** lineTo(...);
   *** quadToPoint(...);
   *** reset(...);
   *** reset(...);
}

-keep class com.google.android.material.shape.ShapePathModel
-keepclassmembers class com.google.android.material.shape.ShapePathModel {
   <init>(...);
   *** setAllCorners(...);
   *** setAllEdges(...);
   *** setBottomEdge(...);
   *** setBottomLeftCorner(...);
   *** setBottomRightCorner(...);
   *** setCornerTreatments(...);
   *** setEdgeTreatments(...);
   *** setLeftEdge(...);
   *** setRightEdge(...);
   *** setTopEdge(...);
   *** setTopLeftCorner(...);
   *** setTopRightCorner(...);
}

-keep class com.google.android.material.imageview.ShapeableImageView
-keepclassmembers class com.google.android.material.imageview.ShapeableImageView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingEnd(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingStart(...);
   *** getContentPaddingTop(...);
   *** getShapeAppearanceModel(...);
   *** setShapeAppearanceModel(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** setContentPadding(...);
   *** setContentPaddingRelative(...);
   *** setStrokeColorResource(...);
   *** setStrokeWidthResource(...);
}

-keep class com.google.android.material.elevation.ElevationOverlayProvider
-keepclassmembers class com.google.android.material.elevation.ElevationOverlayProvider {
   <init>(...);
   <init>(...);
   *** isThemeElevationOverlayEnabled(...);
   *** getThemeElevationOverlayColor(...);
   *** getThemeSurfaceColor(...);
   *** calculateOverlayAlpha(...);
   *** calculateOverlayAlphaFraction(...);
   *** compositeOverlay(...);
   *** compositeOverlay(...);
   *** compositeOverlayIfNeeded(...);
   *** compositeOverlayIfNeeded(...);
   *** compositeOverlayWithThemeSurfaceColorIfNeeded(...);
   *** compositeOverlayWithThemeSurfaceColorIfNeeded(...);
   *** getParentAbsoluteElevation(...);
}

-keep class com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox$OnCheckedStateChangedListener {
}

-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnCheckedStateChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.checkbox.MaterialCheckBox_OnCheckedStateChangedListenerImplementor {
}

-keep class com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox$OnErrorChangedListener {
}

-keep class mono.com.google.android.material.checkbox.MaterialCheckBox_OnErrorChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.checkbox.MaterialCheckBox_OnErrorChangedListenerImplementor {
}

-keep class com.google.android.material.checkbox.MaterialCheckBox
-keepclassmembers class com.google.android.material.checkbox.MaterialCheckBox {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getButtonIconDrawable(...);
   *** setButtonIconDrawable(...);
   *** getButtonIconTintList(...);
   *** setButtonIconTintList(...);
   *** getButtonIconTintMode(...);
   *** setButtonIconTintMode(...);
   *** isCenterIfNoTextEnabled(...);
   *** setCenterIfNoTextEnabled(...);
   *** getCheckedState(...);
   *** setCheckedState(...);
   *** getErrorAccessibilityLabel(...);
   *** setErrorAccessibilityLabel(...);
   *** isErrorShown(...);
   *** setErrorShown(...);
   *** isUseMaterialThemeColors(...);
   *** setUseMaterialThemeColors(...);
   *** addOnCheckedStateChangedListener(...);
   *** addOnErrorChangedListener(...);
   *** clearOnCheckedStateChangedListeners(...);
   *** clearOnErrorChangedListeners(...);
   *** removeOnCheckedStateChangedListener(...);
   *** removeOnErrorChangedListener(...);
   *** setButtonIconDrawableResource(...);
   *** setErrorAccessibilityLabelResource(...);
}

-keep class com.google.android.material.button.MaterialButton$OnCheckedChangeListener
-keepclassmembers class com.google.android.material.button.MaterialButton$OnCheckedChangeListener {
}

-keep class mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor
-keepclassmembers class mono.com.google.android.material.button.MaterialButton_OnCheckedChangeListenerImplementor {
}

-keep class com.google.android.material.button.MaterialButton
-keepclassmembers class com.google.android.material.button.MaterialButton {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getCornerRadius(...);
   *** setCornerRadius(...);
   *** getIcon(...);
   *** setIcon(...);
   *** getIconGravity(...);
   *** setIconGravity(...);
   *** getIconPadding(...);
   *** setIconPadding(...);
   *** getIconSize(...);
   *** setIconSize(...);
   *** getIconTint(...);
   *** setIconTint(...);
   *** getIconTintMode(...);
   *** setIconTintMode(...);
   *** getInsetBottom(...);
   *** setInsetBottom(...);
   *** getInsetTop(...);
   *** setInsetTop(...);
   *** getRippleColor(...);
   *** setRippleColor(...);
   *** getShapeAppearanceModel(...);
   *** setShapeAppearanceModel(...);
   *** getStrokeColor(...);
   *** setStrokeColor(...);
   *** getStrokeWidth(...);
   *** setStrokeWidth(...);
   *** isToggleCheckedStateOnClick(...);
   *** setToggleCheckedStateOnClick(...);
   *** addOnCheckedChangeListener(...);
   *** clearOnCheckedChangeListeners(...);
   *** removeOnCheckedChangeListener(...);
   *** setCornerRadiusResource(...);
   *** setIconResource(...);
   *** setIconTintResource(...);
   *** setRippleColorResource(...);
   *** setStrokeColorResource(...);
   *** setStrokeWidthResource(...);
   *** toggle(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   <init>(...);
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback {
   *** onSlide(...);
   *** onStateChanged(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetBehavior
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetBehavior {
   <init>(...);
   <init>(...);
   *** isDraggable(...);
   *** setDraggable(...);
   *** getExpandedOffset(...);
   *** setExpandedOffset(...);
   *** isFitToContents(...);
   *** setFitToContents(...);
   *** isGestureInsetBottomIgnored(...);
   *** setGestureInsetBottomIgnored(...);
   *** getHalfExpandedRatio(...);
   *** setHalfExpandedRatio(...);
   *** getHideFriction(...);
   *** setHideFriction(...);
   *** isHideable(...);
   *** setHideable(...);
   *** isHideableWhenDragging(...);
   *** isNestedScrollingCheckEnabled(...);
   *** getLastStableState(...);
   *** getMaxHeight(...);
   *** setMaxHeight(...);
   *** getMaxWidth(...);
   *** setMaxWidth(...);
   *** getPeekHeight(...);
   *** setPeekHeight(...);
   *** getSaveFlags(...);
   *** setSaveFlags(...);
   *** isShouldRemoveExpandedCorners(...);
   *** setShouldRemoveExpandedCorners(...);
   *** getSignificantVelocityThreshold(...);
   *** setSignificantVelocityThreshold(...);
   *** getSkipCollapsed(...);
   *** setSkipCollapsed(...);
   *** getState(...);
   *** setState(...);
   *** addBottomSheetCallback(...);
   *** calculateSlideOffset(...);
   *** cancelBackProgress(...);
   *** disableShapeAnimations(...);
   *** from(...);
   *** handleBackInvoked(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** removeBottomSheetCallback(...);
   *** setBottomSheetCallback(...);
   *** setHideableInternal(...);
   *** setPeekHeight(...);
   *** setUpdateImportantForAccessibilityOnSiblings(...);
   *** shouldExpandOnUpwardDrag(...);
   *** shouldSkipHalfExpandedStateWhenDragging(...);
   *** shouldSkipSmoothAnimation(...);
   *** startBackProgress(...);
   *** updateBackProgress(...);
}

-keep class com.google.android.material.bottomsheet.BottomSheetDialog
-keepclassmembers class com.google.android.material.bottomsheet.BottomSheetDialog {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getBehavior(...);
   *** getDismissWithAnimation(...);
   *** setDismissWithAnimation(...);
   *** getEdgeToEdgeEnabled(...);
   *** setLightStatusBar(...);
}

-keep class com.google.android.material.badge.BadgeDrawable
-keepclassmembers class com.google.android.material.badge.BadgeDrawable {
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBadgeGravity(...);
   *** setBadgeGravity(...);
   *** getBadgeNumberLocale(...);
   *** setBadgeNumberLocale(...);
   *** getBadgeTextColor(...);
   *** setBadgeTextColor(...);
   *** getContentDescription(...);
   *** getCustomBadgeParent(...);
   *** hasNumber(...);
   *** hasText(...);
   *** getHorizontalOffset(...);
   *** setHorizontalOffset(...);
   *** getHorizontalOffsetWithText(...);
   *** setHorizontalOffsetWithText(...);
   *** getHorizontalOffsetWithoutText(...);
   *** setHorizontalOffsetWithoutText(...);
   *** getHorizontalPadding(...);
   *** setHorizontalPadding(...);
   *** getLargeFontVerticalOffsetAdjustment(...);
   *** setLargeFontVerticalOffsetAdjustment(...);
   *** getMaxCharacterCount(...);
   *** setMaxCharacterCount(...);
   *** getMaxNumber(...);
   *** setMaxNumber(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getOpacity(...);
   *** getText(...);
   *** setText(...);
   *** getVerticalOffset(...);
   *** setVerticalOffset(...);
   *** getVerticalOffsetWithText(...);
   *** setVerticalOffsetWithText(...);
   *** getVerticalOffsetWithoutText(...);
   *** setVerticalOffsetWithoutText(...);
   *** getVerticalPadding(...);
   *** setVerticalPadding(...);
   *** clearNumber(...);
   *** clearText(...);
   *** create(...);
   *** createFromResource(...);
   *** draw(...);
   *** onStateChange(...);
   *** onTextSizeChange(...);
   *** setAlpha(...);
   *** setAutoAdjustToWithinGrandparentBounds(...);
   *** setBadgeWithTextShapeAppearance(...);
   *** setBadgeWithTextShapeAppearanceOverlay(...);
   *** setBadgeWithoutTextShapeAppearance(...);
   *** setBadgeWithoutTextShapeAppearanceOverlay(...);
   *** setColorFilter(...);
   *** setContentDescriptionExceedsMaxBadgeNumberStringResource(...);
   *** setContentDescriptionForText(...);
   *** setContentDescriptionNumberless(...);
   *** setContentDescriptionQuantityStringsResource(...);
   *** setTextAppearance(...);
   *** setVisible(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   <init>(...);
   *** getActiveIndicatorLabelPadding(...);
   *** setActiveIndicatorLabelPadding(...);
   *** getItemActiveIndicatorColor(...);
   *** setItemActiveIndicatorColor(...);
   *** isItemActiveIndicatorEnabled(...);
   *** setItemActiveIndicatorEnabled(...);
   *** getItemActiveIndicatorHeight(...);
   *** setItemActiveIndicatorHeight(...);
   *** getItemActiveIndicatorMarginHorizontal(...);
   *** setItemActiveIndicatorMarginHorizontal(...);
   *** getItemActiveIndicatorShapeAppearance(...);
   *** setItemActiveIndicatorShapeAppearance(...);
   *** getItemActiveIndicatorWidth(...);
   *** setItemActiveIndicatorWidth(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemPaddingBottom(...);
   *** setItemPaddingBottom(...);
   *** getItemPaddingTop(...);
   *** setItemPaddingTop(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getMenuView(...);
   *** getPresenter(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** createNavigationBarMenuView(...);
   *** getBadge(...);
   *** getOrCreateBadge(...);
   *** inflateMenu(...);
   *** removeBadge(...);
   *** setItemIconSizeRes(...);
   *** setItemOnTouchListener(...);
   *** setItemTextAppearanceActiveBoldEnabled(...);
   *** setOnItemReselectedListener(...);
   *** setOnItemSelectedListener(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** setEnabled(...);
   <init>(...);
   *** getActiveIndicatorDrawable(...);
   *** setActiveIndicatorDrawable(...);
   *** getBadge(...);
   *** getItemBackgroundResId(...);
   *** getItemData(...);
   *** getItemDefaultMarginResId(...);
   *** getItemLayoutResId(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setActiveIndicatorEnabled(...);
   *** setActiveIndicatorHeight(...);
   *** setActiveIndicatorLabelPadding(...);
   *** setActiveIndicatorMarginHorizontal(...);
   *** setActiveIndicatorResizeable(...);
   *** setActiveIndicatorWidth(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setItemPaddingBottom(...);
   *** setItemPaddingTop(...);
   *** setItemRippleColor(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceActiveBoldEnabled(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   <init>(...);
   *** getActiveIndicatorLabelPadding(...);
   *** setActiveIndicatorLabelPadding(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemActiveIndicatorColor(...);
   *** setItemActiveIndicatorColor(...);
   *** getItemActiveIndicatorEnabled(...);
   *** setItemActiveIndicatorEnabled(...);
   *** getItemActiveIndicatorHeight(...);
   *** setItemActiveIndicatorHeight(...);
   *** getItemActiveIndicatorMarginHorizontal(...);
   *** setItemActiveIndicatorMarginHorizontal(...);
   *** isItemActiveIndicatorResizeable(...);
   *** setItemActiveIndicatorResizeable(...);
   *** getItemActiveIndicatorShapeAppearance(...);
   *** setItemActiveIndicatorShapeAppearance(...);
   *** getItemActiveIndicatorWidth(...);
   *** setItemActiveIndicatorWidth(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemPaddingBottom(...);
   *** setItemPaddingBottom(...);
   *** getItemPaddingTop(...);
   *** setItemPaddingTop(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** getSelectedItemPosition(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** createNavigationBarItemView(...);
   *** findItemView(...);
   *** getBadge(...);
   *** initialize(...);
   *** isShifting(...);
   *** setItemOnTouchListener(...);
   *** setItemTextAppearanceActiveBoldEnabled(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.navigation.NavigationBarPresenter
-keepclassmembers class com.google.android.material.navigation.NavigationBarPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setCallback(...);
   *** setMenuView(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationView
-keepclassmembers class com.google.android.material.navigation.NavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isBottomInsetScrimEnabled(...);
   *** setBottomInsetScrimEnabled(...);
   *** getCheckedItem(...);
   *** setCheckedItem(...);
   *** getDividerInsetEnd(...);
   *** setDividerInsetEnd(...);
   *** getDividerInsetStart(...);
   *** setDividerInsetStart(...);
   *** getHeaderCount(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemHorizontalPadding(...);
   *** setItemHorizontalPadding(...);
   *** getItemIconPadding(...);
   *** setItemIconPadding(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemMaxLines(...);
   *** setItemMaxLines(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getItemVerticalPadding(...);
   *** setItemVerticalPadding(...);
   *** getMenu(...);
   *** getSubheaderInsetEnd(...);
   *** setSubheaderInsetEnd(...);
   *** getSubheaderInsetStart(...);
   *** setSubheaderInsetStart(...);
   *** isTopInsetScrimEnabled(...);
   *** setTopInsetScrimEnabled(...);
   *** addHeaderView(...);
   *** cancelBackProgress(...);
   *** getHeaderView(...);
   *** handleBackInvoked(...);
   *** inflateHeaderView(...);
   *** inflateMenu(...);
   *** removeHeaderView(...);
   *** setCheckedItem(...);
   *** setForceCompatClippingEnabled(...);
   *** setItemBackgroundResource(...);
   *** setItemHorizontalPaddingResource(...);
   *** setItemIconPaddingResource(...);
   *** setItemIconSize(...);
   *** setItemTextAppearance(...);
   *** setItemTextAppearanceActiveBoldEnabled(...);
   *** setItemVerticalPaddingResource(...);
   *** setNavigationItemSelectedListener(...);
   *** startBackProgress(...);
   *** updateBackProgress(...);
}

-keep class com.google.android.material.tabs.TabLayout$TabView
-keepclassmembers class com.google.android.material.tabs.TabLayout$TabView {
   <init>(...);
   *** getTab(...);
   *** onMeasure(...);
}

-keep class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener {
}

-keep class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.tabs.TabLayout_BaseOnTabSelectedListenerImplementor {
}

-keep class com.google.android.material.tabs.TabLayout$OnTabSelectedListener
-keepclassmembers class com.google.android.material.tabs.TabLayout$OnTabSelectedListener {
}

-keep class com.google.android.material.tabs.TabLayout$Tab
-keepclassmembers class com.google.android.material.tabs.TabLayout$Tab {
   <init>(...);
   *** getBadge(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getId(...);
   *** isSelected(...);
   *** getOrCreateBadge(...);
   *** getPosition(...);
   *** getTabLabelVisibility(...);
   *** getTag(...);
   *** getText(...);
   *** removeBadge(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setId(...);
   *** setTabLabelVisibility(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class com.google.android.material.tabs.TabLayout
-keepclassmembers class com.google.android.material.tabs.TabLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** hasUnboundedRipple(...);
   *** isInlineLabel(...);
   *** setInlineLabel(...);
   *** getSelectedTabPosition(...);
   *** getTabCount(...);
   *** getTabGravity(...);
   *** setTabGravity(...);
   *** getTabIconTint(...);
   *** setTabIconTint(...);
   *** getTabIndicatorAnimationMode(...);
   *** setTabIndicatorAnimationMode(...);
   *** isTabIndicatorFullWidth(...);
   *** setTabIndicatorFullWidth(...);
   *** getTabIndicatorGravity(...);
   *** getTabMode(...);
   *** setTabMode(...);
   *** getTabRippleColor(...);
   *** setTabRippleColor(...);
   *** getTabSelectedIndicator(...);
   *** getTabTextColors(...);
   *** setTabTextColors(...);
   *** addOnTabSelectedListener(...);
   *** addOnTabSelectedListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** clearOnTabSelectedListeners(...);
   *** createTabFromPool(...);
   *** getTabAt(...);
   *** newTab(...);
   *** releaseFromTabPool(...);
   *** removeAllTabs(...);
   *** removeOnTabSelectedListener(...);
   *** removeOnTabSelectedListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** selectTab(...);
   *** setInlineLabelResource(...);
   *** setOnTabSelectedListener(...);
   *** setOnTabSelectedListener(...);
   *** setScrollPosition(...);
   *** setScrollPosition(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicator(...);
   *** setSelectedTabIndicatorColor(...);
   *** setSelectedTabIndicatorGravity(...);
   *** setSelectedTabIndicatorHeight(...);
   *** setTabIconTintResource(...);
   *** setTabRippleColorResource(...);
   *** setTabTextColors(...);
   *** setTabsFromPagerAdapter(...);
   *** setUnboundedRipple(...);
   *** setUnboundedRippleResource(...);
   *** setupWithViewPager(...);
   *** setupWithViewPager(...);
}

-keep class com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy
-keepclassmembers class com.google.android.material.tabs.TabLayoutMediator$TabConfigurationStrategy {
}

-keep class com.google.android.material.tabs.TabLayoutMediator
-keepclassmembers class com.google.android.material.tabs.TabLayoutMediator {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isAttached(...);
   *** attach(...);
   *** detach(...);
}

-keep class com.google.android.material.internal.StaticLayoutBuilderConfigurer
-keepclassmembers class com.google.android.material.internal.StaticLayoutBuilderConfigurer {
}

-keep class com.google.android.material.internal.ScrimInsetsFrameLayout
-keepclassmembers class com.google.android.material.internal.ScrimInsetsFrameLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onInsetsChanged(...);
   *** setDrawBottomInsetForeground(...);
   *** setDrawLeftInsetForeground(...);
   *** setDrawRightInsetForeground(...);
   *** setDrawTopInsetForeground(...);
   *** setScrimInsetForeground(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationItemView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationItemView {
   <init>(...);
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationMenuView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationMenuView {
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer
-keepclassmembers class com.google.android.material.appbar.CollapsingToolbarLayout$StaticLayoutBuilderConfigurer {
}

-keep class com.google.android.material.appbar.CollapsingToolbarLayout
-keepclassmembers class com.google.android.material.appbar.CollapsingToolbarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapsedTitleGravity(...);
   *** setCollapsedTitleGravity(...);
   *** getCollapsedTitleTextSize(...);
   *** setCollapsedTitleTextSize(...);
   *** getCollapsedTitleTypeface(...);
   *** setCollapsedTitleTypeface(...);
   *** getContentScrim(...);
   *** setContentScrim(...);
   *** getExpandedTitleGravity(...);
   *** setExpandedTitleGravity(...);
   *** getExpandedTitleMarginBottom(...);
   *** setExpandedTitleMarginBottom(...);
   *** getExpandedTitleMarginEnd(...);
   *** setExpandedTitleMarginEnd(...);
   *** getExpandedTitleMarginStart(...);
   *** setExpandedTitleMarginStart(...);
   *** getExpandedTitleMarginTop(...);
   *** setExpandedTitleMarginTop(...);
   *** getExpandedTitleTextSize(...);
   *** setExpandedTitleTextSize(...);
   *** getExpandedTitleTypeface(...);
   *** setExpandedTitleTypeface(...);
   *** isExtraMultilineHeightEnabled(...);
   *** setExtraMultilineHeightEnabled(...);
   *** isForceApplySystemWindowInsetTop(...);
   *** setForceApplySystemWindowInsetTop(...);
   *** getHyphenationFrequency(...);
   *** setHyphenationFrequency(...);
   *** getLineCount(...);
   *** getLineSpacingAdd(...);
   *** setLineSpacingAdd(...);
   *** getLineSpacingMultiplier(...);
   *** setLineSpacingMultiplier(...);
   *** getMaxLines(...);
   *** setMaxLines(...);
   *** isRtlTextDirectionHeuristicsEnabled(...);
   *** setRtlTextDirectionHeuristicsEnabled(...);
   *** getScrimAnimationDuration(...);
   *** setScrimAnimationDuration(...);
   *** getScrimVisibleHeightTrigger(...);
   *** setScrimVisibleHeightTrigger(...);
   *** getStatusBarScrim(...);
   *** setStatusBarScrim(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleCollapseMode(...);
   *** setTitleCollapseMode(...);
   *** isTitleEnabled(...);
   *** setTitleEnabled(...);
   *** getTitlePositionInterpolator(...);
   *** setTitlePositionInterpolator(...);
   *** getTitleTextEllipsize(...);
   *** setCollapsedTitleTextAppearance(...);
   *** setCollapsedTitleTextColor(...);
   *** setCollapsedTitleTextColor(...);
   *** setContentScrimColor(...);
   *** setContentScrimResource(...);
   *** setExpandedTitleColor(...);
   *** setExpandedTitleMargin(...);
   *** setExpandedTitleTextAppearance(...);
   *** setExpandedTitleTextColor(...);
   *** setScrimsShown(...);
   *** setScrimsShown(...);
   *** setStaticLayoutBuilderConfigurer(...);
   *** setStatusBarScrimColor(...);
   *** setStatusBarScrimResource(...);
   *** setTitleEllipsize(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback {
   <init>(...);
   *** canDrag(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$BaseBehavior$BaseDragCallback {
   *** canDrag(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$BaseBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$BaseBehavior {
   <init>(...);
   <init>(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setDragCallback(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$Behavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$Behavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setDragCallback(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect {
   <init>(...);
   *** onOffsetChanged(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ChildScrollEffect {
   *** onOffsetChanged(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LayoutParams
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getScrollEffect(...);
   *** setScrollEffect(...);
   *** getScrollFlags(...);
   *** setScrollFlags(...);
   *** getScrollInterpolator(...);
   *** setScrollInterpolator(...);
   *** setScrollEffect(...);
}

-keep class com.google.android.material.appbar.AppBarLayout$LiftOnScrollListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$LiftOnScrollListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_LiftOnScrollListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_LiftOnScrollListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$OnOffsetChangedListener {
}

-keep class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor
-keepclassmembers class mono.com.google.android.material.appbar.AppBarLayout_OnOffsetChangedListenerImplementor {
}

-keep class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** onMeasureChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
}

-keep class com.google.android.material.appbar.AppBarLayout
-keepclassmembers class com.google.android.material.appbar.AppBarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLifted(...);
   *** isLiftOnScroll(...);
   *** setLiftOnScroll(...);
   *** getLiftOnScrollTargetViewId(...);
   *** setLiftOnScrollTargetViewId(...);
   *** getMaterialShapeBackground(...);
   *** getMinimumHeightForVisibleOverlappingContent(...);
   *** getStatusBarForeground(...);
   *** setStatusBarForeground(...);
   *** getTargetElevation(...);
   *** setTargetElevation(...);
   *** getTotalScrollRange(...);
   *** addLiftOnScrollListener(...);
   *** addOnOffsetChangedListener(...);
   *** clearLiftOnScrollListener(...);
   *** getBehavior(...);
   *** removeLiftOnScrollListener(...);
   *** removeOnOffsetChangedListener(...);
   *** setExpanded(...);
   *** setExpanded(...);
   *** setLiftOnScrollTargetView(...);
   *** setLiftable(...);
   *** setLiftableOverrideEnabled(...);
   *** setLifted(...);
   *** setStatusBarForegroundColor(...);
   *** setStatusBarForegroundResource(...);
}

-keep class com.google.android.material.appbar.HeaderBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderBehavior {
   <init>(...);
   <init>(...);
   *** onInterceptTouchEvent(...);
   *** onTouchEvent(...);
}

-keep class com.google.android.material.appbar.HeaderBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderBehavior {
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
   <init>(...);
   <init>(...);
   *** getOverlayTop(...);
   *** setOverlayTop(...);
   *** layoutChild(...);
   *** shouldHeaderOverlapScrollingChild(...);
}

-keep class com.google.android.material.appbar.HeaderScrollingViewBehavior
-keepclassmembers class com.google.android.material.appbar.HeaderScrollingViewBehavior {
}

-keep class com.google.android.material.appbar.MaterialToolbar
-keepclassmembers class com.google.android.material.appbar.MaterialToolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isLogoAdjustViewBounds(...);
   *** setLogoAdjustViewBounds(...);
   *** getLogoScaleType(...);
   *** setLogoScaleType(...);
   *** getNavigationIconTint(...);
   *** isSubtitleCentered(...);
   *** setSubtitleCentered(...);
   *** isTitleCentered(...);
   *** setTitleCentered(...);
   *** clearNavigationIconTint(...);
   *** setNavigationIconTint(...);
}

-keep class com.google.android.material.appbar.ViewOffsetBehavior
-keepclassmembers class com.google.android.material.appbar.ViewOffsetBehavior {
   <init>(...);
   <init>(...);
   *** isHorizontalOffsetEnabled(...);
   *** setHorizontalOffsetEnabled(...);
   *** getLeftAndRightOffset(...);
   *** getTopAndBottomOffset(...);
   *** isVerticalOffsetEnabled(...);
   *** setVerticalOffsetEnabled(...);
   *** layoutChild(...);
   *** onLayoutChild(...);
   *** setLeftAndRightOffset(...);
   *** setTopAndBottomOffset(...);
   *** onMeasureChild(...);
}

# ACW for Jsr305Binding
-keep class javax.annotation.CheckForNull
-keepclassmembers class javax.annotation.CheckForNull {
}

-keep class javax.annotation.CheckForSigned
-keepclassmembers class javax.annotation.CheckForSigned {
}

-keep class javax.annotation.CheckReturnValue
-keepclassmembers class javax.annotation.CheckReturnValue {
}

-keep class javax.annotation.Detainted
-keepclassmembers class javax.annotation.Detainted {
}

-keep class javax.annotation.MatchesPattern$Checker
-keepclassmembers class javax.annotation.MatchesPattern$Checker {
   <init>(...);
   *** forConstantValue(...);
}

-keep class javax.annotation.MatchesPattern
-keepclassmembers class javax.annotation.MatchesPattern {
}

-keep class javax.annotation.Nonnegative$Checker
-keepclassmembers class javax.annotation.Nonnegative$Checker {
   <init>(...);
   *** forConstantValue(...);
}

-keep class javax.annotation.Nonnegative
-keepclassmembers class javax.annotation.Nonnegative {
}

-keep class javax.annotation.Nonnull$Checker
-keepclassmembers class javax.annotation.Nonnull$Checker {
   <init>(...);
   *** forConstantValue(...);
}

-keep class javax.annotation.Nonnull
-keepclassmembers class javax.annotation.Nonnull {
}

-keep class javax.annotation.Nullable
-keepclassmembers class javax.annotation.Nullable {
}

-keep class javax.annotation.OverridingMethodsMustInvokeSuper
-keepclassmembers class javax.annotation.OverridingMethodsMustInvokeSuper {
}

-keep class javax.annotation.ParametersAreNonnullByDefault
-keepclassmembers class javax.annotation.ParametersAreNonnullByDefault {
}

-keep class javax.annotation.ParametersAreNullableByDefault
-keepclassmembers class javax.annotation.ParametersAreNullableByDefault {
}

-keep class javax.annotation.PropertyKey
-keepclassmembers class javax.annotation.PropertyKey {
}

-keep class javax.annotation.RegEx$Checker
-keepclassmembers class javax.annotation.RegEx$Checker {
   <init>(...);
   *** forConstantValue(...);
}

-keep class javax.annotation.RegEx
-keepclassmembers class javax.annotation.RegEx {
}

-keep class javax.annotation.Signed
-keepclassmembers class javax.annotation.Signed {
}

-keep class javax.annotation.Syntax
-keepclassmembers class javax.annotation.Syntax {
}

-keep class javax.annotation.Tainted
-keepclassmembers class javax.annotation.Tainted {
}

-keep class javax.annotation.Untainted
-keepclassmembers class javax.annotation.Untainted {
}

-keep class javax.annotation.WillClose
-keepclassmembers class javax.annotation.WillClose {
}

-keep class javax.annotation.WillCloseWhenClosed
-keepclassmembers class javax.annotation.WillCloseWhenClosed {
}

-keep class javax.annotation.WillNotClose
-keepclassmembers class javax.annotation.WillNotClose {
}

-keep class javax.annotation.meta.Exclusive
-keepclassmembers class javax.annotation.meta.Exclusive {
}

-keep class javax.annotation.meta.Exhaustive
-keepclassmembers class javax.annotation.meta.Exhaustive {
}

-keep class javax.annotation.meta.TypeQualifier
-keepclassmembers class javax.annotation.meta.TypeQualifier {
}

-keep class javax.annotation.meta.TypeQualifierDefault
-keepclassmembers class javax.annotation.meta.TypeQualifierDefault {
}

-keep class javax.annotation.meta.TypeQualifierNickname
-keepclassmembers class javax.annotation.meta.TypeQualifierNickname {
}

-keep class javax.annotation.meta.TypeQualifierValidator
-keepclassmembers class javax.annotation.meta.TypeQualifierValidator {
}

-keep class javax.annotation.meta.When
-keepclassmembers class javax.annotation.meta.When {
   *** valueOf(...);
   *** values(...);
}

-keep class javax.annotation.concurrent.GuardedBy
-keepclassmembers class javax.annotation.concurrent.GuardedBy {
}

-keep class javax.annotation.concurrent.Immutable
-keepclassmembers class javax.annotation.concurrent.Immutable {
}

-keep class javax.annotation.concurrent.NotThreadSafe
-keepclassmembers class javax.annotation.concurrent.NotThreadSafe {
}

-keep class javax.annotation.concurrent.ThreadSafe
-keepclassmembers class javax.annotation.concurrent.ThreadSafe {
}

# ACW for Xamarin.Google.Crypto.Tink.Android
-keep class com.google.crypto.tink.BinaryKeysetReader
-keepclassmembers class com.google.crypto.tink.BinaryKeysetReader {
   *** read(...);
   *** readEncrypted(...);
   *** withBytes(...);
   *** withFile(...);
   *** withInputStream(...);
}

-keep class com.google.crypto.tink.BinaryKeysetWriter
-keepclassmembers class com.google.crypto.tink.BinaryKeysetWriter {
   *** withFile(...);
   *** withOutputStream(...);
   *** write(...);
   *** write(...);
}

-keep class com.google.crypto.tink.CleartextKeysetHandle
-keepclassmembers class com.google.crypto.tink.CleartextKeysetHandle {
   *** fromKeyset(...);
   *** getKeyset(...);
   *** parseFrom(...);
   *** read(...);
   *** read(...);
   *** write(...);
}

-keep class com.google.crypto.tink.Config
-keepclassmembers class com.google.crypto.tink.Config {
   *** getTinkKeyTypeEntry(...);
   *** register(...);
   *** registerKeyType(...);
}

-keep class com.google.crypto.tink.Configuration
-keepclassmembers class com.google.crypto.tink.Configuration {
   <init>(...);
}

-keep class com.google.crypto.tink.Configuration
-keepclassmembers class com.google.crypto.tink.Configuration {
}

-keep class com.google.crypto.tink.ConfigurationFips140v2
-keepclassmembers class com.google.crypto.tink.ConfigurationFips140v2 {
   *** get(...);
}

-keep class com.google.crypto.tink.ConfigurationV0
-keepclassmembers class com.google.crypto.tink.ConfigurationV0 {
   *** get(...);
}

-keep class com.google.crypto.tink.CryptoFormat
-keepclassmembers class com.google.crypto.tink.CryptoFormat {
   *** getOutputPrefix(...);
}

-keep class com.google.crypto.tink.AccessesPartialKey
-keepclassmembers class com.google.crypto.tink.AccessesPartialKey {
}

-keep class com.google.crypto.tink.Aead
-keepclassmembers class com.google.crypto.tink.Aead {
}

-keep class com.google.crypto.tink.DeterministicAead
-keepclassmembers class com.google.crypto.tink.DeterministicAead {
}

-keep class com.google.crypto.tink.HybridDecrypt
-keepclassmembers class com.google.crypto.tink.HybridDecrypt {
}

-keep class com.google.crypto.tink.HybridEncrypt
-keepclassmembers class com.google.crypto.tink.HybridEncrypt {
}

-keep class com.google.crypto.tink.KeyManager
-keepclassmembers class com.google.crypto.tink.KeyManager {
}

-keep class com.google.crypto.tink.KeysetReader
-keepclassmembers class com.google.crypto.tink.KeysetReader {
}

-keep class com.google.crypto.tink.KeysetWriter
-keepclassmembers class com.google.crypto.tink.KeysetWriter {
}

-keep class com.google.crypto.tink.KeyWrap
-keepclassmembers class com.google.crypto.tink.KeyWrap {
}

-keep class com.google.crypto.tink.KmsClient
-keepclassmembers class com.google.crypto.tink.KmsClient {
}

-keep class com.google.crypto.tink.Mac
-keepclassmembers class com.google.crypto.tink.Mac {
}

-keep class com.google.crypto.tink.InsecureSecretKeyAccess
-keepclassmembers class com.google.crypto.tink.InsecureSecretKeyAccess {
   *** get(...);
}

-keep class com.google.crypto.tink.PrivateKey
-keepclassmembers class com.google.crypto.tink.PrivateKey {
}

-keep class com.google.crypto.tink.PrivateKeyManager
-keepclassmembers class com.google.crypto.tink.PrivateKeyManager {
}

-keep class com.google.crypto.tink.PublicKeySign
-keepclassmembers class com.google.crypto.tink.PublicKeySign {
}

-keep class com.google.crypto.tink.PublicKeyVerify
-keepclassmembers class com.google.crypto.tink.PublicKeyVerify {
}

-keep class com.google.crypto.tink.StreamingAead
-keepclassmembers class com.google.crypto.tink.StreamingAead {
}

-keep class com.google.crypto.tink.JsonKeysetReader
-keepclassmembers class com.google.crypto.tink.JsonKeysetReader {
   *** read(...);
   *** readEncrypted(...);
   *** withBytes(...);
   *** withFile(...);
   *** withInputStream(...);
   *** withJsonObject(...);
   *** withPath(...);
   *** withPath(...);
   *** withString(...);
   *** withUrlSafeBase64(...);
}

-keep class com.google.crypto.tink.JsonKeysetWriter
-keepclassmembers class com.google.crypto.tink.JsonKeysetWriter {
   *** withFile(...);
   *** withOutputStream(...);
   *** withPath(...);
   *** withPath(...);
   *** write(...);
   *** write(...);
}

-keep class com.google.crypto.tink.Key
-keepclassmembers class com.google.crypto.tink.Key {
   <init>(...);
   *** getIdRequirementOrNull(...);
   *** getParameters(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.Key
-keepclassmembers class com.google.crypto.tink.Key {
   *** getIdRequirementOrNull(...);
   *** getParameters(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.KeyGenConfiguration
-keepclassmembers class com.google.crypto.tink.KeyGenConfiguration {
   <init>(...);
}

-keep class com.google.crypto.tink.KeyGenConfiguration
-keepclassmembers class com.google.crypto.tink.KeyGenConfiguration {
}

-keep class com.google.crypto.tink.KeysetHandle$Builder$Entry
-keepclassmembers class com.google.crypto.tink.KeysetHandle$Builder$Entry {
   *** isPrimary(...);
   *** getStatus(...);
   *** makePrimary(...);
   *** setStatus(...);
   *** withFixedId(...);
   *** withRandomId(...);
}

-keep class com.google.crypto.tink.KeysetHandle$Builder
-keepclassmembers class com.google.crypto.tink.KeysetHandle$Builder {
   <init>(...);
   *** addEntry(...);
   *** build(...);
   *** deleteAt(...);
   *** getAt(...);
   *** removeAt(...);
   *** setMonitoringAnnotations(...);
   *** size(...);
}

-keep class com.google.crypto.tink.KeysetHandle$Entry
-keepclassmembers class com.google.crypto.tink.KeysetHandle$Entry {
   *** getId(...);
   *** isPrimary(...);
   *** getKey(...);
   *** getStatus(...);
}

-keep class com.google.crypto.tink.KeysetHandle
-keepclassmembers class com.google.crypto.tink.KeysetHandle {
   *** getKeys(...);
   *** getKeysetInfo(...);
   *** getPrimary(...);
   *** getPublicKeysetHandle(...);
   *** createFromKey(...);
   *** equalsKeyset(...);
   *** generateEntryFromParameters(...);
   *** generateEntryFromParametersName(...);
   *** generateNew(...);
   *** generateNew(...);
   *** generateNew(...);
   *** getAt(...);
   *** getPrimitive(...);
   *** getPrimitive(...);
   *** importKey(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** primaryKey(...);
   *** read(...);
   *** readNoSecret(...);
   *** readNoSecret(...);
   *** readWithAssociatedData(...);
   *** size(...);
   *** write(...);
   *** writeNoSecret(...);
   *** writeWithAssociatedData(...);
}

-keep class com.google.crypto.tink.KeysetManager
-keepclassmembers class com.google.crypto.tink.KeysetManager {
   *** getKeysetHandle(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addNewKey(...);
   *** delete(...);
   *** destroy(...);
   *** disable(...);
   *** enable(...);
   *** promote(...);
   *** rotate(...);
   *** setPrimary(...);
   *** withEmptyKeyset(...);
   *** withKeysetHandle(...);
}

-keep class com.google.crypto.tink.KeyStatus
-keepclassmembers class com.google.crypto.tink.KeyStatus {
}

-keep class com.google.crypto.tink.KeyTemplate$OutputPrefixType
-keepclassmembers class com.google.crypto.tink.KeyTemplate$OutputPrefixType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.KeyTemplate
-keepclassmembers class com.google.crypto.tink.KeyTemplate {
   *** getTypeUrl(...);
   *** create(...);
   *** createFrom(...);
   *** getOutputPrefixType(...);
   *** getValue(...);
   *** toParameters(...);
}

-keep class com.google.crypto.tink.KeyTemplates
-keepclassmembers class com.google.crypto.tink.KeyTemplates {
   *** get(...);
}

-keep class com.google.crypto.tink.KmsClients
-keepclassmembers class com.google.crypto.tink.KmsClients {
   *** add(...);
   *** get(...);
   *** getAutoLoaded(...);
}

-keep class com.google.crypto.tink.LegacyKeysetSerialization
-keepclassmembers class com.google.crypto.tink.LegacyKeysetSerialization {
   *** getKeysetInfo(...);
   *** parseEncryptedKeyset(...);
   *** parseKeyset(...);
   *** parseKeysetWithoutSecret(...);
   *** serializeEncryptedKeyset(...);
   *** serializeKeyset(...);
   *** serializeKeysetWithoutSecret(...);
}

-keep class com.google.crypto.tink.NoSecretKeysetHandle
-keepclassmembers class com.google.crypto.tink.NoSecretKeysetHandle {
   *** parseFrom(...);
   *** read(...);
}

-keep class com.google.crypto.tink.Parameters
-keepclassmembers class com.google.crypto.tink.Parameters {
   <init>(...);
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.Parameters
-keepclassmembers class com.google.crypto.tink.Parameters {
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.PemKeyType
-keepclassmembers class com.google.crypto.tink.PemKeyType {
   *** readKey(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.Registry
-keepclassmembers class com.google.crypto.tink.Registry {
   *** getInputPrimitive(...);
   *** getKeyManager(...);
   *** getPrimitive(...);
   *** getPrimitive(...);
   *** getPrimitive(...);
   *** getPrimitive(...);
   *** getPublicKeyData(...);
   *** getUntypedKeyManager(...);
   *** keyTemplates(...);
   *** newKey(...);
   *** newKey(...);
   *** newKeyData(...);
   *** newKeyData(...);
   *** registerKeyManager(...);
   *** registerKeyManager(...);
   *** registerKeyManager(...);
   *** registerKeyManager(...);
   *** restrictToFipsIfEmpty(...);
}

-keep class com.google.crypto.tink.RegistryConfiguration
-keepclassmembers class com.google.crypto.tink.RegistryConfiguration {
   *** get(...);
}

-keep class com.google.crypto.tink.SecretKeyAccess
-keepclassmembers class com.google.crypto.tink.SecretKeyAccess {
   *** requireAccess(...);
}

-keep class com.google.crypto.tink.TinkJsonProtoKeysetFormat
-keepclassmembers class com.google.crypto.tink.TinkJsonProtoKeysetFormat {
   *** parseEncryptedKeyset(...);
   *** parseKeyset(...);
   *** parseKeysetWithoutSecret(...);
   *** serializeEncryptedKeyset(...);
   *** serializeKeyset(...);
   *** serializeKeysetWithoutSecret(...);
}

-keep class com.google.crypto.tink.TinkProtoKeysetFormat
-keepclassmembers class com.google.crypto.tink.TinkProtoKeysetFormat {
   *** parseEncryptedKeyset(...);
   *** parseKeyset(...);
   *** parseKeysetWithoutSecret(...);
   *** serializeEncryptedKeyset(...);
   *** serializeKeyset(...);
   *** serializeKeysetWithoutSecret(...);
}

-keep class com.google.crypto.tink.TinkProtoParametersFormat
-keepclassmembers class com.google.crypto.tink.TinkProtoParametersFormat {
   *** parse(...);
   *** serialize(...);
}

-keep class com.google.crypto.tink.Version
-keepclassmembers class com.google.crypto.tink.Version {
   <init>(...);
}

-keep class com.google.crypto.tink.util.Bytes
-keepclassmembers class com.google.crypto.tink.util.Bytes {
   *** copyFrom(...);
   *** copyFrom(...);
   *** size(...);
   *** toByteArray(...);
}

-keep class com.google.crypto.tink.util.SecretBigInteger
-keepclassmembers class com.google.crypto.tink.util.SecretBigInteger {
   *** equalsSecretBigInteger(...);
   *** fromBigInteger(...);
   *** getBigInteger(...);
}

-keep class com.google.crypto.tink.util.SecretBytes
-keepclassmembers class com.google.crypto.tink.util.SecretBytes {
   *** copyFrom(...);
   *** equalsSecretBytes(...);
   *** randomBytes(...);
   *** size(...);
   *** toByteArray(...);
}

-keep class com.google.crypto.tink.tinkkey.TinkKey
-keepclassmembers class com.google.crypto.tink.tinkkey.TinkKey {
}

-keep class com.google.crypto.tink.tinkkey.KeyAccess
-keepclassmembers class com.google.crypto.tink.tinkkey.KeyAccess {
   *** canAccessSecret(...);
   *** publicAccess(...);
}

-keep class com.google.crypto.tink.tinkkey.KeyHandle$KeyStatusType
-keepclassmembers class com.google.crypto.tink.tinkkey.KeyHandle$KeyStatusType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.tinkkey.KeyHandle
-keepclassmembers class com.google.crypto.tink.tinkkey.KeyHandle {
   <init>(...);
   *** hasSecret(...);
   *** getId(...);
   *** getKeyTemplate(...);
   *** getStatus(...);
   *** createFromKey(...);
   *** createFromKey(...);
   *** generateNew(...);
   *** getKey(...);
}

-keep class com.google.crypto.tink.tinkkey.SecretKeyAccess
-keepclassmembers class com.google.crypto.tink.tinkkey.SecretKeyAccess {
   *** insecureSecretAccess(...);
}

-keep class com.google.crypto.tink.tinkkey.internal.InternalKeyHandle
-keepclassmembers class com.google.crypto.tink.tinkkey.internal.InternalKeyHandle {
   <init>(...);
}

-keep class com.google.crypto.tink.tinkkey.internal.ProtoKey
-keepclassmembers class com.google.crypto.tink.tinkkey.internal.ProtoKey {
   <init>(...);
   *** hasSecret(...);
   *** getKeyTemplate(...);
   *** getOutputPrefixType(...);
   *** getProtoKey(...);
}

-keep class com.google.crypto.tink.subtle.AesCtrHmacStreaming
-keepclassmembers class com.google.crypto.tink.subtle.AesCtrHmacStreaming {
   <init>(...);
   *** getCiphertextOffset(...);
   *** getCiphertextOverhead(...);
   *** getCiphertextSegmentSize(...);
   *** getFirstSegmentOffset(...);
   *** getHeaderLength(...);
   *** getPlaintextSegmentSize(...);
   *** create(...);
   *** expectedCiphertextSize(...);
   *** newDecryptingChannel(...);
   *** newDecryptingStream(...);
   *** newEncryptingChannel(...);
   *** newEncryptingStream(...);
   *** newSeekableDecryptingChannel(...);
   *** newStreamSegmentDecrypter(...);
   *** newStreamSegmentEncrypter(...);
}

-keep class com.google.crypto.tink.subtle.AesCtrJceCipher
-keepclassmembers class com.google.crypto.tink.subtle.AesCtrJceCipher {
   <init>(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.subtle.AesEaxJce
-keepclassmembers class com.google.crypto.tink.subtle.AesEaxJce {
   <init>(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.subtle.AesGcmHkdfStreaming
-keepclassmembers class com.google.crypto.tink.subtle.AesGcmHkdfStreaming {
   <init>(...);
   *** getCiphertextOffset(...);
   *** getCiphertextOverhead(...);
   *** getCiphertextSegmentSize(...);
   *** getFirstSegmentOffset(...);
   *** getHeaderLength(...);
   *** getPlaintextSegmentSize(...);
   *** create(...);
   *** expectedCiphertextSize(...);
   *** newDecryptingChannel(...);
   *** newDecryptingStream(...);
   *** newEncryptingChannel(...);
   *** newEncryptingStream(...);
   *** newSeekableDecryptingChannel(...);
   *** newStreamSegmentDecrypter(...);
   *** newStreamSegmentEncrypter(...);
}

-keep class com.google.crypto.tink.subtle.AesGcmJce
-keepclassmembers class com.google.crypto.tink.subtle.AesGcmJce {
   <init>(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.subtle.AesSiv
-keepclassmembers class com.google.crypto.tink.subtle.AesSiv {
   <init>(...);
   *** create(...);
   *** decryptDeterministically(...);
   *** encryptDeterministically(...);
}

-keep class com.google.crypto.tink.subtle.Base64
-keepclassmembers class com.google.crypto.tink.subtle.Base64 {
   *** decode(...);
   *** decode(...);
   *** decode(...);
   *** decode(...);
   *** encode(...);
   *** encode(...);
   *** encode(...);
   *** encodeToString(...);
   *** encodeToString(...);
   *** urlSafeDecode(...);
   *** urlSafeEncode(...);
}

-keep class com.google.crypto.tink.subtle.Bytes
-keepclassmembers class com.google.crypto.tink.subtle.Bytes {
   *** byteArrayToInt(...);
   *** byteArrayToInt(...);
   *** byteArrayToInt(...);
   *** concat(...);
   *** equal(...);
   *** intToByteArray(...);
   *** xor(...);
   *** xor(...);
   *** xor(...);
   *** xorEnd(...);
}

-keep class com.google.crypto.tink.subtle.ChaCha20Poly1305
-keepclassmembers class com.google.crypto.tink.subtle.ChaCha20Poly1305 {
   <init>(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.subtle.EcdsaSignJce
-keepclassmembers class com.google.crypto.tink.subtle.EcdsaSignJce {
   <init>(...);
   *** create(...);
   *** sign(...);
}

-keep class com.google.crypto.tink.subtle.EcdsaVerifyJce
-keepclassmembers class com.google.crypto.tink.subtle.EcdsaVerifyJce {
   <init>(...);
   *** create(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.subtle.EciesAeadHkdfHybridDecrypt
-keepclassmembers class com.google.crypto.tink.subtle.EciesAeadHkdfHybridDecrypt {
   *** create(...);
   *** decrypt(...);
}

-keep class com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt
-keepclassmembers class com.google.crypto.tink.subtle.EciesAeadHkdfHybridEncrypt {
   *** create(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.subtle.EciesHkdfRecipientKem
-keepclassmembers class com.google.crypto.tink.subtle.EciesHkdfRecipientKem {
   <init>(...);
   *** generateKey(...);
}

-keep class com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey
-keepclassmembers class com.google.crypto.tink.subtle.EciesHkdfSenderKem$KemKey {
   <init>(...);
   *** getKemBytes(...);
   *** getSymmetricKey(...);
}

-keep class com.google.crypto.tink.subtle.EciesHkdfSenderKem
-keepclassmembers class com.google.crypto.tink.subtle.EciesHkdfSenderKem {
   <init>(...);
   *** generateKey(...);
}

-keep class com.google.crypto.tink.subtle.Ed25519Sign$KeyPair
-keepclassmembers class com.google.crypto.tink.subtle.Ed25519Sign$KeyPair {
   *** getPrivateKey(...);
   *** getPublicKey(...);
   *** newKeyPair(...);
   *** newKeyPairFromSeed(...);
}

-keep class com.google.crypto.tink.subtle.Ed25519Sign
-keepclassmembers class com.google.crypto.tink.subtle.Ed25519Sign {
   <init>(...);
   *** create(...);
   *** sign(...);
}

-keep class com.google.crypto.tink.subtle.Ed25519Verify
-keepclassmembers class com.google.crypto.tink.subtle.Ed25519Verify {
   <init>(...);
   *** create(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.subtle.EllipticCurves$CurveType
-keepclassmembers class com.google.crypto.tink.subtle.EllipticCurves$CurveType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding
-keepclassmembers class com.google.crypto.tink.subtle.EllipticCurves$EcdsaEncoding {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.subtle.EllipticCurves$PointFormatType
-keepclassmembers class com.google.crypto.tink.subtle.EllipticCurves$PointFormatType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.subtle.EllipticCurves
-keepclassmembers class com.google.crypto.tink.subtle.EllipticCurves {
   *** getNistP256Params(...);
   *** getNistP384Params(...);
   *** getNistP521Params(...);
   *** computeSharedSecret(...);
   *** computeSharedSecret(...);
   *** ecPointDecode(...);
   *** ecdsaDer2Ieee(...);
   *** ecdsaIeee2Der(...);
   *** encodingSizeInBytes(...);
   *** fieldSizeInBits(...);
   *** fieldSizeInBytes(...);
   *** generateKeyPair(...);
   *** generateKeyPair(...);
   *** getCurveSpec(...);
   *** getEcPrivateKey(...);
   *** getEcPrivateKey(...);
   *** getEcPublicKey(...);
   *** getEcPublicKey(...);
   *** getEcPublicKey(...);
   *** getEcPublicKey(...);
   *** getModulus(...);
   *** getY(...);
   *** isNistEcParameterSpec(...);
   *** isSameEcParameterSpec(...);
   *** isValidDerEncoding(...);
   *** modSqrt(...);
   *** pointDecode(...);
   *** pointDecode(...);
   *** pointEncode(...);
   *** pointEncode(...);
   *** validatePublicKey(...);
}

-keep class com.google.crypto.tink.subtle.EncryptThenAuthenticate
-keepclassmembers class com.google.crypto.tink.subtle.EncryptThenAuthenticate {
   <init>(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
   *** newAesCtrHmac(...);
}

-keep class com.google.crypto.tink.subtle.EngineFactory
-keepclassmembers class com.google.crypto.tink.subtle.EngineFactory {
   <init>(...);
   *** getInstance(...);
   *** toProviderList(...);
}

-keep class com.google.crypto.tink.subtle.Enums$HashType
-keepclassmembers class com.google.crypto.tink.subtle.Enums$HashType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.subtle.Enums
-keepclassmembers class com.google.crypto.tink.subtle.Enums {
}

-keep class com.google.crypto.tink.subtle.Hex
-keepclassmembers class com.google.crypto.tink.subtle.Hex {
   *** decode(...);
   *** encode(...);
}

-keep class com.google.crypto.tink.subtle.Hkdf
-keepclassmembers class com.google.crypto.tink.subtle.Hkdf {
   *** computeEciesHkdfSymmetricKey(...);
   *** computeHkdf(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper$TCipher
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper$TCipher {
   <init>(...);
   *** getInstance(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement {
   <init>(...);
   *** getInstance(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory {
   <init>(...);
   *** getInstance(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator {
   <init>(...);
   *** getInstance(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper$TMac
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper$TMac {
   <init>(...);
   *** getInstance(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest {
   <init>(...);
   *** getInstance(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper$TSignature
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper$TSignature {
   <init>(...);
   *** getInstance(...);
}

-keep class com.google.crypto.tink.subtle.EngineWrapper
-keepclassmembers class com.google.crypto.tink.subtle.EngineWrapper {
}

-keep class com.google.crypto.tink.subtle.IndCpaCipher
-keepclassmembers class com.google.crypto.tink.subtle.IndCpaCipher {
}

-keep class com.google.crypto.tink.subtle.StreamSegmentDecrypter
-keepclassmembers class com.google.crypto.tink.subtle.StreamSegmentDecrypter {
}

-keep class com.google.crypto.tink.subtle.StreamSegmentEncrypter
-keepclassmembers class com.google.crypto.tink.subtle.StreamSegmentEncrypter {
}

-keep class com.google.crypto.tink.subtle.Kwp
-keepclassmembers class com.google.crypto.tink.subtle.Kwp {
   <init>(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class com.google.crypto.tink.subtle.PemKeyType
-keepclassmembers class com.google.crypto.tink.subtle.PemKeyType {
   *** readKey(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.subtle.PrfAesCmac
-keepclassmembers class com.google.crypto.tink.subtle.PrfAesCmac {
   <init>(...);
   *** compute(...);
   *** create(...);
}

-keep class com.google.crypto.tink.subtle.PrfHmacJce
-keepclassmembers class com.google.crypto.tink.subtle.PrfHmacJce {
   <init>(...);
   *** getMaxOutputLength(...);
   *** compute(...);
   *** create(...);
}

-keep class com.google.crypto.tink.subtle.PrfMac
-keepclassmembers class com.google.crypto.tink.subtle.PrfMac {
   <init>(...);
   *** computeMac(...);
   *** create(...);
   *** create(...);
   *** verifyMac(...);
}

-keep class com.google.crypto.tink.subtle.Random
-keepclassmembers class com.google.crypto.tink.subtle.Random {
   *** randBytes(...);
   *** randInt(...);
   *** randInt(...);
}

-keep class com.google.crypto.tink.subtle.RewindableReadableByteChannel
-keepclassmembers class com.google.crypto.tink.subtle.RewindableReadableByteChannel {
   <init>(...);
   *** isOpen(...);
   *** close(...);
   *** disableRewinding(...);
   *** read(...);
   *** rewind(...);
}

-keep class com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce
-keepclassmembers class com.google.crypto.tink.subtle.RsaSsaPkcs1SignJce {
   <init>(...);
   *** create(...);
   *** sign(...);
}

-keep class com.google.crypto.tink.subtle.RsaSsaPkcs1VerifyJce
-keepclassmembers class com.google.crypto.tink.subtle.RsaSsaPkcs1VerifyJce {
   <init>(...);
   *** create(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.subtle.RsaSsaPssSignJce
-keepclassmembers class com.google.crypto.tink.subtle.RsaSsaPssSignJce {
   <init>(...);
   *** create(...);
   *** sign(...);
}

-keep class com.google.crypto.tink.subtle.RsaSsaPssVerifyJce
-keepclassmembers class com.google.crypto.tink.subtle.RsaSsaPssVerifyJce {
   <init>(...);
   *** create(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.subtle.SelfKeyTestValidators
-keepclassmembers class com.google.crypto.tink.subtle.SelfKeyTestValidators {
   *** validateEcdsa(...);
   *** validateRsaSsaPkcs1(...);
   *** validateRsaSsaPss(...);
}

-keep class com.google.crypto.tink.subtle.SubtleUtil
-keepclassmembers class com.google.crypto.tink.subtle.SubtleUtil {
   *** isAndroid(...);
   *** androidApiLevel(...);
   *** bytes2Integer(...);
   *** integer2Bytes(...);
   *** mgf1(...);
   *** putAsUnsigedInt(...);
   *** toDigestAlgo(...);
   *** toEcdsaAlgo(...);
   *** toRsaSsaPkcs1Algo(...);
}

-keep class com.google.crypto.tink.subtle.Validators
-keepclassmembers class com.google.crypto.tink.subtle.Validators {
   *** validateAesKeySize(...);
   *** validateCryptoKeyUri(...);
   *** validateExists(...);
   *** validateKmsKeyUriAndRemovePrefix(...);
   *** validateNotExists(...);
   *** validateRsaModulusSize(...);
   *** validateRsaPublicExponent(...);
   *** validateSignatureHash(...);
   *** validateTypeUrl(...);
   *** validateVersion(...);
}

-keep class com.google.crypto.tink.subtle.X25519
-keepclassmembers class com.google.crypto.tink.subtle.X25519 {
   *** computeSharedSecret(...);
   *** generatePrivateKey(...);
   *** publicFromPrivate(...);
}

-keep class com.google.crypto.tink.subtle.XChaCha20Poly1305
-keepclassmembers class com.google.crypto.tink.subtle.XChaCha20Poly1305 {
   <init>(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.subtle.prf.HkdfStreamingPrf
-keepclassmembers class com.google.crypto.tink.subtle.prf.HkdfStreamingPrf {
   <init>(...);
   *** computePrf(...);
   *** create(...);
}

-keep class com.google.crypto.tink.subtle.prf.StreamingPrf
-keepclassmembers class com.google.crypto.tink.subtle.prf.StreamingPrf {
}

-keep class com.google.crypto.tink.subtle.prf.PrfImpl
-keepclassmembers class com.google.crypto.tink.subtle.prf.PrfImpl {
   *** compute(...);
   *** wrap(...);
}

-keep class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKey
-keepclassmembers class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKey {
   *** getInitialKeyMaterial(...);
   *** getParameters(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager
-keepclassmembers class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingKeyManager {
   *** aes128CtrHmacSha2561MBTemplate(...);
   *** aes128CtrHmacSha2564KBTemplate(...);
   *** aes256CtrHmacSha2561MBTemplate(...);
   *** aes256CtrHmacSha2564KBTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingParameters$Builder
-keepclassmembers class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingParameters$Builder {
   <init>(...);
   *** build(...);
   *** setCiphertextSegmentSizeBytes(...);
   *** setDerivedKeySizeBytes(...);
   *** setHkdfHashType(...);
   *** setHmacHashType(...);
   *** setHmacTagSizeBytes(...);
   *** setKeySizeBytes(...);
}

-keep class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingParameters$HashType
-keepclassmembers class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingParameters$HashType {
}

-keep class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingParameters
-keepclassmembers class com.google.crypto.tink.streamingaead.AesCtrHmacStreamingParameters {
   *** getCiphertextSegmentSizeBytes(...);
   *** getDerivedKeySizeBytes(...);
   *** getHkdfHashType(...);
   *** getHmacHashType(...);
   *** getHmacTagSizeBytes(...);
   *** getKeySizeBytes(...);
   *** builder(...);
}

-keep class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingKey
-keepclassmembers class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingKey {
   *** getInitialKeyMaterial(...);
   *** getParameters(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingKeyManager
-keepclassmembers class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingKeyManager {
   *** aes128GcmHkdf1MBTemplate(...);
   *** aes128GcmHkdf4KBTemplate(...);
   *** aes256GcmHkdf1MBTemplate(...);
   *** aes256GcmHkdf4KBTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingParameters$Builder
-keepclassmembers class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingParameters$Builder {
   <init>(...);
   *** build(...);
   *** setCiphertextSegmentSizeBytes(...);
   *** setDerivedAesGcmKeySizeBytes(...);
   *** setHkdfHashType(...);
   *** setKeySizeBytes(...);
}

-keep class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingParameters$HashType
-keepclassmembers class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingParameters$HashType {
}

-keep class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingParameters
-keepclassmembers class com.google.crypto.tink.streamingaead.AesGcmHkdfStreamingParameters {
   *** getCiphertextSegmentSizeBytes(...);
   *** getDerivedAesGcmKeySizeBytes(...);
   *** getHkdfHashType(...);
   *** getKeySizeBytes(...);
   *** builder(...);
}

-keep class com.google.crypto.tink.streamingaead.PredefinedStreamingAeadParameters
-keepclassmembers class com.google.crypto.tink.streamingaead.PredefinedStreamingAeadParameters {
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadConfig
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadConfig {
   *** init(...);
   *** register(...);
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadFactory
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadKey
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadKey {
   <init>(...);
   *** getIdRequirementOrNull(...);
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadKey
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadKey {
   *** getParameters(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadKeyTemplates
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadKeyTemplates {
   *** createAesCtrHmacStreamingKeyTemplate(...);
   *** createAesGcmHkdfStreamingKeyTemplate(...);
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadParameters
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadParameters {
   <init>(...);
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadParameters
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadParameters {
}

-keep class com.google.crypto.tink.streamingaead.StreamingAeadWrapper
-keepclassmembers class com.google.crypto.tink.streamingaead.StreamingAeadWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.streamingaead.internal.AesCtrHmacStreamingProtoSerialization
-keepclassmembers class com.google.crypto.tink.streamingaead.internal.AesCtrHmacStreamingProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.streamingaead.internal.AesGcmHkdfStreamingProtoSerialization
-keepclassmembers class com.google.crypto.tink.streamingaead.internal.AesGcmHkdfStreamingProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.streamingaead.internal.LegacyFullStreamingAead
-keepclassmembers class com.google.crypto.tink.streamingaead.internal.LegacyFullStreamingAead {
   *** create(...);
   *** newDecryptingChannel(...);
   *** newDecryptingStream(...);
   *** newEncryptingChannel(...);
   *** newEncryptingStream(...);
   *** newSeekableDecryptingChannel(...);
}

-keep class com.google.crypto.tink.signature.EcdsaParameters$Builder
-keepclassmembers class com.google.crypto.tink.signature.EcdsaParameters$Builder {
   *** build(...);
   *** setCurveType(...);
   *** setHashType(...);
   *** setSignatureEncoding(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.signature.EcdsaParameters$CurveType
-keepclassmembers class com.google.crypto.tink.signature.EcdsaParameters$CurveType {
   *** fromParameterSpec(...);
   *** toParameterSpec(...);
}

-keep class com.google.crypto.tink.signature.EcdsaParameters$HashType
-keepclassmembers class com.google.crypto.tink.signature.EcdsaParameters$HashType {
}

-keep class com.google.crypto.tink.signature.EcdsaParameters$SignatureEncoding
-keepclassmembers class com.google.crypto.tink.signature.EcdsaParameters$SignatureEncoding {
}

-keep class com.google.crypto.tink.signature.EcdsaParameters$Variant
-keepclassmembers class com.google.crypto.tink.signature.EcdsaParameters$Variant {
}

-keep class com.google.crypto.tink.signature.EcdsaParameters
-keepclassmembers class com.google.crypto.tink.signature.EcdsaParameters {
   *** hasIdRequirement(...);
   *** builder(...);
   *** getCurveType(...);
   *** getHashType(...);
   *** getSignatureEncoding(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.signature.EcdsaPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.signature.EcdsaPrivateKey$Builder {
   *** build(...);
   *** setPrivateValue(...);
   *** setPublicKey(...);
}

-keep class com.google.crypto.tink.signature.EcdsaPrivateKey
-keepclassmembers class com.google.crypto.tink.signature.EcdsaPrivateKey {
   *** getPrivateValue(...);
   *** getPublicKey(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.EcdsaPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.signature.EcdsaPublicKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setParameters(...);
   *** setPublicPoint(...);
}

-keep class com.google.crypto.tink.signature.EcdsaPublicKey
-keepclassmembers class com.google.crypto.tink.signature.EcdsaPublicKey {
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getPublicPoint(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.EcdsaSignKeyManager
-keepclassmembers class com.google.crypto.tink.signature.EcdsaSignKeyManager {
   *** ecdsaP256Template(...);
   *** rawEcdsaP256Template(...);
   *** registerPair(...);
}

-keep class com.google.crypto.tink.signature.Ed25519Parameters$Variant
-keepclassmembers class com.google.crypto.tink.signature.Ed25519Parameters$Variant {
}

-keep class com.google.crypto.tink.signature.Ed25519Parameters
-keepclassmembers class com.google.crypto.tink.signature.Ed25519Parameters {
   *** hasIdRequirement(...);
   *** create(...);
   *** create(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.signature.Ed25519PrivateKey
-keepclassmembers class com.google.crypto.tink.signature.Ed25519PrivateKey {
   *** getParameters(...);
   *** getPrivateKeyBytes(...);
   *** getPublicKey(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.Ed25519PrivateKeyManager
-keepclassmembers class com.google.crypto.tink.signature.Ed25519PrivateKeyManager {
   *** ed25519Template(...);
   *** rawEd25519Template(...);
   *** registerPair(...);
}

-keep class com.google.crypto.tink.signature.Ed25519PublicKey
-keepclassmembers class com.google.crypto.tink.signature.Ed25519PublicKey {
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getPublicKeyBytes(...);
   *** create(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.PredefinedSignatureParameters
-keepclassmembers class com.google.crypto.tink.signature.PredefinedSignatureParameters {
}

-keep class com.google.crypto.tink.signature.PublicKeySignConfig
-keepclassmembers class com.google.crypto.tink.signature.PublicKeySignConfig {
   *** registerStandardKeyTypes(...);
}

-keep class com.google.crypto.tink.signature.PublicKeySignFactory
-keepclassmembers class com.google.crypto.tink.signature.PublicKeySignFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.signature.PublicKeySignWrapper
-keepclassmembers class com.google.crypto.tink.signature.PublicKeySignWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.signature.PublicKeyVerifyConfig
-keepclassmembers class com.google.crypto.tink.signature.PublicKeyVerifyConfig {
   *** registerStandardKeyTypes(...);
}

-keep class com.google.crypto.tink.signature.PublicKeyVerifyFactory
-keepclassmembers class com.google.crypto.tink.signature.PublicKeyVerifyFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.signature.PublicKeyVerifyWrapper
-keepclassmembers class com.google.crypto.tink.signature.PublicKeyVerifyWrapper {
   <init>(...);
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters$Builder
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters$Builder {
   *** build(...);
   *** setHashType(...);
   *** setModulusSizeBits(...);
   *** setPublicExponent(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters$HashType
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters$HashType {
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters$Variant
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters$Variant {
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1Parameters {
   *** hasIdRequirement(...);
   *** getModulusSizeBits(...);
   *** getPublicExponent(...);
   *** builder(...);
   *** getHashType(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1PrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1PrivateKey$Builder {
   *** build(...);
   *** setCrtCoefficient(...);
   *** setPrimeExponents(...);
   *** setPrimes(...);
   *** setPrivateExponent(...);
   *** setPublicKey(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1PrivateKey
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1PrivateKey {
   *** getCrtCoefficient(...);
   *** getParameters(...);
   *** getPrimeExponentP(...);
   *** getPrimeExponentQ(...);
   *** getPrimeP(...);
   *** getPrimeQ(...);
   *** getPrivateExponent(...);
   *** getPublicKey(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1PublicKey$Builder
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1PublicKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setModulus(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1PublicKey
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1PublicKey {
   *** getIdRequirementOrNull(...);
   *** getModulus(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager {
   *** rawRsa3072SsaPkcs1Sha256F4Template(...);
   *** rawRsa4096SsaPkcs1Sha512F4Template(...);
   *** registerPair(...);
   *** rsa3072SsaPkcs1Sha256F4Template(...);
   *** rsa4096SsaPkcs1Sha512F4Template(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPssParameters$Builder
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssParameters$Builder {
   *** build(...);
   *** setMgf1HashType(...);
   *** setModulusSizeBits(...);
   *** setPublicExponent(...);
   *** setSaltLengthBytes(...);
   *** setSigHashType(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPssParameters$HashType
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssParameters$HashType {
}

-keep class com.google.crypto.tink.signature.RsaSsaPssParameters$Variant
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssParameters$Variant {
}

-keep class com.google.crypto.tink.signature.RsaSsaPssParameters
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssParameters {
   *** hasIdRequirement(...);
   *** getMgf1HashType(...);
   *** getModulusSizeBits(...);
   *** getPublicExponent(...);
   *** getSaltLengthBytes(...);
   *** getSigHashType(...);
   *** builder(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPssPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssPrivateKey$Builder {
   *** build(...);
   *** setCrtCoefficient(...);
   *** setPrimeExponents(...);
   *** setPrimes(...);
   *** setPrivateExponent(...);
   *** setPublicKey(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPssPrivateKey
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssPrivateKey {
   *** getCrtCoefficient(...);
   *** getPrimeExponentP(...);
   *** getPrimeExponentQ(...);
   *** getPrimeP(...);
   *** getPrimeQ(...);
   *** getPrivateExponent(...);
   *** getPublicKey(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPssPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssPublicKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setModulus(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPssPublicKey
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssPublicKey {
   *** getIdRequirementOrNull(...);
   *** getModulus(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.RsaSsaPssSignKeyManager
-keepclassmembers class com.google.crypto.tink.signature.RsaSsaPssSignKeyManager {
   *** rawRsa3072PssSha256F4Template(...);
   *** rawRsa4096PssSha512F4Template(...);
   *** registerPair(...);
   *** rsa3072PssSha256F4Template(...);
   *** rsa4096PssSha512F4Template(...);
}

-keep class com.google.crypto.tink.signature.SignatureConfig
-keepclassmembers class com.google.crypto.tink.signature.SignatureConfig {
   *** init(...);
   *** register(...);
}

-keep class com.google.crypto.tink.signature.SignatureKeyTemplates
-keepclassmembers class com.google.crypto.tink.signature.SignatureKeyTemplates {
   *** createEcdsaKeyTemplate(...);
   *** createRsaSsaPkcs1KeyTemplate(...);
   *** createRsaSsaPssKeyTemplate(...);
}

-keep class com.google.crypto.tink.signature.SignatureParameters
-keepclassmembers class com.google.crypto.tink.signature.SignatureParameters {
   <init>(...);
}

-keep class com.google.crypto.tink.signature.SignatureParameters
-keepclassmembers class com.google.crypto.tink.signature.SignatureParameters {
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder
-keepclassmembers class com.google.crypto.tink.signature.SignaturePemKeysetReader$Builder {
   *** addPem(...);
   *** build(...);
}

-keep class com.google.crypto.tink.signature.SignaturePemKeysetReader
-keepclassmembers class com.google.crypto.tink.signature.SignaturePemKeysetReader {
   *** newBuilder(...);
   *** read(...);
   *** readEncrypted(...);
}

-keep class com.google.crypto.tink.signature.SignaturePrivateKey
-keepclassmembers class com.google.crypto.tink.signature.SignaturePrivateKey {
   <init>(...);
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getPublicKey(...);
}

-keep class com.google.crypto.tink.signature.SignaturePrivateKey
-keepclassmembers class com.google.crypto.tink.signature.SignaturePrivateKey {
   *** getPublicKey(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.SignaturePublicKey
-keepclassmembers class com.google.crypto.tink.signature.SignaturePublicKey {
   <init>(...);
   *** getOutputPrefix(...);
}

-keep class com.google.crypto.tink.signature.SignaturePublicKey
-keepclassmembers class com.google.crypto.tink.signature.SignaturePublicKey {
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.signature.internal.EcdsaProtoSerialization
-keepclassmembers class com.google.crypto.tink.signature.internal.EcdsaProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.signature.internal.Ed25519ProtoSerialization
-keepclassmembers class com.google.crypto.tink.signature.internal.Ed25519ProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.signature.internal.LegacyFullSign
-keepclassmembers class com.google.crypto.tink.signature.internal.LegacyFullSign {
   *** create(...);
   *** sign(...);
}

-keep class com.google.crypto.tink.signature.internal.LegacyFullVerify
-keepclassmembers class com.google.crypto.tink.signature.internal.LegacyFullVerify {
   *** create(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.signature.internal.RsaSsaPkcs1ProtoSerialization
-keepclassmembers class com.google.crypto.tink.signature.internal.RsaSsaPkcs1ProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.signature.internal.RsaSsaPkcs1VerifyConscrypt
-keepclassmembers class com.google.crypto.tink.signature.internal.RsaSsaPkcs1VerifyConscrypt {
   *** isSupported(...);
   *** create(...);
   *** toRsaSsaPkcs1Algo(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.signature.internal.RsaSsaPssProtoSerialization
-keepclassmembers class com.google.crypto.tink.signature.internal.RsaSsaPssProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.signature.internal.RsaSsaPssSignConscrypt
-keepclassmembers class com.google.crypto.tink.signature.internal.RsaSsaPssSignConscrypt {
   *** isSupported(...);
   *** create(...);
   *** sign(...);
}

-keep class com.google.crypto.tink.signature.internal.RsaSsaPssVerifyConscrypt
-keepclassmembers class com.google.crypto.tink.signature.internal.RsaSsaPssVerifyConscrypt {
   *** isSupported(...);
   *** create(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.signature.internal.SigUtil
-keepclassmembers class com.google.crypto.tink.signature.internal.SigUtil {
   *** toCurveType(...);
   *** toEcdsaEncoding(...);
   *** toHashType(...);
   *** toUnsignedIntByteString(...);
}

-keep class com.google.crypto.tink.proto.AesCmac
-keepclassmembers class com.google.crypto.tink.proto.AesCmac {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesCmacKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesCmacKey
-keepclassmembers class com.google.crypto.tink.proto.AesCmacKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCmacKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
}

-keep class com.google.crypto.tink.proto.AesCmacKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesCmacKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCmacParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacParams$Builder {
   *** getTagSize(...);
   *** clearTagSize(...);
   *** setTagSize(...);
}

-keep class com.google.crypto.tink.proto.AesCmacParams
-keepclassmembers class com.google.crypto.tink.proto.AesCmacParams {
   *** getDefaultInstance(...);
   *** getTagSize(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCmacPrf
-keepclassmembers class com.google.crypto.tink.proto.AesCmacPrf {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesCmacPrfKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacPrfKey$Builder {
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesCmacPrfKey
-keepclassmembers class com.google.crypto.tink.proto.AesCmacPrfKey {
   *** getDefaultInstance(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCmacPrfKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacPrfKeyFormat$Builder {
   *** getKeySize(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearVersion(...);
   *** setKeySize(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesCmacPrfKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesCmacPrfKeyFormat {
   *** getDefaultInstance(...);
   *** getKeySize(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtr
-keepclassmembers class com.google.crypto.tink.proto.AesCtr {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacAead
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacAead {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacAeadKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacAeadKey$Builder {
   *** getAesCtrKey(...);
   *** hasAesCtrKey(...);
   *** hasHmacKey(...);
   *** getHmacKey(...);
   *** getVersion(...);
   *** clearAesCtrKey(...);
   *** clearHmacKey(...);
   *** clearVersion(...);
   *** mergeAesCtrKey(...);
   *** mergeHmacKey(...);
   *** setAesCtrKey(...);
   *** setAesCtrKey(...);
   *** setHmacKey(...);
   *** setHmacKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacAeadKey
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacAeadKey {
   *** getAesCtrKey(...);
   *** getDefaultInstance(...);
   *** hasAesCtrKey(...);
   *** hasHmacKey(...);
   *** getHmacKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat$Builder {
   *** getAesCtrKeyFormat(...);
   *** hasAesCtrKeyFormat(...);
   *** hasHmacKeyFormat(...);
   *** getHmacKeyFormat(...);
   *** clearAesCtrKeyFormat(...);
   *** clearHmacKeyFormat(...);
   *** mergeAesCtrKeyFormat(...);
   *** mergeHmacKeyFormat(...);
   *** setAesCtrKeyFormat(...);
   *** setAesCtrKeyFormat(...);
   *** setHmacKeyFormat(...);
   *** setHmacKeyFormat(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormat {
   *** getAesCtrKeyFormat(...);
   *** getDefaultInstance(...);
   *** hasAesCtrKeyFormat(...);
   *** hasHmacKeyFormat(...);
   *** getHmacKeyFormat(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreaming
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreaming {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingKey
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingParams$Builder {
   *** getCiphertextSegmentSize(...);
   *** getDerivedKeySize(...);
   *** hasHmacParams(...);
   *** getHkdfHashType(...);
   *** getHkdfHashTypeValue(...);
   *** getHmacParams(...);
   *** clearCiphertextSegmentSize(...);
   *** clearDerivedKeySize(...);
   *** clearHkdfHashType(...);
   *** clearHmacParams(...);
   *** mergeHmacParams(...);
   *** setCiphertextSegmentSize(...);
   *** setDerivedKeySize(...);
   *** setHkdfHashType(...);
   *** setHkdfHashTypeValue(...);
   *** setHmacParams(...);
   *** setHmacParams(...);
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingParams
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingParams {
   *** getCiphertextSegmentSize(...);
   *** getDefaultInstance(...);
   *** getDerivedKeySize(...);
   *** hasHmacParams(...);
   *** getHkdfHashType(...);
   *** getHkdfHashTypeValue(...);
   *** getHmacParams(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtrKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesCtrKey
-keepclassmembers class com.google.crypto.tink.proto.AesCtrKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtrKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
}

-keep class com.google.crypto.tink.proto.AesCtrKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesCtrKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCtrParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrParams$Builder {
   *** getIvSize(...);
   *** clearIvSize(...);
   *** setIvSize(...);
}

-keep class com.google.crypto.tink.proto.AesCtrParams
-keepclassmembers class com.google.crypto.tink.proto.AesCtrParams {
   *** getDefaultInstance(...);
   *** getIvSize(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesEax
-keepclassmembers class com.google.crypto.tink.proto.AesEax {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesEaxKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesEaxKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesEaxKey
-keepclassmembers class com.google.crypto.tink.proto.AesEaxKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesEaxKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesEaxKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
}

-keep class com.google.crypto.tink.proto.AesEaxKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesEaxKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesEaxParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesEaxParams$Builder {
   *** getIvSize(...);
   *** clearIvSize(...);
   *** setIvSize(...);
}

-keep class com.google.crypto.tink.proto.AesEaxParams
-keepclassmembers class com.google.crypto.tink.proto.AesEaxParams {
   *** getDefaultInstance(...);
   *** getIvSize(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesGcm
-keepclassmembers class com.google.crypto.tink.proto.AesGcm {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreaming
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreaming {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingKey
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingParams$Builder {
   *** getCiphertextSegmentSize(...);
   *** getDerivedKeySize(...);
   *** getHkdfHashType(...);
   *** getHkdfHashTypeValue(...);
   *** clearCiphertextSegmentSize(...);
   *** clearDerivedKeySize(...);
   *** clearHkdfHashType(...);
   *** setCiphertextSegmentSize(...);
   *** setDerivedKeySize(...);
   *** setHkdfHashType(...);
   *** setHkdfHashTypeValue(...);
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingParams
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingParams {
   *** getCiphertextSegmentSize(...);
   *** getDefaultInstance(...);
   *** getDerivedKeySize(...);
   *** getHkdfHashType(...);
   *** getHkdfHashTypeValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesGcmKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmKey$Builder {
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesGcmKey
-keepclassmembers class com.google.crypto.tink.proto.AesGcmKey {
   *** getDefaultInstance(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesGcmKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmKeyFormat$Builder {
   *** getKeySize(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearVersion(...);
   *** setKeySize(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesGcmKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesGcmKeyFormat {
   *** getDefaultInstance(...);
   *** getKeySize(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesGcmSiv
-keepclassmembers class com.google.crypto.tink.proto.AesGcmSiv {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesGcmSivKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmSivKey$Builder {
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesGcmSivKey
-keepclassmembers class com.google.crypto.tink.proto.AesGcmSivKey {
   *** getDefaultInstance(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesGcmSivKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmSivKeyFormat$Builder {
   *** getKeySize(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearVersion(...);
   *** setKeySize(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesGcmSivKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesGcmSivKeyFormat {
   *** getDefaultInstance(...);
   *** getKeySize(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesSiv
-keepclassmembers class com.google.crypto.tink.proto.AesSiv {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.AesSivKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesSivKey$Builder {
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesSivKey
-keepclassmembers class com.google.crypto.tink.proto.AesSivKey {
   *** getDefaultInstance(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesSivKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.AesSivKeyFormat$Builder {
   *** getKeySize(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearVersion(...);
   *** setKeySize(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.AesSivKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.AesSivKeyFormat {
   *** getDefaultInstance(...);
   *** getKeySize(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Chacha20Poly1305
-keepclassmembers class com.google.crypto.tink.proto.Chacha20Poly1305 {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.ChaCha20Poly1305Key$Builder
-keepclassmembers class com.google.crypto.tink.proto.ChaCha20Poly1305Key$Builder {
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.ChaCha20Poly1305Key
-keepclassmembers class com.google.crypto.tink.proto.ChaCha20Poly1305Key {
   *** getDefaultInstance(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat$Builder {
}

-keep class com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat
-keepclassmembers class com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormat {
   *** getDefaultInstance(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Common
-keepclassmembers class com.google.crypto.tink.proto.Common {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.Config
-keepclassmembers class com.google.crypto.tink.proto.Config {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.Ecdsa
-keepclassmembers class com.google.crypto.tink.proto.Ecdsa {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.EcdsaKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaKeyFormat$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.EcdsaKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.EcdsaKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EcdsaParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaParams$Builder {
   *** getCurve(...);
   *** getCurveValue(...);
   *** getEncoding(...);
   *** getEncodingValue(...);
   *** getHashType(...);
   *** getHashTypeValue(...);
   *** clearCurve(...);
   *** clearEncoding(...);
   *** clearHashType(...);
   *** setCurve(...);
   *** setCurveValue(...);
   *** setEncoding(...);
   *** setEncodingValue(...);
   *** setHashType(...);
   *** setHashTypeValue(...);
}

-keep class com.google.crypto.tink.proto.EcdsaParams
-keepclassmembers class com.google.crypto.tink.proto.EcdsaParams {
   *** getCurve(...);
   *** getCurveValue(...);
   *** getDefaultInstance(...);
   *** getEncoding(...);
   *** getEncodingValue(...);
   *** getHashType(...);
   *** getHashTypeValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EcdsaPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaPrivateKey$Builder {
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearPublicKey(...);
   *** clearVersion(...);
   *** mergePublicKey(...);
   *** setKeyValue(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.EcdsaPrivateKey
-keepclassmembers class com.google.crypto.tink.proto.EcdsaPrivateKey {
   *** getDefaultInstance(...);
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EcdsaPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaPublicKey$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** clearX(...);
   *** clearY(...);
   *** getX(...);
   *** getY(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
   *** setX(...);
   *** setY(...);
}

-keep class com.google.crypto.tink.proto.EcdsaPublicKey
-keepclassmembers class com.google.crypto.tink.proto.EcdsaPublicKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getX(...);
   *** getY(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EcdsaSignatureEncoding
-keepclassmembers class com.google.crypto.tink.proto.EcdsaSignatureEncoding {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadDemParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadDemParams$Builder {
   *** getAeadDem(...);
   *** hasAeadDem(...);
   *** clearAeadDem(...);
   *** mergeAeadDem(...);
   *** setAeadDem(...);
   *** setAeadDem(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadDemParams
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadDemParams {
   *** getAeadDem(...);
   *** getDefaultInstance(...);
   *** hasAeadDem(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdf
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdf {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** clearParams(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfParams$Builder {
   *** getDemParams(...);
   *** getEcPointFormat(...);
   *** getEcPointFormatValue(...);
   *** hasDemParams(...);
   *** hasKemParams(...);
   *** getKemParams(...);
   *** clearDemParams(...);
   *** clearEcPointFormat(...);
   *** clearKemParams(...);
   *** mergeDemParams(...);
   *** mergeKemParams(...);
   *** setDemParams(...);
   *** setDemParams(...);
   *** setEcPointFormat(...);
   *** setEcPointFormatValue(...);
   *** setKemParams(...);
   *** setKemParams(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfParams
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfParams {
   *** getDefaultInstance(...);
   *** getDemParams(...);
   *** getEcPointFormat(...);
   *** getEcPointFormatValue(...);
   *** hasDemParams(...);
   *** hasKemParams(...);
   *** getKemParams(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey$Builder {
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearPublicKey(...);
   *** clearVersion(...);
   *** mergePublicKey(...);
   *** setKeyValue(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfPrivateKey {
   *** getDefaultInstance(...);
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfPublicKey$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** clearX(...);
   *** clearY(...);
   *** getX(...);
   *** getY(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
   *** setX(...);
   *** setY(...);
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfPublicKey
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfPublicKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getX(...);
   *** getY(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EciesHkdfKemParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.EciesHkdfKemParams$Builder {
   *** getCurveType(...);
   *** getCurveTypeValue(...);
   *** getHkdfHashType(...);
   *** getHkdfHashTypeValue(...);
   *** getHkdfSalt(...);
   *** clearCurveType(...);
   *** clearHkdfHashType(...);
   *** clearHkdfSalt(...);
   *** setCurveType(...);
   *** setCurveTypeValue(...);
   *** setHkdfHashType(...);
   *** setHkdfHashTypeValue(...);
   *** setHkdfSalt(...);
}

-keep class com.google.crypto.tink.proto.EciesHkdfKemParams
-keepclassmembers class com.google.crypto.tink.proto.EciesHkdfKemParams {
   *** getCurveType(...);
   *** getCurveTypeValue(...);
   *** getDefaultInstance(...);
   *** getHkdfHashType(...);
   *** getHkdfHashTypeValue(...);
   *** getHkdfSalt(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EcPointFormat
-keepclassmembers class com.google.crypto.tink.proto.EcPointFormat {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.Ed25519
-keepclassmembers class com.google.crypto.tink.proto.Ed25519 {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.Ed25519KeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.Ed25519KeyFormat$Builder {
   *** getVersion(...);
   *** clearVersion(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.Ed25519KeyFormat
-keepclassmembers class com.google.crypto.tink.proto.Ed25519KeyFormat {
   *** getDefaultInstance(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Ed25519PrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.Ed25519PrivateKey$Builder {
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearPublicKey(...);
   *** clearVersion(...);
   *** mergePublicKey(...);
   *** setKeyValue(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.Ed25519PrivateKey
-keepclassmembers class com.google.crypto.tink.proto.Ed25519PrivateKey {
   *** getDefaultInstance(...);
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Ed25519PublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.Ed25519PublicKey$Builder {
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.Ed25519PublicKey
-keepclassmembers class com.google.crypto.tink.proto.Ed25519PublicKey {
   *** getDefaultInstance(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.EllipticCurveType
-keepclassmembers class com.google.crypto.tink.proto.EllipticCurveType {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.EncryptedKeyset$Builder
-keepclassmembers class com.google.crypto.tink.proto.EncryptedKeyset$Builder {
   *** hasKeysetInfo(...);
   *** getKeysetInfo(...);
   *** clearEncryptedKeyset(...);
   *** clearKeysetInfo(...);
   *** getEncryptedKeyset(...);
   *** mergeKeysetInfo(...);
   *** setEncryptedKeyset(...);
   *** setKeysetInfo(...);
   *** setKeysetInfo(...);
}

-keep class com.google.crypto.tink.proto.EncryptedKeyset
-keepclassmembers class com.google.crypto.tink.proto.EncryptedKeyset {
   *** getDefaultInstance(...);
   *** hasKeysetInfo(...);
   *** getKeysetInfo(...);
   *** dynamicMethod(...);
   *** getEncryptedKeyset(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HashType
-keepclassmembers class com.google.crypto.tink.proto.HashType {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.HkdfPrf
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrf {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.HkdfPrfKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HkdfPrfKey
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HkdfPrfKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HkdfPrfKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HkdfPrfParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfParams$Builder {
   *** getHash(...);
   *** getHashValue(...);
   *** getSalt(...);
   *** clearHash(...);
   *** clearSalt(...);
   *** setHash(...);
   *** setHashValue(...);
   *** setSalt(...);
}

-keep class com.google.crypto.tink.proto.HkdfPrfParams
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfParams {
   *** getDefaultInstance(...);
   *** getHash(...);
   *** getHashValue(...);
   *** getSalt(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Hmac
-keepclassmembers class com.google.crypto.tink.proto.Hmac {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.HmacKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.HmacKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HmacKey
-keepclassmembers class com.google.crypto.tink.proto.HmacKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HmacKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.HmacKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HmacKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.HmacKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HmacParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.HmacParams$Builder {
   *** getHash(...);
   *** getHashValue(...);
   *** getTagSize(...);
   *** clearHash(...);
   *** clearTagSize(...);
   *** setHash(...);
   *** setHashValue(...);
   *** setTagSize(...);
}

-keep class com.google.crypto.tink.proto.HmacParams
-keepclassmembers class com.google.crypto.tink.proto.HmacParams {
   *** getDefaultInstance(...);
   *** getHash(...);
   *** getHashValue(...);
   *** getTagSize(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HmacPrf
-keepclassmembers class com.google.crypto.tink.proto.HmacPrf {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.HmacPrfKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HmacPrfKey
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HmacPrfKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfKeyFormat$Builder {
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeySize(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeySize(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HmacPrfKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeySize(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HmacPrfParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfParams$Builder {
   *** getHash(...);
   *** getHashValue(...);
   *** clearHash(...);
   *** setHash(...);
   *** setHashValue(...);
}

-keep class com.google.crypto.tink.proto.HmacPrfParams
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfParams {
   *** getDefaultInstance(...);
   *** getHash(...);
   *** getHashValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Hpke
-keepclassmembers class com.google.crypto.tink.proto.Hpke {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.HpkeAead
-keepclassmembers class com.google.crypto.tink.proto.HpkeAead {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.HpkeKdf
-keepclassmembers class com.google.crypto.tink.proto.HpkeKdf {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.HpkeKem
-keepclassmembers class com.google.crypto.tink.proto.HpkeKem {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.HpkeKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.HpkeKeyFormat$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** clearParams(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
}

-keep class com.google.crypto.tink.proto.HpkeKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.HpkeKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HpkeParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.HpkeParams$Builder {
   *** getAead(...);
   *** getAeadValue(...);
   *** getKdf(...);
   *** getKdfValue(...);
   *** getKem(...);
   *** getKemValue(...);
   *** clearAead(...);
   *** clearKdf(...);
   *** clearKem(...);
   *** setAead(...);
   *** setAeadValue(...);
   *** setKdf(...);
   *** setKdfValue(...);
   *** setKem(...);
   *** setKemValue(...);
}

-keep class com.google.crypto.tink.proto.HpkeParams
-keepclassmembers class com.google.crypto.tink.proto.HpkeParams {
   *** getAead(...);
   *** getAeadValue(...);
   *** getDefaultInstance(...);
   *** getKdf(...);
   *** getKdfValue(...);
   *** getKem(...);
   *** getKemValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HpkePrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.HpkePrivateKey$Builder {
   *** hasPublicKey(...);
   *** getPrivateKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearPrivateKey(...);
   *** clearPublicKey(...);
   *** clearVersion(...);
   *** mergePublicKey(...);
   *** setPrivateKey(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HpkePrivateKey
-keepclassmembers class com.google.crypto.tink.proto.HpkePrivateKey {
   *** getDefaultInstance(...);
   *** hasPublicKey(...);
   *** getPrivateKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.HpkePublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.HpkePublicKey$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearPublicKey(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
   *** setPublicKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.HpkePublicKey
-keepclassmembers class com.google.crypto.tink.proto.HpkePublicKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.AesCmacKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCmacKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCmacParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCmacPrfKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacPrfKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCmacPrfKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCmacPrfKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacAeadKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrHmacAeadKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacAeadKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrHmacStreamingParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrHmacStreamingParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesCtrParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesCtrParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesEaxKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesEaxKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesEaxKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesEaxKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesEaxParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesEaxParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesGcmHkdfStreamingParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmHkdfStreamingParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesGcmKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesGcmKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesGcmSivKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmSivKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesGcmSivKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesGcmSivKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesSivKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesSivKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.AesSivKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.AesSivKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.ChaCha20Poly1305KeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.ChaCha20Poly1305KeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.ChaCha20Poly1305KeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.EcdsaKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.EcdsaParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.EcdsaPrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaPrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.EcdsaPublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EcdsaPublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.EciesAeadDemParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadDemParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfPrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfPrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.EciesAeadHkdfPublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EciesAeadHkdfPublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.EciesHkdfKemParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EciesHkdfKemParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.Ed25519KeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.Ed25519KeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.Ed25519PrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.Ed25519PrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.Ed25519PublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.Ed25519PublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.EncryptedKeysetOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.EncryptedKeysetOrBuilder {
}

-keep class com.google.crypto.tink.proto.HkdfPrfKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.HkdfPrfKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.HkdfPrfParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HkdfPrfParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.HmacKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HmacKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.HmacKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HmacKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.HmacParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HmacParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.HmacPrfKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.HmacPrfKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.HmacPrfParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HmacPrfParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.HpkeKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HpkeKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.HpkeParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HpkeParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.HpkePrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HpkePrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.HpkePublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.HpkePublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtEcdsaKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtHmacKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtHmacKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1KeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1KeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.KeyDataOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KeyDataOrBuilder {
}

-keep class com.google.crypto.tink.proto.KeysetInfoOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KeysetInfoOrBuilder {
}

-keep class com.google.crypto.tink.proto.KeysetOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KeysetOrBuilder {
}

-keep class com.google.crypto.tink.proto.KeyTemplateOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KeyTemplateOrBuilder {
}

-keep class com.google.crypto.tink.proto.KeyTypeEntryOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KeyTypeEntryOrBuilder {
}

-keep class com.google.crypto.tink.proto.KmsAeadKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KmsAeadKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.KmsAeadKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KmsAeadKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.RegistryConfigOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RegistryConfigOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1ParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1ParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1PublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1PublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPssKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPssParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPssPrivateKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssPrivateKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.RsaSsaPssPublicKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssPublicKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.XAesGcmKeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmKeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.XAesGcmKeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmKeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.XAesGcmParamsOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmParamsOrBuilder {
}

-keep class com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormatOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormatOrBuilder {
}

-keep class com.google.crypto.tink.proto.XChaCha20Poly1305KeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.XChaCha20Poly1305KeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtEcdsa
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsa {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaAlgorithm
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaAlgorithm {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaKeyFormat$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearVersion(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaKeyFormat {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPrivateKey$Builder {
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearPublicKey(...);
   *** clearVersion(...);
   *** mergePublicKey(...);
   *** setKeyValue(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPrivateKey
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPrivateKey {
   *** getDefaultInstance(...);
   *** hasPublicKey(...);
   *** getKeyValue(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPublicKey$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** hasCustomKid(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearCustomKid(...);
   *** clearVersion(...);
   *** clearX(...);
   *** clearY(...);
   *** getCustomKid(...);
   *** getX(...);
   *** getY(...);
   *** mergeCustomKid(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setCustomKid(...);
   *** setCustomKid(...);
   *** setVersion(...);
   *** setX(...);
   *** setY(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPublicKey$CustomKid$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPublicKey$CustomKid$Builder {
   *** getValue(...);
   *** getValueBytes(...);
   *** clearValue(...);
   *** setValue(...);
   *** setValueBytes(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPublicKey$CustomKid
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPublicKey$CustomKid {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** getValueBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPublicKey$CustomKidOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPublicKey$CustomKidOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtEcdsaPublicKey
-keepclassmembers class com.google.crypto.tink.proto.JwtEcdsaPublicKey {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** hasCustomKid(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getCustomKid(...);
   *** getX(...);
   *** getY(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtHmac
-keepclassmembers class com.google.crypto.tink.proto.JwtHmac {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.JwtHmacAlgorithm
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacAlgorithm {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.JwtHmacKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKey$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** hasCustomKid(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearCustomKid(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** getCustomKid(...);
   *** mergeCustomKid(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setCustomKid(...);
   *** setCustomKid(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtHmacKey$CustomKid$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKey$CustomKid$Builder {
   *** getValue(...);
   *** getValueBytes(...);
   *** clearValue(...);
   *** setValue(...);
   *** setValueBytes(...);
}

-keep class com.google.crypto.tink.proto.JwtHmacKey$CustomKid
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKey$CustomKid {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** getValueBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtHmacKey$CustomKidOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKey$CustomKidOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtHmacKey
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKey {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** hasCustomKid(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getCustomKid(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtHmacKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKeyFormat$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getKeySize(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearKeySize(...);
   *** clearVersion(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setKeySize(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtHmacKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.JwtHmacKeyFormat {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** getKeySize(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1 {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1Algorithm
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1Algorithm {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1KeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1KeyFormat$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getModulusSizeInBits(...);
   *** getPublicExponent(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearModulusSizeInBits(...);
   *** clearPublicExponent(...);
   *** clearVersion(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setModulusSizeInBits(...);
   *** setPublicExponent(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1KeyFormat
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1KeyFormat {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** getModulusSizeInBits(...);
   *** getPublicExponent(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PrivateKey$Builder {
   *** getCrt(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearCrt(...);
   *** clearD(...);
   *** clearDp(...);
   *** clearDq(...);
   *** clearP(...);
   *** clearPublicKey(...);
   *** clearQ(...);
   *** clearVersion(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** mergePublicKey(...);
   *** setCrt(...);
   *** setD(...);
   *** setDp(...);
   *** setDq(...);
   *** setP(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setQ(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PrivateKey
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PrivateKey {
   *** getCrt(...);
   *** getDefaultInstance(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** hasCustomKid(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearCustomKid(...);
   *** clearE(...);
   *** clearN(...);
   *** clearVersion(...);
   *** getCustomKid(...);
   *** getE(...);
   *** getN(...);
   *** mergeCustomKid(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setCustomKid(...);
   *** setCustomKid(...);
   *** setE(...);
   *** setN(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$CustomKid$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$CustomKid$Builder {
   *** getValue(...);
   *** getValueBytes(...);
   *** clearValue(...);
   *** setValue(...);
   *** setValueBytes(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$CustomKid
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$CustomKid {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** getValueBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$CustomKidOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey$CustomKidOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPkcs1PublicKey {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** hasCustomKid(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getCustomKid(...);
   *** getE(...);
   *** getN(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPss
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPss {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssAlgorithm
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssAlgorithm {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssKeyFormat$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getModulusSizeInBits(...);
   *** getPublicExponent(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearModulusSizeInBits(...);
   *** clearPublicExponent(...);
   *** clearVersion(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setModulusSizeInBits(...);
   *** setPublicExponent(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssKeyFormat {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** getModulusSizeInBits(...);
   *** getPublicExponent(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPrivateKey$Builder {
   *** getCrt(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearCrt(...);
   *** clearD(...);
   *** clearDp(...);
   *** clearDq(...);
   *** clearP(...);
   *** clearPublicKey(...);
   *** clearQ(...);
   *** clearVersion(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** mergePublicKey(...);
   *** setCrt(...);
   *** setD(...);
   *** setDp(...);
   *** setDq(...);
   *** setP(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setQ(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPrivateKey
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPrivateKey {
   *** getCrt(...);
   *** getDefaultInstance(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$Builder {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** hasCustomKid(...);
   *** getVersion(...);
   *** clearAlgorithm(...);
   *** clearCustomKid(...);
   *** clearE(...);
   *** clearN(...);
   *** clearVersion(...);
   *** getCustomKid(...);
   *** getE(...);
   *** getN(...);
   *** mergeCustomKid(...);
   *** setAlgorithm(...);
   *** setAlgorithmValue(...);
   *** setCustomKid(...);
   *** setCustomKid(...);
   *** setE(...);
   *** setN(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$CustomKid$Builder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$CustomKid$Builder {
   *** getValue(...);
   *** getValueBytes(...);
   *** clearValue(...);
   *** setValue(...);
   *** setValueBytes(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$CustomKid
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$CustomKid {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** getValueBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$CustomKidOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey$CustomKidOrBuilder {
}

-keep class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey
-keepclassmembers class com.google.crypto.tink.proto.JwtRsaSsaPssPublicKey {
   *** getAlgorithm(...);
   *** getAlgorithmValue(...);
   *** getDefaultInstance(...);
   *** hasCustomKid(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getCustomKid(...);
   *** getE(...);
   *** getN(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KeyData$Builder
-keepclassmembers class com.google.crypto.tink.proto.KeyData$Builder {
   *** getKeyMaterialTypeValue(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** getValue(...);
   *** clearKeyMaterialType(...);
   *** clearTypeUrl(...);
   *** clearValue(...);
   *** getKeyMaterialType(...);
   *** setKeyMaterialType(...);
   *** setKeyMaterialTypeValue(...);
   *** setTypeUrl(...);
   *** setTypeUrlBytes(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.proto.KeyData$KeyMaterialType
-keepclassmembers class com.google.crypto.tink.proto.KeyData$KeyMaterialType {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.KeyData
-keepclassmembers class com.google.crypto.tink.proto.KeyData {
   *** getDefaultInstance(...);
   *** getKeyMaterialTypeValue(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** getKeyMaterialType(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Keyset$Builder
-keepclassmembers class com.google.crypto.tink.proto.Keyset$Builder {
   *** getKeyCount(...);
   *** getKeyList(...);
   *** getPrimaryKeyId(...);
   *** addAllKey(...);
   *** addKey(...);
   *** addKey(...);
   *** addKey(...);
   *** addKey(...);
   *** clearKey(...);
   *** clearPrimaryKeyId(...);
   *** getKey(...);
   *** removeKey(...);
   *** setKey(...);
   *** setKey(...);
   *** setPrimaryKeyId(...);
}

-keep class com.google.crypto.tink.proto.Keyset$Key$Builder
-keepclassmembers class com.google.crypto.tink.proto.Keyset$Key$Builder {
   *** hasKeyData(...);
   *** getKeyData(...);
   *** getKeyId(...);
   *** getOutputPrefixType(...);
   *** getOutputPrefixTypeValue(...);
   *** getStatus(...);
   *** getStatusValue(...);
   *** clearKeyData(...);
   *** clearKeyId(...);
   *** clearOutputPrefixType(...);
   *** clearStatus(...);
   *** mergeKeyData(...);
   *** setKeyData(...);
   *** setKeyData(...);
   *** setKeyId(...);
   *** setOutputPrefixType(...);
   *** setOutputPrefixTypeValue(...);
   *** setStatus(...);
   *** setStatusValue(...);
}

-keep class com.google.crypto.tink.proto.Keyset$Key
-keepclassmembers class com.google.crypto.tink.proto.Keyset$Key {
   *** getDefaultInstance(...);
   *** hasKeyData(...);
   *** getKeyData(...);
   *** getKeyId(...);
   *** getOutputPrefixType(...);
   *** getOutputPrefixTypeValue(...);
   *** getStatus(...);
   *** getStatusValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Keyset$KeyOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.Keyset$KeyOrBuilder {
}

-keep class com.google.crypto.tink.proto.Keyset
-keepclassmembers class com.google.crypto.tink.proto.Keyset {
   *** getDefaultInstance(...);
   *** getKeyCount(...);
   *** getKeyList(...);
   *** getKeyOrBuilderList(...);
   *** getPrimaryKeyId(...);
   *** dynamicMethod(...);
   *** getKey(...);
   *** getKeyOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KeysetInfo$Builder
-keepclassmembers class com.google.crypto.tink.proto.KeysetInfo$Builder {
   *** getKeyInfoCount(...);
   *** getKeyInfoList(...);
   *** getPrimaryKeyId(...);
   *** addAllKeyInfo(...);
   *** addKeyInfo(...);
   *** addKeyInfo(...);
   *** addKeyInfo(...);
   *** addKeyInfo(...);
   *** clearKeyInfo(...);
   *** clearPrimaryKeyId(...);
   *** getKeyInfo(...);
   *** removeKeyInfo(...);
   *** setKeyInfo(...);
   *** setKeyInfo(...);
   *** setPrimaryKeyId(...);
}

-keep class com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder
-keepclassmembers class com.google.crypto.tink.proto.KeysetInfo$KeyInfo$Builder {
   *** getKeyId(...);
   *** getOutputPrefixType(...);
   *** getOutputPrefixTypeValue(...);
   *** getStatus(...);
   *** getStatusValue(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** clearKeyId(...);
   *** clearOutputPrefixType(...);
   *** clearStatus(...);
   *** clearTypeUrl(...);
   *** setKeyId(...);
   *** setOutputPrefixType(...);
   *** setOutputPrefixTypeValue(...);
   *** setStatus(...);
   *** setStatusValue(...);
   *** setTypeUrl(...);
   *** setTypeUrlBytes(...);
}

-keep class com.google.crypto.tink.proto.KeysetInfo$KeyInfo
-keepclassmembers class com.google.crypto.tink.proto.KeysetInfo$KeyInfo {
   *** getDefaultInstance(...);
   *** getKeyId(...);
   *** getOutputPrefixType(...);
   *** getOutputPrefixTypeValue(...);
   *** getStatus(...);
   *** getStatusValue(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KeysetInfo$KeyInfoOrBuilder
-keepclassmembers class com.google.crypto.tink.proto.KeysetInfo$KeyInfoOrBuilder {
}

-keep class com.google.crypto.tink.proto.KeysetInfo
-keepclassmembers class com.google.crypto.tink.proto.KeysetInfo {
   *** getDefaultInstance(...);
   *** getKeyInfoCount(...);
   *** getKeyInfoList(...);
   *** getKeyInfoOrBuilderList(...);
   *** getPrimaryKeyId(...);
   *** dynamicMethod(...);
   *** getKeyInfo(...);
   *** getKeyInfoOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KeyStatusType
-keepclassmembers class com.google.crypto.tink.proto.KeyStatusType {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.KeyTemplate$Builder
-keepclassmembers class com.google.crypto.tink.proto.KeyTemplate$Builder {
   *** getOutputPrefixType(...);
   *** getOutputPrefixTypeValue(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** getValue(...);
   *** clearOutputPrefixType(...);
   *** clearTypeUrl(...);
   *** clearValue(...);
   *** setOutputPrefixType(...);
   *** setOutputPrefixTypeValue(...);
   *** setTypeUrl(...);
   *** setTypeUrlBytes(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.proto.KeyTemplate
-keepclassmembers class com.google.crypto.tink.proto.KeyTemplate {
   *** getDefaultInstance(...);
   *** getOutputPrefixType(...);
   *** getOutputPrefixTypeValue(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KeyTypeEntry$Builder
-keepclassmembers class com.google.crypto.tink.proto.KeyTypeEntry$Builder {
   *** getCatalogueName(...);
   *** getCatalogueNameBytes(...);
   *** getKeyManagerVersion(...);
   *** getNewKeyAllowed(...);
   *** getPrimitiveName(...);
   *** getPrimitiveNameBytes(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** clearCatalogueName(...);
   *** clearKeyManagerVersion(...);
   *** clearNewKeyAllowed(...);
   *** clearPrimitiveName(...);
   *** clearTypeUrl(...);
   *** setCatalogueName(...);
   *** setCatalogueNameBytes(...);
   *** setKeyManagerVersion(...);
   *** setNewKeyAllowed(...);
   *** setPrimitiveName(...);
   *** setPrimitiveNameBytes(...);
   *** setTypeUrl(...);
   *** setTypeUrlBytes(...);
}

-keep class com.google.crypto.tink.proto.KeyTypeEntry
-keepclassmembers class com.google.crypto.tink.proto.KeyTypeEntry {
   *** getCatalogueName(...);
   *** getCatalogueNameBytes(...);
   *** getDefaultInstance(...);
   *** getKeyManagerVersion(...);
   *** getNewKeyAllowed(...);
   *** getPrimitiveName(...);
   *** getPrimitiveNameBytes(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KmsAead
-keepclassmembers class com.google.crypto.tink.proto.KmsAead {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.KmsAeadKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.KmsAeadKey$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.KmsAeadKey
-keepclassmembers class com.google.crypto.tink.proto.KmsAeadKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KmsAeadKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.KmsAeadKeyFormat$Builder {
   *** getKeyUri(...);
   *** getKeyUriBytes(...);
   *** clearKeyUri(...);
   *** setKeyUri(...);
   *** setKeyUriBytes(...);
}

-keep class com.google.crypto.tink.proto.KmsAeadKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.KmsAeadKeyFormat {
   *** getDefaultInstance(...);
   *** getKeyUri(...);
   *** getKeyUriBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KmsEnvelope
-keepclassmembers class com.google.crypto.tink.proto.KmsEnvelope {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.KmsEnvelopeAeadKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.KmsEnvelopeAeadKey$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.KmsEnvelopeAeadKey
-keepclassmembers class com.google.crypto.tink.proto.KmsEnvelopeAeadKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat$Builder {
   *** getDekTemplate(...);
   *** hasDekTemplate(...);
   *** getKekUri(...);
   *** getKekUriBytes(...);
   *** clearDekTemplate(...);
   *** clearKekUri(...);
   *** mergeDekTemplate(...);
   *** setDekTemplate(...);
   *** setDekTemplate(...);
   *** setKekUri(...);
   *** setKekUriBytes(...);
}

-keep class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.KmsEnvelopeAeadKeyFormat {
   *** getDefaultInstance(...);
   *** getDekTemplate(...);
   *** hasDekTemplate(...);
   *** getKekUri(...);
   *** getKekUriBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
   *** build(...);
}

-keep class com.google.crypto.tink.proto.OutputPrefixType
-keepclassmembers class com.google.crypto.tink.proto.OutputPrefixType {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriver
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriver {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverKey$Builder {
   *** hasParams(...);
   *** hasPrfKey(...);
   *** getParams(...);
   *** getPrfKey(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearPrfKey(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** mergePrfKey(...);
   *** setParams(...);
   *** setParams(...);
   *** setPrfKey(...);
   *** setPrfKey(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverKey
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** hasPrfKey(...);
   *** getParams(...);
   *** getPrfKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverKeyFormat$Builder {
   *** hasParams(...);
   *** hasPrfKeyTemplate(...);
   *** getParams(...);
   *** getPrfKeyTemplate(...);
   *** clearParams(...);
   *** clearPrfKeyTemplate(...);
   *** mergeParams(...);
   *** mergePrfKeyTemplate(...);
   *** setParams(...);
   *** setParams(...);
   *** setPrfKeyTemplate(...);
   *** setPrfKeyTemplate(...);
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** hasPrfKeyTemplate(...);
   *** getParams(...);
   *** getPrfKeyTemplate(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverParams$Builder {
   *** getDerivedKeyTemplate(...);
   *** hasDerivedKeyTemplate(...);
   *** clearDerivedKeyTemplate(...);
   *** mergeDerivedKeyTemplate(...);
   *** setDerivedKeyTemplate(...);
   *** setDerivedKeyTemplate(...);
}

-keep class com.google.crypto.tink.proto.PrfBasedDeriverParams
-keepclassmembers class com.google.crypto.tink.proto.PrfBasedDeriverParams {
   *** getDefaultInstance(...);
   *** getDerivedKeyTemplate(...);
   *** hasDerivedKeyTemplate(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RegistryConfig$Builder
-keepclassmembers class com.google.crypto.tink.proto.RegistryConfig$Builder {
   *** getConfigName(...);
   *** getConfigNameBytes(...);
   *** getEntryCount(...);
   *** getEntryList(...);
   *** addAllEntry(...);
   *** addEntry(...);
   *** addEntry(...);
   *** addEntry(...);
   *** addEntry(...);
   *** clearConfigName(...);
   *** clearEntry(...);
   *** getEntry(...);
   *** removeEntry(...);
   *** setConfigName(...);
   *** setConfigNameBytes(...);
   *** setEntry(...);
   *** setEntry(...);
}

-keep class com.google.crypto.tink.proto.RegistryConfig
-keepclassmembers class com.google.crypto.tink.proto.RegistryConfig {
   *** getConfigName(...);
   *** getConfigNameBytes(...);
   *** getDefaultInstance(...);
   *** getEntryCount(...);
   *** getEntryList(...);
   *** getEntryOrBuilderList(...);
   *** dynamicMethod(...);
   *** getEntry(...);
   *** getEntryOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1 {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat$Builder {
   *** hasParams(...);
   *** getModulusSizeInBits(...);
   *** getParams(...);
   *** getPublicExponent(...);
   *** clearModulusSizeInBits(...);
   *** clearParams(...);
   *** clearPublicExponent(...);
   *** mergeParams(...);
   *** setModulusSizeInBits(...);
   *** setParams(...);
   *** setParams(...);
   *** setPublicExponent(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getModulusSizeInBits(...);
   *** getParams(...);
   *** getPublicExponent(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1Params$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1Params$Builder {
   *** getHashType(...);
   *** getHashTypeValue(...);
   *** clearHashType(...);
   *** setHashType(...);
   *** setHashTypeValue(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1Params
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1Params {
   *** getDefaultInstance(...);
   *** getHashType(...);
   *** getHashTypeValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey$Builder {
   *** getCrt(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearCrt(...);
   *** clearD(...);
   *** clearDp(...);
   *** clearDq(...);
   *** clearP(...);
   *** clearPublicKey(...);
   *** clearQ(...);
   *** clearVersion(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** mergePublicKey(...);
   *** setCrt(...);
   *** setD(...);
   *** setDp(...);
   *** setDq(...);
   *** setP(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setQ(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey {
   *** getCrt(...);
   *** getDefaultInstance(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearE(...);
   *** clearN(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** getE(...);
   *** getN(...);
   *** mergeParams(...);
   *** setE(...);
   *** setN(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPkcs1PublicKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getE(...);
   *** getN(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPss
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPss {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssKeyFormat$Builder {
   *** hasParams(...);
   *** getModulusSizeInBits(...);
   *** getParams(...);
   *** getPublicExponent(...);
   *** clearModulusSizeInBits(...);
   *** clearParams(...);
   *** clearPublicExponent(...);
   *** mergeParams(...);
   *** setModulusSizeInBits(...);
   *** setParams(...);
   *** setParams(...);
   *** setPublicExponent(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getModulusSizeInBits(...);
   *** getParams(...);
   *** getPublicExponent(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssParams$Builder {
   *** getMgf1Hash(...);
   *** getMgf1HashValue(...);
   *** getSaltLength(...);
   *** getSigHash(...);
   *** getSigHashValue(...);
   *** clearMgf1Hash(...);
   *** clearSaltLength(...);
   *** clearSigHash(...);
   *** setMgf1Hash(...);
   *** setMgf1HashValue(...);
   *** setSaltLength(...);
   *** setSigHash(...);
   *** setSigHashValue(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssParams
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssParams {
   *** getDefaultInstance(...);
   *** getMgf1Hash(...);
   *** getMgf1HashValue(...);
   *** getSaltLength(...);
   *** getSigHash(...);
   *** getSigHashValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssPrivateKey$Builder {
   *** getCrt(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** clearCrt(...);
   *** clearD(...);
   *** clearDp(...);
   *** clearDq(...);
   *** clearP(...);
   *** clearPublicKey(...);
   *** clearQ(...);
   *** clearVersion(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** mergePublicKey(...);
   *** setCrt(...);
   *** setD(...);
   *** setDp(...);
   *** setDq(...);
   *** setP(...);
   *** setPublicKey(...);
   *** setPublicKey(...);
   *** setQ(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssPrivateKey
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssPrivateKey {
   *** getCrt(...);
   *** getDefaultInstance(...);
   *** getDp(...);
   *** getDq(...);
   *** hasPublicKey(...);
   *** getPublicKey(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getD(...);
   *** getP(...);
   *** getQ(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssPublicKey$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearE(...);
   *** clearN(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** getE(...);
   *** getN(...);
   *** mergeParams(...);
   *** setE(...);
   *** setN(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.RsaSsaPssPublicKey
-keepclassmembers class com.google.crypto.tink.proto.RsaSsaPssPublicKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** getE(...);
   *** getN(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Tink
-keepclassmembers class com.google.crypto.tink.proto.Tink {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.XAesGcm
-keepclassmembers class com.google.crypto.tink.proto.XAesGcm {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.XAesGcmKey$Builder
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmKey$Builder {
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setKeyValue(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.XAesGcmKey
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmKey {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getKeyValue(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.XAesGcmKeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmKeyFormat$Builder {
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** clearParams(...);
   *** clearVersion(...);
   *** mergeParams(...);
   *** setParams(...);
   *** setParams(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.XAesGcmKeyFormat
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmKeyFormat {
   *** getDefaultInstance(...);
   *** hasParams(...);
   *** getParams(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.XAesGcmParams$Builder
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmParams$Builder {
   *** getSaltSize(...);
   *** clearSaltSize(...);
   *** setSaltSize(...);
}

-keep class com.google.crypto.tink.proto.XAesGcmParams
-keepclassmembers class com.google.crypto.tink.proto.XAesGcmParams {
   *** getDefaultInstance(...);
   *** getSaltSize(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.Xchacha20Poly1305
-keepclassmembers class com.google.crypto.tink.proto.Xchacha20Poly1305 {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.proto.XChaCha20Poly1305Key$Builder
-keepclassmembers class com.google.crypto.tink.proto.XChaCha20Poly1305Key$Builder {
   *** getKeyValue(...);
   *** getVersion(...);
   *** clearKeyValue(...);
   *** clearVersion(...);
   *** setKeyValue(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.XChaCha20Poly1305Key
-keepclassmembers class com.google.crypto.tink.proto.XChaCha20Poly1305Key {
   *** getDefaultInstance(...);
   *** getKeyValue(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat$Builder
-keepclassmembers class com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat$Builder {
   *** getVersion(...);
   *** clearVersion(...);
   *** setVersion(...);
}

-keep class com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat
-keepclassmembers class com.google.crypto.tink.proto.XChaCha20Poly1305KeyFormat {
   *** getDefaultInstance(...);
   *** getVersion(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.prf.AesCmacPrfKey
-keepclassmembers class com.google.crypto.tink.prf.AesCmacPrfKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getParameters(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.prf.AesCmacPrfKeyManager
-keepclassmembers class com.google.crypto.tink.prf.AesCmacPrfKeyManager {
   *** aes256CmacTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.prf.AesCmacPrfParameters
-keepclassmembers class com.google.crypto.tink.prf.AesCmacPrfParameters {
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** create(...);
}

-keep class com.google.crypto.tink.prf.HkdfPrfKey$Builder
-keepclassmembers class com.google.crypto.tink.prf.HkdfPrfKey$Builder {
   *** build(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.prf.HkdfPrfKey
-keepclassmembers class com.google.crypto.tink.prf.HkdfPrfKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.prf.HkdfPrfKeyManager
-keepclassmembers class com.google.crypto.tink.prf.HkdfPrfKeyManager {
   *** hkdfSha256Template(...);
   *** register(...);
   *** staticKeyType(...);
}

-keep class com.google.crypto.tink.prf.HkdfPrfParameters$Builder
-keepclassmembers class com.google.crypto.tink.prf.HkdfPrfParameters$Builder {
   *** build(...);
   *** setHashType(...);
   *** setKeySizeBytes(...);
   *** setSalt(...);
}

-keep class com.google.crypto.tink.prf.HkdfPrfParameters$HashType
-keepclassmembers class com.google.crypto.tink.prf.HkdfPrfParameters$HashType {
}

-keep class com.google.crypto.tink.prf.HkdfPrfParameters
-keepclassmembers class com.google.crypto.tink.prf.HkdfPrfParameters {
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** getSalt(...);
   *** builder(...);
   *** getHashType(...);
}

-keep class com.google.crypto.tink.prf.HmacPrfKey$Builder
-keepclassmembers class com.google.crypto.tink.prf.HmacPrfKey$Builder {
   *** build(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.prf.HmacPrfKey
-keepclassmembers class com.google.crypto.tink.prf.HmacPrfKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.prf.HmacPrfKeyManager
-keepclassmembers class com.google.crypto.tink.prf.HmacPrfKeyManager {
   *** hmacSha256Template(...);
   *** hmacSha512Template(...);
   *** register(...);
}

-keep class com.google.crypto.tink.prf.HmacPrfParameters$Builder
-keepclassmembers class com.google.crypto.tink.prf.HmacPrfParameters$Builder {
   *** build(...);
   *** setHashType(...);
   *** setKeySizeBytes(...);
}

-keep class com.google.crypto.tink.prf.HmacPrfParameters$HashType
-keepclassmembers class com.google.crypto.tink.prf.HmacPrfParameters$HashType {
}

-keep class com.google.crypto.tink.prf.HmacPrfParameters
-keepclassmembers class com.google.crypto.tink.prf.HmacPrfParameters {
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** builder(...);
   *** getHashType(...);
}

-keep class com.google.crypto.tink.prf.Prf
-keepclassmembers class com.google.crypto.tink.prf.Prf {
}

-keep class com.google.crypto.tink.prf.PredefinedPrfParameters
-keepclassmembers class com.google.crypto.tink.prf.PredefinedPrfParameters {
}

-keep class com.google.crypto.tink.prf.PrfConfig
-keepclassmembers class com.google.crypto.tink.prf.PrfConfig {
   *** register(...);
}

-keep class com.google.crypto.tink.prf.PrfKey
-keepclassmembers class com.google.crypto.tink.prf.PrfKey {
   <init>(...);
}

-keep class com.google.crypto.tink.prf.PrfKey
-keepclassmembers class com.google.crypto.tink.prf.PrfKey {
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.prf.PrfKeyTemplates
-keepclassmembers class com.google.crypto.tink.prf.PrfKeyTemplates {
}

-keep class com.google.crypto.tink.prf.PrfParameters
-keepclassmembers class com.google.crypto.tink.prf.PrfParameters {
   <init>(...);
}

-keep class com.google.crypto.tink.prf.PrfParameters
-keepclassmembers class com.google.crypto.tink.prf.PrfParameters {
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.prf.PrfSet
-keepclassmembers class com.google.crypto.tink.prf.PrfSet {
   <init>(...);
   *** getPrfs(...);
   *** getPrimaryId(...);
   *** computePrimary(...);
}

-keep class com.google.crypto.tink.prf.PrfSet
-keepclassmembers class com.google.crypto.tink.prf.PrfSet {
   *** getPrfs(...);
   *** getPrimaryId(...);
}

-keep class com.google.crypto.tink.prf.PrfSetWrapper
-keepclassmembers class com.google.crypto.tink.prf.PrfSetWrapper {
   <init>(...);
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.prf.internal.AesCmacPrfProtoSerialization
-keepclassmembers class com.google.crypto.tink.prf.internal.AesCmacPrfProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.prf.internal.HkdfPrfProtoSerialization
-keepclassmembers class com.google.crypto.tink.prf.internal.HkdfPrfProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.prf.internal.HmacPrfProtoSerialization
-keepclassmembers class com.google.crypto.tink.prf.internal.HmacPrfProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.prf.internal.LegacyFullPrf
-keepclassmembers class com.google.crypto.tink.prf.internal.LegacyFullPrf {
   *** compute(...);
   *** create(...);
}

-keep class com.google.crypto.tink.mac.AesCmacKey$Builder
-keepclassmembers class com.google.crypto.tink.mac.AesCmacKey$Builder {
   *** build(...);
   *** setAesKeyBytes(...);
   *** setIdRequirement(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.mac.AesCmacKey
-keepclassmembers class com.google.crypto.tink.mac.AesCmacKey {
   *** getAesKey(...);
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.mac.AesCmacKeyManager
-keepclassmembers class com.google.crypto.tink.mac.AesCmacKeyManager {
   *** aes256CmacTemplate(...);
   *** rawAes256CmacTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.mac.AesCmacParameters$Builder
-keepclassmembers class com.google.crypto.tink.mac.AesCmacParameters$Builder {
   *** build(...);
   *** setKeySizeBytes(...);
   *** setTagSizeBytes(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.mac.AesCmacParameters$Variant
-keepclassmembers class com.google.crypto.tink.mac.AesCmacParameters$Variant {
}

-keep class com.google.crypto.tink.mac.AesCmacParameters
-keepclassmembers class com.google.crypto.tink.mac.AesCmacParameters {
   *** getCryptographicTagSizeBytes(...);
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** getTotalTagSizeBytes(...);
   *** builder(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.mac.ChunkedMacWrapper
-keepclassmembers class com.google.crypto.tink.mac.ChunkedMacWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.mac.HmacKey$Builder
-keepclassmembers class com.google.crypto.tink.mac.HmacKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.mac.HmacKey
-keepclassmembers class com.google.crypto.tink.mac.HmacKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.mac.HmacKeyManager
-keepclassmembers class com.google.crypto.tink.mac.HmacKeyManager {
   *** hmacSha256HalfDigestTemplate(...);
   *** hmacSha256Template(...);
   *** hmacSha512HalfDigestTemplate(...);
   *** hmacSha512Template(...);
   *** register(...);
}

-keep class com.google.crypto.tink.mac.HmacParameters$Builder
-keepclassmembers class com.google.crypto.tink.mac.HmacParameters$Builder {
   *** build(...);
   *** setHashType(...);
   *** setKeySizeBytes(...);
   *** setTagSizeBytes(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.mac.HmacParameters$HashType
-keepclassmembers class com.google.crypto.tink.mac.HmacParameters$HashType {
}

-keep class com.google.crypto.tink.mac.HmacParameters$Variant
-keepclassmembers class com.google.crypto.tink.mac.HmacParameters$Variant {
}

-keep class com.google.crypto.tink.mac.HmacParameters
-keepclassmembers class com.google.crypto.tink.mac.HmacParameters {
   *** getCryptographicTagSizeBytes(...);
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** getTotalTagSizeBytes(...);
   *** builder(...);
   *** getHashType(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.mac.ChunkedMac
-keepclassmembers class com.google.crypto.tink.mac.ChunkedMac {
}

-keep class com.google.crypto.tink.mac.ChunkedMacComputation
-keepclassmembers class com.google.crypto.tink.mac.ChunkedMacComputation {
}

-keep class com.google.crypto.tink.mac.ChunkedMacVerification
-keepclassmembers class com.google.crypto.tink.mac.ChunkedMacVerification {
}

-keep class com.google.crypto.tink.mac.MacConfig
-keepclassmembers class com.google.crypto.tink.mac.MacConfig {
   *** init(...);
   *** register(...);
   *** registerStandardKeyTypes(...);
}

-keep class com.google.crypto.tink.mac.MacFactory
-keepclassmembers class com.google.crypto.tink.mac.MacFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.mac.MacKey
-keepclassmembers class com.google.crypto.tink.mac.MacKey {
   <init>(...);
   *** getOutputPrefix(...);
}

-keep class com.google.crypto.tink.mac.MacKey
-keepclassmembers class com.google.crypto.tink.mac.MacKey {
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.mac.MacKeyTemplates
-keepclassmembers class com.google.crypto.tink.mac.MacKeyTemplates {
   *** createHmacKeyTemplate(...);
}

-keep class com.google.crypto.tink.mac.MacParameters
-keepclassmembers class com.google.crypto.tink.mac.MacParameters {
   <init>(...);
}

-keep class com.google.crypto.tink.mac.MacParameters
-keepclassmembers class com.google.crypto.tink.mac.MacParameters {
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.mac.MacWrapper
-keepclassmembers class com.google.crypto.tink.mac.MacWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.mac.PredefinedMacParameters
-keepclassmembers class com.google.crypto.tink.mac.PredefinedMacParameters {
}

-keep class com.google.crypto.tink.mac.internal.AesCmacProtoSerialization
-keepclassmembers class com.google.crypto.tink.mac.internal.AesCmacProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.mac.internal.AesUtil
-keepclassmembers class com.google.crypto.tink.mac.internal.AesUtil {
   *** cmacPad(...);
   *** dbl(...);
}

-keep class com.google.crypto.tink.mac.internal.ChunkedAesCmacImpl
-keepclassmembers class com.google.crypto.tink.mac.internal.ChunkedAesCmacImpl {
   <init>(...);
   *** createComputation(...);
   *** createVerification(...);
}

-keep class com.google.crypto.tink.mac.internal.ChunkedHmacImpl
-keepclassmembers class com.google.crypto.tink.mac.internal.ChunkedHmacImpl {
   <init>(...);
   *** createComputation(...);
   *** createVerification(...);
}

-keep class com.google.crypto.tink.mac.internal.HmacProtoSerialization
-keepclassmembers class com.google.crypto.tink.mac.internal.HmacProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.mac.internal.LegacyFullMac
-keepclassmembers class com.google.crypto.tink.mac.internal.LegacyFullMac {
   *** computeMac(...);
   *** create(...);
   *** verifyMac(...);
}

-keep class com.google.crypto.tink.keyderivation.KeysetDeriver
-keepclassmembers class com.google.crypto.tink.keyderivation.KeysetDeriver {
}

-keep class com.google.crypto.tink.keyderivation.KeyDerivationConfig
-keepclassmembers class com.google.crypto.tink.keyderivation.KeyDerivationConfig {
   *** register(...);
}

-keep class com.google.crypto.tink.keyderivation.KeyDerivationKey
-keepclassmembers class com.google.crypto.tink.keyderivation.KeyDerivationKey {
   <init>(...);
}

-keep class com.google.crypto.tink.keyderivation.KeyDerivationKey
-keepclassmembers class com.google.crypto.tink.keyderivation.KeyDerivationKey {
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.keyderivation.KeyDerivationParameters
-keepclassmembers class com.google.crypto.tink.keyderivation.KeyDerivationParameters {
   <init>(...);
   *** getDerivedKeyParameters(...);
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.keyderivation.KeyDerivationParameters
-keepclassmembers class com.google.crypto.tink.keyderivation.KeyDerivationParameters {
   *** getDerivedKeyParameters(...);
}

-keep class com.google.crypto.tink.keyderivation.KeysetDeriverWrapper
-keepclassmembers class com.google.crypto.tink.keyderivation.KeysetDeriverWrapper {
   *** register(...);
}

-keep class com.google.crypto.tink.keyderivation.PrfBasedKeyDerivationKey
-keepclassmembers class com.google.crypto.tink.keyderivation.PrfBasedKeyDerivationKey {
   *** getIdRequirementOrNull(...);
   *** getParameters(...);
   *** getPrfKey(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.keyderivation.PrfBasedKeyDerivationParameters$Builder
-keepclassmembers class com.google.crypto.tink.keyderivation.PrfBasedKeyDerivationParameters$Builder {
   <init>(...);
   *** build(...);
   *** setDerivedKeyParameters(...);
   *** setPrfParameters(...);
}

-keep class com.google.crypto.tink.keyderivation.PrfBasedKeyDerivationParameters
-keepclassmembers class com.google.crypto.tink.keyderivation.PrfBasedKeyDerivationParameters {
   *** getDerivedKeyParameters(...);
   *** getPrfParameters(...);
   *** builder(...);
}

-keep class com.google.crypto.tink.keyderivation.internal.KeyDeriver
-keepclassmembers class com.google.crypto.tink.keyderivation.internal.KeyDeriver {
}

-keep class com.google.crypto.tink.keyderivation.internal.KeysetDeriverWrapper
-keepclassmembers class com.google.crypto.tink.keyderivation.internal.KeysetDeriverWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
}

-keep class com.google.crypto.tink.keyderivation.internal.PrfBasedDeriverKeyManager
-keepclassmembers class com.google.crypto.tink.keyderivation.internal.PrfBasedDeriverKeyManager {
   *** getKeyType(...);
   *** getPrimitiveClass(...);
   *** getVersion(...);
   *** doesSupport(...);
   *** getPrimitive(...);
   *** getPrimitive(...);
   *** newKey(...);
   *** newKey(...);
   *** newKeyData(...);
   *** register(...);
}

-keep class com.google.crypto.tink.keyderivation.internal.PrfBasedKeyDeriver
-keepclassmembers class com.google.crypto.tink.keyderivation.internal.PrfBasedKeyDeriver {
   *** create(...);
   *** deriveKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtMac
-keepclassmembers class com.google.crypto.tink.jwt.JwtMac {
}

-keep class com.google.crypto.tink.jwt.JwtPublicKeySign
-keepclassmembers class com.google.crypto.tink.jwt.JwtPublicKeySign {
}

-keep class com.google.crypto.tink.jwt.JwtPublicKeySignInternal
-keepclassmembers class com.google.crypto.tink.jwt.JwtPublicKeySignInternal {
}

-keep class com.google.crypto.tink.jwt.JwtPublicKeyVerify
-keepclassmembers class com.google.crypto.tink.jwt.JwtPublicKeyVerify {
}

-keep class com.google.crypto.tink.jwt.JwtPublicKeyVerifyInternal
-keepclassmembers class com.google.crypto.tink.jwt.JwtPublicKeyVerifyInternal {
}

-keep class com.google.crypto.tink.jwt.JwkSetConverter
-keepclassmembers class com.google.crypto.tink.jwt.JwkSetConverter {
   *** fromKeysetHandle(...);
   *** fromPublicKeysetHandle(...);
   *** toKeysetHandle(...);
   *** toPublicKeysetHandle(...);
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaParameters$Algorithm
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaParameters$Algorithm {
   *** getStandardName(...);
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaParameters$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaParameters$Builder {
   *** build(...);
   *** setAlgorithm(...);
   *** setKidStrategy(...);
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaParameters$KidStrategy
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaParameters$KidStrategy {
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaParameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaParameters {
   *** hasIdRequirement(...);
   *** allowKidAbsent(...);
   *** builder(...);
   *** getAlgorithm(...);
   *** getKidStrategy(...);
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaPrivateKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaPrivateKey {
   *** getParameters(...);
   *** getPrivateValue(...);
   *** getPublicKey(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaPublicKey$Builder {
   *** build(...);
   *** setCustomKid(...);
   *** setIdRequirement(...);
   *** setParameters(...);
   *** setPublicPoint(...);
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaPublicKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaPublicKey {
   *** getIdRequirementOrNull(...);
   *** getKid(...);
   *** getParameters(...);
   *** getPublicPoint(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtEcdsaSignKeyManager
-keepclassmembers class com.google.crypto.tink.jwt.JwtEcdsaSignKeyManager {
   *** registerPair(...);
}

-keep class com.google.crypto.tink.jwt.JwtHmacKey$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtHmacKey$Builder {
   *** build(...);
   *** setCustomKid(...);
   *** setIdRequirement(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.jwt.JwtHmacKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtHmacKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getKid(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtHmacKeyManager
-keepclassmembers class com.google.crypto.tink.jwt.JwtHmacKeyManager {
   *** fipsStatus(...);
   *** hs256Template(...);
   *** hs384Template(...);
   *** hs512Template(...);
   *** register(...);
}

-keep class com.google.crypto.tink.jwt.JwtHmacParameters$Algorithm
-keepclassmembers class com.google.crypto.tink.jwt.JwtHmacParameters$Algorithm {
   *** getStandardName(...);
}

-keep class com.google.crypto.tink.jwt.JwtHmacParameters$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtHmacParameters$Builder {
   *** build(...);
   *** setAlgorithm(...);
   *** setKeySizeBytes(...);
   *** setKidStrategy(...);
}

-keep class com.google.crypto.tink.jwt.JwtHmacParameters$KidStrategy
-keepclassmembers class com.google.crypto.tink.jwt.JwtHmacParameters$KidStrategy {
}

-keep class com.google.crypto.tink.jwt.JwtHmacParameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtHmacParameters {
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** allowKidAbsent(...);
   *** builder(...);
   *** getAlgorithm(...);
   *** getKidStrategy(...);
}

-keep class com.google.crypto.tink.jwt.JwtInvalidException
-keepclassmembers class com.google.crypto.tink.jwt.JwtInvalidException {
   <init>(...);
}

-keep class com.google.crypto.tink.jwt.JwtMacConfig
-keepclassmembers class com.google.crypto.tink.jwt.JwtMacConfig {
   *** register(...);
}

-keep class com.google.crypto.tink.jwt.JwtMacKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtMacKey {
   <init>(...);
   *** getKid(...);
}

-keep class com.google.crypto.tink.jwt.JwtMacKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtMacKey {
   *** getKid(...);
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtMacParameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtMacParameters {
   <init>(...);
   *** allowKidAbsent(...);
}

-keep class com.google.crypto.tink.jwt.JwtMacParameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtMacParameters {
   *** allowKidAbsent(...);
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters$Algorithm
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters$Algorithm {
   *** getStandardName(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters$Builder {
   *** build(...);
   *** setAlgorithm(...);
   *** setKidStrategy(...);
   *** setModulusSizeBits(...);
   *** setPublicExponent(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters$KidStrategy
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters$KidStrategy {
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1Parameters {
   *** hasIdRequirement(...);
   *** getModulusSizeBits(...);
   *** getPublicExponent(...);
   *** allowKidAbsent(...);
   *** builder(...);
   *** getAlgorithm(...);
   *** getKidStrategy(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PrivateKey$Builder {
   *** build(...);
   *** setCrtCoefficient(...);
   *** setPrimeExponents(...);
   *** setPrimes(...);
   *** setPrivateExponent(...);
   *** setPublicKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PrivateKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PrivateKey {
   *** getCrtCoefficient(...);
   *** getParameters(...);
   *** getPrimeExponentP(...);
   *** getPrimeExponentQ(...);
   *** getPrimeP(...);
   *** getPrimeQ(...);
   *** getPrivateExponent(...);
   *** getPublicKey(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PublicKey$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PublicKey$Builder {
   *** build(...);
   *** setCustomKid(...);
   *** setIdRequirement(...);
   *** setModulus(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PublicKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1PublicKey {
   *** getIdRequirementOrNull(...);
   *** getKid(...);
   *** getModulus(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1SignKeyManager
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPkcs1SignKeyManager {
   *** registerPair(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters$Algorithm
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters$Algorithm {
   *** getStandardName(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters$Builder {
   *** build(...);
   *** setAlgorithm(...);
   *** setKidStrategy(...);
   *** setModulusSizeBits(...);
   *** setPublicExponent(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters$KidStrategy
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters$KidStrategy {
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssParameters {
   *** hasIdRequirement(...);
   *** getModulusSizeBits(...);
   *** getPublicExponent(...);
   *** allowKidAbsent(...);
   *** builder(...);
   *** getAlgorithm(...);
   *** getKidStrategy(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssPrivateKey$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssPrivateKey$Builder {
   *** build(...);
   *** setCrtCoefficient(...);
   *** setPrimeExponents(...);
   *** setPrimes(...);
   *** setPrivateExponent(...);
   *** setPublicKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssPrivateKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssPrivateKey {
   *** getCrtCoefficient(...);
   *** getParameters(...);
   *** getPrimeExponentP(...);
   *** getPrimeExponentQ(...);
   *** getPrimeP(...);
   *** getPrimeQ(...);
   *** getPrivateExponent(...);
   *** getPublicKey(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssPublicKey$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssPublicKey$Builder {
   *** build(...);
   *** setCustomKid(...);
   *** setIdRequirement(...);
   *** setModulus(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssPublicKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssPublicKey {
   *** getIdRequirementOrNull(...);
   *** getKid(...);
   *** getModulus(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtRsaSsaPssSignKeyManager
-keepclassmembers class com.google.crypto.tink.jwt.JwtRsaSsaPssSignKeyManager {
   *** registerPair(...);
}

-keep class com.google.crypto.tink.jwt.JwtSignatureConfig
-keepclassmembers class com.google.crypto.tink.jwt.JwtSignatureConfig {
   *** register(...);
}

-keep class com.google.crypto.tink.jwt.JwtSignatureParameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtSignatureParameters {
   <init>(...);
   *** allowKidAbsent(...);
}

-keep class com.google.crypto.tink.jwt.JwtSignatureParameters
-keepclassmembers class com.google.crypto.tink.jwt.JwtSignatureParameters {
   *** allowKidAbsent(...);
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.jwt.JwtSignaturePrivateKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtSignaturePrivateKey {
   <init>(...);
   *** getIdRequirementOrNull(...);
   *** getKid(...);
   *** getPublicKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtSignaturePrivateKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtSignaturePrivateKey {
   *** getParameters(...);
   *** getPublicKey(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtSignaturePublicKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtSignaturePublicKey {
   <init>(...);
   *** getKid(...);
}

-keep class com.google.crypto.tink.jwt.JwtSignaturePublicKey
-keepclassmembers class com.google.crypto.tink.jwt.JwtSignaturePublicKey {
   *** getKid(...);
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.jwt.JwtValidator$Builder
-keepclassmembers class com.google.crypto.tink.jwt.JwtValidator$Builder {
   *** allowMissingExpiration(...);
   *** build(...);
   *** expectAudience(...);
   *** expectIssuedInThePast(...);
   *** expectIssuer(...);
   *** expectTypeHeader(...);
   *** ignoreAudiences(...);
   *** ignoreIssuer(...);
   *** ignoreTypeHeader(...);
   *** setClock(...);
   *** setClockSkew(...);
}

-keep class com.google.crypto.tink.jwt.JwtValidator
-keepclassmembers class com.google.crypto.tink.jwt.JwtValidator {
   *** newBuilder(...);
}

-keep class com.google.crypto.tink.jwt.RawJwt$Builder
-keepclassmembers class com.google.crypto.tink.jwt.RawJwt$Builder {
   *** addAudience(...);
   *** addBooleanClaim(...);
   *** addJsonArrayClaim(...);
   *** addJsonObjectClaim(...);
   *** addNullClaim(...);
   *** addNumberClaim(...);
   *** addNumberClaim(...);
   *** addStringClaim(...);
   *** build(...);
   *** setAudience(...);
   *** setAudiences(...);
   *** setExpiration(...);
   *** setIssuedAt(...);
   *** setIssuer(...);
   *** setJwtId(...);
   *** setNotBefore(...);
   *** setSubject(...);
   *** setTypeHeader(...);
   *** withoutExpiration(...);
}

-keep class com.google.crypto.tink.jwt.RawJwt
-keepclassmembers class com.google.crypto.tink.jwt.RawJwt {
   *** getJsonPayload(...);
   *** newBuilder(...);
}

-keep class com.google.crypto.tink.jwt.VerifiedJwt
-keepclassmembers class com.google.crypto.tink.jwt.VerifiedJwt {
   *** getAudiences(...);
   *** getExpiration(...);
   *** hasAudiences(...);
   *** hasExpiration(...);
   *** hasIssuedAt(...);
   *** hasIssuer(...);
   *** hasJwtId(...);
   *** hasNotBefore(...);
   *** hasSubject(...);
   *** hasTypeHeader(...);
   *** getIssuedAt(...);
   *** getIssuer(...);
   *** getJwtId(...);
   *** getNotBefore(...);
   *** getSubject(...);
   *** getTypeHeader(...);
   *** customClaimNames(...);
   *** getBooleanClaim(...);
   *** getJsonArrayClaim(...);
   *** getJsonObjectClaim(...);
   *** getNumberClaim(...);
   *** getStringClaim(...);
   *** hasBooleanClaim(...);
   *** hasJsonArrayClaim(...);
   *** hasJsonObjectClaim(...);
   *** hasNumberClaim(...);
   *** hasStringClaim(...);
   *** isNullClaim(...);
}

-keep class com.google.crypto.tink.internal.BigIntegerEncoding
-keepclassmembers class com.google.crypto.tink.internal.BigIntegerEncoding {
   *** fromUnsignedBigEndianBytes(...);
   *** toBigEndianBytes(...);
   *** toBigEndianBytesOfFixedLength(...);
   *** toUnsignedBigEndianBytes(...);
}

-keep class com.google.crypto.tink.internal.ConscryptUtil
-keepclassmembers class com.google.crypto.tink.internal.ConscryptUtil {
   *** isConscryptProvider(...);
   *** providerOrNull(...);
   *** providerWithReflectionOrNull(...);
}

-keep class com.google.crypto.tink.internal.Curve25519
-keepclassmembers class com.google.crypto.tink.internal.Curve25519 {
   *** curveMult(...);
}

-keep class com.google.crypto.tink.internal.Ed25519
-keepclassmembers class com.google.crypto.tink.internal.Ed25519 {
   *** getHashedScalar(...);
   *** init(...);
   *** scalarMultWithBaseToBytes(...);
   *** sign(...);
   *** verify(...);
}

-keep class com.google.crypto.tink.internal.EllipticCurvesUtil
-keepclassmembers class com.google.crypto.tink.internal.EllipticCurvesUtil {
   *** checkPointOnCurve(...);
   *** getModulus(...);
   *** isNistEcParameterSpec(...);
   *** isSameEcParameterSpec(...);
   *** multiplyByGenerator(...);
}

-keep class com.google.crypto.tink.internal.EnumTypeProtoConverter$Builder
-keepclassmembers class com.google.crypto.tink.internal.EnumTypeProtoConverter$Builder {
   *** add(...);
   *** build(...);
}

-keep class com.google.crypto.tink.internal.EnumTypeProtoConverter
-keepclassmembers class com.google.crypto.tink.internal.EnumTypeProtoConverter {
   *** builder(...);
   *** fromProtoEnum(...);
   *** toProtoEnum(...);
}

-keep class com.google.crypto.tink.internal.Field25519
-keepclassmembers class com.google.crypto.tink.internal.Field25519 {
   *** contract(...);
}

-keep class com.google.crypto.tink.internal.MonitoringClient$Logger
-keepclassmembers class com.google.crypto.tink.internal.MonitoringClient$Logger {
}

-keep class com.google.crypto.tink.internal.MonitoringClient
-keepclassmembers class com.google.crypto.tink.internal.MonitoringClient {
}

-keep class com.google.crypto.tink.internal.InternalConfiguration
-keepclassmembers class com.google.crypto.tink.internal.InternalConfiguration {
   <init>(...);
   *** createFromPrimitiveRegistry(...);
   *** getInputPrimitiveClass(...);
   *** getLegacyPrimitive(...);
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.internal.InternalConfiguration
-keepclassmembers class com.google.crypto.tink.internal.InternalConfiguration {
   *** getInputPrimitiveClass(...);
   *** getLegacyPrimitive(...);
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.internal.Serialization
-keepclassmembers class com.google.crypto.tink.internal.Serialization {
}

-keep class com.google.crypto.tink.internal.JsonParser
-keepclassmembers class com.google.crypto.tink.internal.JsonParser {
   *** getParsedNumberAsLongOrThrow(...);
   *** isValidString(...);
   *** parse(...);
}

-keep class com.google.crypto.tink.internal.KeyManagerRegistry
-keepclassmembers class com.google.crypto.tink.internal.KeyManagerRegistry {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** getKeyManager(...);
   *** getUntypedKeyManager(...);
   *** globalInstance(...);
   *** isNewKeyAllowed(...);
   *** registerKeyManager(...);
   *** registerKeyManagerWithFipsCompatibility(...);
   *** resetGlobalInstanceTestOnly(...);
   *** restrictToFipsIfEmptyAndGlobalInstance(...);
   *** typeUrlExists(...);
}

-keep class com.google.crypto.tink.internal.KeyParser$KeyParsingFunction
-keepclassmembers class com.google.crypto.tink.internal.KeyParser$KeyParsingFunction {
}

-keep class com.google.crypto.tink.internal.KeyParser
-keepclassmembers class com.google.crypto.tink.internal.KeyParser {
   *** getObjectIdentifier(...);
   *** getSerializationClass(...);
   *** create(...);
   *** parseKey(...);
}

-keep class com.google.crypto.tink.internal.KeyParser
-keepclassmembers class com.google.crypto.tink.internal.KeyParser {
   *** parseKey(...);
}

-keep class com.google.crypto.tink.internal.KeySerializer$KeySerializationFunction
-keepclassmembers class com.google.crypto.tink.internal.KeySerializer$KeySerializationFunction {
}

-keep class com.google.crypto.tink.internal.KeySerializer
-keepclassmembers class com.google.crypto.tink.internal.KeySerializer {
   *** getKeyClass(...);
   *** getSerializationClass(...);
   *** create(...);
   *** serializeKey(...);
}

-keep class com.google.crypto.tink.internal.KeySerializer
-keepclassmembers class com.google.crypto.tink.internal.KeySerializer {
   *** serializeKey(...);
}

-keep class com.google.crypto.tink.internal.KeyStatusTypeProtoConverter
-keepclassmembers class com.google.crypto.tink.internal.KeyStatusTypeProtoConverter {
   *** fromProto(...);
   *** toProto(...);
}

-keep class com.google.crypto.tink.internal.KeyTemplateProtoConverter
-keepclassmembers class com.google.crypto.tink.internal.KeyTemplateProtoConverter {
   *** getOutputPrefixType(...);
   *** prefixFromProto(...);
   *** toByteArray(...);
   *** toProto(...);
}

-keep class com.google.crypto.tink.internal.LegacyKeyManagerImpl
-keepclassmembers class com.google.crypto.tink.internal.LegacyKeyManagerImpl {
   *** getKeyType(...);
   *** getPrimitiveClass(...);
   *** getVersion(...);
   *** create(...);
   *** createPrivateKeyManager(...);
   *** doesSupport(...);
   *** getPrimitive(...);
   *** getPrimitive(...);
   *** newKey(...);
   *** newKey(...);
   *** newKeyData(...);
}

-keep class com.google.crypto.tink.internal.LegacyProtoKey
-keepclassmembers class com.google.crypto.tink.internal.LegacyProtoKey {
   <init>(...);
   *** getIdRequirementOrNull(...);
   *** getParameters(...);
   *** equalsKey(...);
   *** getSerialization(...);
}

-keep class com.google.crypto.tink.internal.LegacyProtoParameters
-keepclassmembers class com.google.crypto.tink.internal.LegacyProtoParameters {
   <init>(...);
   *** hasIdRequirement(...);
   *** getSerialization(...);
}

-keep class com.google.crypto.tink.internal.MonitoringAnnotations$Builder
-keepclassmembers class com.google.crypto.tink.internal.MonitoringAnnotations$Builder {
   <init>(...);
   *** add(...);
   *** addAll(...);
   *** build(...);
}

-keep class com.google.crypto.tink.internal.MonitoringAnnotations
-keepclassmembers class com.google.crypto.tink.internal.MonitoringAnnotations {
   *** newBuilder(...);
   *** toMap(...);
}

-keep class com.google.crypto.tink.internal.MonitoringKeysetInfo$Builder
-keepclassmembers class com.google.crypto.tink.internal.MonitoringKeysetInfo$Builder {
   <init>(...);
   *** addEntry(...);
   *** build(...);
   *** setAnnotations(...);
   *** setPrimaryKeyId(...);
}

-keep class com.google.crypto.tink.internal.MonitoringKeysetInfo$Entry
-keepclassmembers class com.google.crypto.tink.internal.MonitoringKeysetInfo$Entry {
   *** getKeyId(...);
   *** getKeyPrefix(...);
   *** getKeyType(...);
   *** getStatus(...);
}

-keep class com.google.crypto.tink.internal.MonitoringKeysetInfo
-keepclassmembers class com.google.crypto.tink.internal.MonitoringKeysetInfo {
   *** getAnnotations(...);
   *** getEntries(...);
   *** getPrimaryKeyId(...);
   *** newBuilder(...);
}

-keep class com.google.crypto.tink.internal.MonitoringUtil
-keepclassmembers class com.google.crypto.tink.internal.MonitoringUtil {
}

-keep class com.google.crypto.tink.internal.MutableKeyCreationRegistry$KeyCreator
-keepclassmembers class com.google.crypto.tink.internal.MutableKeyCreationRegistry$KeyCreator {
}

-keep class com.google.crypto.tink.internal.MutableKeyCreationRegistry
-keepclassmembers class com.google.crypto.tink.internal.MutableKeyCreationRegistry {
   <init>(...);
   *** add(...);
   *** createKey(...);
   *** globalInstance(...);
}

-keep class com.google.crypto.tink.internal.MutableKeyDerivationRegistry$InsecureKeyCreator
-keepclassmembers class com.google.crypto.tink.internal.MutableKeyDerivationRegistry$InsecureKeyCreator {
}

-keep class com.google.crypto.tink.internal.MutableKeyDerivationRegistry
-keepclassmembers class com.google.crypto.tink.internal.MutableKeyDerivationRegistry {
   <init>(...);
   *** add(...);
   *** createKeyFromRandomness(...);
   *** globalInstance(...);
}

-keep class com.google.crypto.tink.internal.MutableMonitoringRegistry
-keepclassmembers class com.google.crypto.tink.internal.MutableMonitoringRegistry {
   <init>(...);
   *** getMonitoringClient(...);
   *** clear(...);
   *** globalInstance(...);
   *** registerMonitoringClient(...);
}

-keep class com.google.crypto.tink.internal.MutableParametersRegistry
-keepclassmembers class com.google.crypto.tink.internal.MutableParametersRegistry {
   *** getNames(...);
   *** get(...);
   *** globalInstance(...);
   *** put(...);
   *** putAll(...);
}

-keep class com.google.crypto.tink.internal.MutablePrimitiveRegistry
-keepclassmembers class com.google.crypto.tink.internal.MutablePrimitiveRegistry {
   *** getInputPrimitiveClass(...);
   *** getPrimitive(...);
   *** globalInstance(...);
   *** registerPrimitiveConstructor(...);
   *** resetGlobalInstanceTestOnly(...);
}

-keep class com.google.crypto.tink.internal.MutableSerializationRegistry
-keepclassmembers class com.google.crypto.tink.internal.MutableSerializationRegistry {
   <init>(...);
   *** globalInstance(...);
   *** hasParserForKey(...);
   *** hasParserForParameters(...);
   *** hasSerializerForKey(...);
   *** hasSerializerForParameters(...);
   *** parseKey(...);
   *** parseKeyWithLegacyFallback(...);
   *** parseParameters(...);
   *** parseParametersWithLegacyFallback(...);
   *** registerKeyParser(...);
   *** registerKeySerializer(...);
   *** registerParametersParser(...);
   *** registerParametersSerializer(...);
   *** serializeKey(...);
   *** serializeParameters(...);
}

-keep class com.google.crypto.tink.internal.OutputPrefixUtil
-keepclassmembers class com.google.crypto.tink.internal.OutputPrefixUtil {
   *** getLegacyOutputPrefix(...);
   *** getTinkOutputPrefix(...);
}

-keep class com.google.crypto.tink.internal.ParametersParser$ParametersParsingFunction
-keepclassmembers class com.google.crypto.tink.internal.ParametersParser$ParametersParsingFunction {
}

-keep class com.google.crypto.tink.internal.ParametersParser
-keepclassmembers class com.google.crypto.tink.internal.ParametersParser {
   *** getObjectIdentifier(...);
   *** getSerializationClass(...);
   *** create(...);
   *** parseParameters(...);
}

-keep class com.google.crypto.tink.internal.ParametersParser
-keepclassmembers class com.google.crypto.tink.internal.ParametersParser {
   *** parseParameters(...);
}

-keep class com.google.crypto.tink.internal.ParametersSerializer$ParametersSerializationFunction
-keepclassmembers class com.google.crypto.tink.internal.ParametersSerializer$ParametersSerializationFunction {
}

-keep class com.google.crypto.tink.internal.ParametersSerializer
-keepclassmembers class com.google.crypto.tink.internal.ParametersSerializer {
   *** getParametersClass(...);
   *** getSerializationClass(...);
   *** create(...);
   *** serializeParameters(...);
}

-keep class com.google.crypto.tink.internal.ParametersSerializer
-keepclassmembers class com.google.crypto.tink.internal.ParametersSerializer {
   *** serializeParameters(...);
}

-keep class com.google.crypto.tink.internal.PrimitiveConstructor$PrimitiveConstructionFunction
-keepclassmembers class com.google.crypto.tink.internal.PrimitiveConstructor$PrimitiveConstructionFunction {
}

-keep class com.google.crypto.tink.internal.PrimitiveConstructor
-keepclassmembers class com.google.crypto.tink.internal.PrimitiveConstructor {
   *** getKeyClass(...);
   *** getPrimitiveClass(...);
   *** constructPrimitive(...);
   *** create(...);
}

-keep class com.google.crypto.tink.internal.PrimitiveConstructor
-keepclassmembers class com.google.crypto.tink.internal.PrimitiveConstructor {
   *** constructPrimitive(...);
}

-keep class com.google.crypto.tink.internal.PrimitiveFactory
-keepclassmembers class com.google.crypto.tink.internal.PrimitiveFactory {
   <init>(...);
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.internal.PrimitiveFactory
-keepclassmembers class com.google.crypto.tink.internal.PrimitiveFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.internal.PrimitiveRegistry$Builder
-keepclassmembers class com.google.crypto.tink.internal.PrimitiveRegistry$Builder {
   *** build(...);
   *** registerPrimitiveConstructor(...);
}

-keep class com.google.crypto.tink.internal.PrimitiveRegistry
-keepclassmembers class com.google.crypto.tink.internal.PrimitiveRegistry {
   *** builder(...);
   *** builder(...);
   *** getInputPrimitiveClass(...);
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.internal.ProtoKeySerialization
-keepclassmembers class com.google.crypto.tink.internal.ProtoKeySerialization {
   *** getIdRequirementOrNull(...);
   *** getKeyMaterialType(...);
   *** getObjectIdentifier(...);
   *** getOutputPrefixType(...);
   *** getTypeUrl(...);
   *** getValue(...);
   *** create(...);
}

-keep class com.google.crypto.tink.internal.ProtoParametersSerialization
-keepclassmembers class com.google.crypto.tink.internal.ProtoParametersSerialization {
   *** getKeyTemplate(...);
   *** getObjectIdentifier(...);
   *** checkedCreate(...);
   *** create(...);
   *** create(...);
}

-keep class com.google.crypto.tink.internal.Random
-keepclassmembers class com.google.crypto.tink.internal.Random {
   *** randBytes(...);
   *** randInt(...);
   *** randInt(...);
   *** validateUsesConscrypt(...);
}

-keep class com.google.crypto.tink.internal.RegistryConfiguration
-keepclassmembers class com.google.crypto.tink.internal.RegistryConfiguration {
   *** createFromPrimitiveRegistry(...);
   *** get(...);
   *** getInputPrimitiveClass(...);
   *** getLegacyPrimitive(...);
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.internal.SerializationRegistry$Builder
-keepclassmembers class com.google.crypto.tink.internal.SerializationRegistry$Builder {
   <init>(...);
   <init>(...);
   *** build(...);
   *** registerKeyParser(...);
   *** registerKeySerializer(...);
   *** registerParametersParser(...);
   *** registerParametersSerializer(...);
}

-keep class com.google.crypto.tink.internal.SerializationRegistry
-keepclassmembers class com.google.crypto.tink.internal.SerializationRegistry {
   *** hasParserForKey(...);
   *** hasParserForParameters(...);
   *** hasSerializerForKey(...);
   *** hasSerializerForParameters(...);
   *** parseKey(...);
   *** parseParameters(...);
   *** serializeKey(...);
   *** serializeParameters(...);
}

-keep class com.google.crypto.tink.internal.TinkBugException$ThrowingRunnable
-keepclassmembers class com.google.crypto.tink.internal.TinkBugException$ThrowingRunnable {
}

-keep class com.google.crypto.tink.internal.TinkBugException$ThrowingSupplier
-keepclassmembers class com.google.crypto.tink.internal.TinkBugException$ThrowingSupplier {
}

-keep class com.google.crypto.tink.internal.TinkBugException
-keepclassmembers class com.google.crypto.tink.internal.TinkBugException {
   <init>(...);
   <init>(...);
   <init>(...);
   *** exceptionIsBug(...);
   *** exceptionIsBug(...);
}

-keep class com.google.crypto.tink.internal.Util
-keepclassmembers class com.google.crypto.tink.internal.Util {
   *** getAndroidApiLevel(...);
   *** isAndroid(...);
   *** checkedToBytesFromPrintableAscii(...);
   *** isPrefix(...);
   *** randKeyId(...);
   *** readIntoSecretBytes(...);
   *** toBytesFromPrintableAscii(...);
}

-keep class com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder
-keepclassmembers class com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder {
   <init>(...);
   *** build(...);
   *** doNotUseKeystore(...);
   *** withKeyTemplate(...);
   *** withKeyTemplate(...);
   *** withMasterKeyUri(...);
   *** withSharedPref(...);
}

-keep class com.google.crypto.tink.integration.android.AndroidKeysetManager
-keepclassmembers class com.google.crypto.tink.integration.android.AndroidKeysetManager {
   *** isUsingKeystore(...);
   *** getKeysetHandle(...);
   *** add(...);
   *** add(...);
   *** delete(...);
   *** destroy(...);
   *** disable(...);
   *** enable(...);
   *** promote(...);
   *** rotate(...);
   *** setPrimary(...);
}

-keep class com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm
-keepclassmembers class com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm {
   <init>(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder
-keepclassmembers class com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder {
   <init>(...);
   *** build(...);
   *** setKeyUri(...);
}

-keep class com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient
-keepclassmembers class com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient {
   <init>(...);
   <init>(...);
   *** deleteKey(...);
   *** doesSupport(...);
   *** generateNewAeadKey(...);
   *** getAead(...);
   *** getOrGenerateNewAeadKey(...);
   *** withCredentials(...);
   *** withDefaultCredentials(...);
}

-keep class com.google.crypto.tink.integration.android.SharedPrefKeysetReader
-keepclassmembers class com.google.crypto.tink.integration.android.SharedPrefKeysetReader {
   <init>(...);
   *** read(...);
   *** readEncrypted(...);
}

-keep class com.google.crypto.tink.integration.android.SharedPrefKeysetWriter
-keepclassmembers class com.google.crypto.tink.integration.android.SharedPrefKeysetWriter {
   <init>(...);
   *** write(...);
   *** write(...);
}

-keep class com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager
-keepclassmembers class com.google.crypto.tink.hybrid.EciesAeadHkdfPrivateKeyManager {
   *** eciesP256HkdfHmacSha256Aes128CtrHmacSha256Template(...);
   *** eciesP256HkdfHmacSha256Aes128GcmTemplate(...);
   *** rawEciesP256HkdfHmacSha256Aes128CtrHmacSha256CompressedTemplate(...);
   *** rawEciesP256HkdfHmacSha256Aes128GcmCompressedTemplate(...);
   *** registerPair(...);
}

-keep class com.google.crypto.tink.hybrid.EciesParameters$Builder
-keepclassmembers class com.google.crypto.tink.hybrid.EciesParameters$Builder {
   *** build(...);
   *** setCurveType(...);
   *** setDemParameters(...);
   *** setHashType(...);
   *** setNistCurvePointFormat(...);
   *** setSalt(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.hybrid.EciesParameters$CurveType
-keepclassmembers class com.google.crypto.tink.hybrid.EciesParameters$CurveType {
}

-keep class com.google.crypto.tink.hybrid.EciesParameters$HashType
-keepclassmembers class com.google.crypto.tink.hybrid.EciesParameters$HashType {
}

-keep class com.google.crypto.tink.hybrid.EciesParameters$PointFormat
-keepclassmembers class com.google.crypto.tink.hybrid.EciesParameters$PointFormat {
}

-keep class com.google.crypto.tink.hybrid.EciesParameters$Variant
-keepclassmembers class com.google.crypto.tink.hybrid.EciesParameters$Variant {
}

-keep class com.google.crypto.tink.hybrid.EciesParameters
-keepclassmembers class com.google.crypto.tink.hybrid.EciesParameters {
   *** getDemParameters(...);
   *** hasIdRequirement(...);
   *** getNistCurvePointFormat(...);
   *** getSalt(...);
   *** builder(...);
   *** getCurveType(...);
   *** getHashType(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.hybrid.EciesPrivateKey
-keepclassmembers class com.google.crypto.tink.hybrid.EciesPrivateKey {
   *** getNistPrivateKeyValue(...);
   *** getPublicKey(...);
   *** getX25519PrivateKeyBytes(...);
   *** createForCurveX25519(...);
   *** createForNistCurve(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.hybrid.EciesPublicKey
-keepclassmembers class com.google.crypto.tink.hybrid.EciesPublicKey {
   *** getIdRequirementOrNull(...);
   *** getNistCurvePoint(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getX25519CurvePointBytes(...);
   *** createForCurveX25519(...);
   *** createForNistCurve(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.hybrid.HpkeParameters$Builder
-keepclassmembers class com.google.crypto.tink.hybrid.HpkeParameters$Builder {
   *** build(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.hybrid.HpkeParameters$Variant
-keepclassmembers class com.google.crypto.tink.hybrid.HpkeParameters$Variant {
}

-keep class com.google.crypto.tink.hybrid.HpkeParameters
-keepclassmembers class com.google.crypto.tink.hybrid.HpkeParameters {
   *** hasIdRequirement(...);
   *** builder(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.hybrid.HpkePrivateKey
-keepclassmembers class com.google.crypto.tink.hybrid.HpkePrivateKey {
   *** getPrivateKeyBytes(...);
   *** getPublicKey(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.hybrid.HpkeProtoSerialization
-keepclassmembers class com.google.crypto.tink.hybrid.HpkeProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.hybrid.HpkePublicKey
-keepclassmembers class com.google.crypto.tink.hybrid.HpkePublicKey {
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getPublicKeyBytes(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.hybrid.HybridConfig
-keepclassmembers class com.google.crypto.tink.hybrid.HybridConfig {
   *** init(...);
   *** register(...);
}

-keep class com.google.crypto.tink.hybrid.HybridDecryptConfig
-keepclassmembers class com.google.crypto.tink.hybrid.HybridDecryptConfig {
   *** registerStandardKeyTypes(...);
}

-keep class com.google.crypto.tink.hybrid.HybridDecryptFactory
-keepclassmembers class com.google.crypto.tink.hybrid.HybridDecryptFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.hybrid.HybridDecryptWrapper
-keepclassmembers class com.google.crypto.tink.hybrid.HybridDecryptWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.hybrid.HybridEncryptConfig
-keepclassmembers class com.google.crypto.tink.hybrid.HybridEncryptConfig {
   *** registerStandardKeyTypes(...);
}

-keep class com.google.crypto.tink.hybrid.HybridEncryptFactory
-keepclassmembers class com.google.crypto.tink.hybrid.HybridEncryptFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.hybrid.HybridEncryptWrapper
-keepclassmembers class com.google.crypto.tink.hybrid.HybridEncryptWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.hybrid.HybridKeyTemplates
-keepclassmembers class com.google.crypto.tink.hybrid.HybridKeyTemplates {
   *** createEciesAeadHkdfKeyTemplate(...);
   *** createEciesAeadHkdfParams(...);
}

-keep class com.google.crypto.tink.hybrid.HybridParameters
-keepclassmembers class com.google.crypto.tink.hybrid.HybridParameters {
   <init>(...);
}

-keep class com.google.crypto.tink.hybrid.HybridParameters
-keepclassmembers class com.google.crypto.tink.hybrid.HybridParameters {
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.hybrid.HybridPrivateKey
-keepclassmembers class com.google.crypto.tink.hybrid.HybridPrivateKey {
   <init>(...);
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getPublicKey(...);
}

-keep class com.google.crypto.tink.hybrid.HybridPrivateKey
-keepclassmembers class com.google.crypto.tink.hybrid.HybridPrivateKey {
   *** getPublicKey(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.hybrid.HybridPublicKey
-keepclassmembers class com.google.crypto.tink.hybrid.HybridPublicKey {
   <init>(...);
   *** getOutputPrefix(...);
}

-keep class com.google.crypto.tink.hybrid.HybridPublicKey
-keepclassmembers class com.google.crypto.tink.hybrid.HybridPublicKey {
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.hybrid.PredefinedHybridParameters
-keepclassmembers class com.google.crypto.tink.hybrid.PredefinedHybridParameters {
}

-keep class com.google.crypto.tink.hybrid.subtle.RsaKemHybridDecrypt
-keepclassmembers class com.google.crypto.tink.hybrid.subtle.RsaKemHybridDecrypt {
   <init>(...);
   *** decrypt(...);
}

-keep class com.google.crypto.tink.hybrid.subtle.RsaKemHybridEncrypt
-keepclassmembers class com.google.crypto.tink.hybrid.subtle.RsaKemHybridEncrypt {
   <init>(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.hybrid.internal.EciesDemHelper$Dem
-keepclassmembers class com.google.crypto.tink.hybrid.internal.EciesDemHelper$Dem {
}

-keep class com.google.crypto.tink.hybrid.internal.EciesDemHelper
-keepclassmembers class com.google.crypto.tink.hybrid.internal.EciesDemHelper {
   *** getDem(...);
}

-keep class com.google.crypto.tink.hybrid.internal.EciesProtoSerialization
-keepclassmembers class com.google.crypto.tink.hybrid.internal.EciesProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeContext
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeContext {
   *** createAuthRecipientContext(...);
   *** createAuthSenderContext(...);
   *** createRecipientContext(...);
   *** getEncapsulatedKey(...);
   *** open(...);
   *** seal(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeDecrypt
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeDecrypt {
   *** create(...);
   *** decrypt(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeEncrypt
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeEncrypt {
   *** create(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeKemKeyFactory
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeKemKeyFactory {
   *** createPrivate(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkePrimitiveFactory
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkePrimitiveFactory {
   *** createAead(...);
   *** createKdf(...);
   *** createKem(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkePrivateKeyManager
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkePrivateKeyManager {
   *** registerPair(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkePublicKeyManager
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkePublicKeyManager {
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeUtil
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeUtil {
   *** intToByteArray(...);
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeAead
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeAead {
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeKdf
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeKdf {
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeKem
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeKem {
}

-keep class com.google.crypto.tink.hybrid.internal.HpkeKemPrivateKey
-keepclassmembers class com.google.crypto.tink.hybrid.internal.HpkeKemPrivateKey {
}

-keep class com.google.crypto.tink.hybrid.internal.LegacyFullHybridDecrypt
-keepclassmembers class com.google.crypto.tink.hybrid.internal.LegacyFullHybridDecrypt {
   *** create(...);
   *** decrypt(...);
}

-keep class com.google.crypto.tink.hybrid.internal.LegacyFullHybridEncrypt
-keepclassmembers class com.google.crypto.tink.hybrid.internal.LegacyFullHybridEncrypt {
   *** create(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.daead.AesSivKey$Builder
-keepclassmembers class com.google.crypto.tink.daead.AesSivKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.daead.AesSivKey
-keepclassmembers class com.google.crypto.tink.daead.AesSivKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.daead.AesSivKeyManager
-keepclassmembers class com.google.crypto.tink.daead.AesSivKeyManager {
   *** aes256SivTemplate(...);
   *** rawAes256SivTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.daead.AesSivParameters$Builder
-keepclassmembers class com.google.crypto.tink.daead.AesSivParameters$Builder {
   *** build(...);
   *** setKeySizeBytes(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.daead.AesSivParameters$Variant
-keepclassmembers class com.google.crypto.tink.daead.AesSivParameters$Variant {
}

-keep class com.google.crypto.tink.daead.AesSivParameters
-keepclassmembers class com.google.crypto.tink.daead.AesSivParameters {
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** builder(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadConfig
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadConfig {
   *** init(...);
   *** register(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadFactory
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadKey
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadKey {
   <init>(...);
   *** getOutputPrefix(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadKey
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadKey {
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadKeyTemplates
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadKeyTemplates {
   *** createAesSivKeyTemplate(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadParameters
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadParameters {
   <init>(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadParameters
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadParameters {
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.daead.DeterministicAeadWrapper
-keepclassmembers class com.google.crypto.tink.daead.DeterministicAeadWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.daead.PredefinedDeterministicAeadParameters
-keepclassmembers class com.google.crypto.tink.daead.PredefinedDeterministicAeadParameters {
}

-keep class com.google.crypto.tink.daead.internal.AesSivProtoSerialization
-keepclassmembers class com.google.crypto.tink.daead.internal.AesSivProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.daead.internal.LegacyFullDeterministicAead
-keepclassmembers class com.google.crypto.tink.daead.internal.LegacyFullDeterministicAead {
   *** create(...);
   *** decryptDeterministically(...);
   *** encryptDeterministically(...);
}

-keep class com.google.crypto.tink.config.TinkConfig
-keepclassmembers class com.google.crypto.tink.config.TinkConfig {
   *** init(...);
   *** register(...);
}

-keep class com.google.crypto.tink.config.TinkFips
-keepclassmembers class com.google.crypto.tink.config.TinkFips {
   *** restrictToFips(...);
   *** useOnlyFips(...);
}

-keep class com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility
-keepclassmembers class com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility {
   *** isCompatible(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility
-keepclassmembers class com.google.crypto.tink.config.internal.TinkFipsUtil$AlgorithmFipsCompatibility {
   *** isCompatible(...);
}

-keep class com.google.crypto.tink.config.internal.TinkFipsUtil
-keepclassmembers class com.google.crypto.tink.config.internal.TinkFipsUtil {
   *** fipsModuleAvailable(...);
   *** setFipsRestricted(...);
   *** unsetFipsRestricted(...);
   *** useOnlyFips(...);
}

-keep class com.google.crypto.tink.annotations.Alpha
-keepclassmembers class com.google.crypto.tink.annotations.Alpha {
}

-keep class com.google.crypto.tink.aead.AeadConfig
-keepclassmembers class com.google.crypto.tink.aead.AeadConfig {
   *** init(...);
   *** register(...);
   *** registerStandardKeyTypes(...);
}

-keep class com.google.crypto.tink.aead.AeadFactory
-keepclassmembers class com.google.crypto.tink.aead.AeadFactory {
   *** getPrimitive(...);
}

-keep class com.google.crypto.tink.aead.AeadKey
-keepclassmembers class com.google.crypto.tink.aead.AeadKey {
   <init>(...);
   *** getOutputPrefix(...);
}

-keep class com.google.crypto.tink.aead.AeadKey
-keepclassmembers class com.google.crypto.tink.aead.AeadKey {
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** getIdRequirementOrNull(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.AeadKeyTemplates
-keepclassmembers class com.google.crypto.tink.aead.AeadKeyTemplates {
   *** createAesCtrHmacAeadKeyTemplate(...);
   *** createAesEaxKeyTemplate(...);
   *** createAesGcmKeyTemplate(...);
   *** createKmsEnvelopeAeadKeyTemplate(...);
}

-keep class com.google.crypto.tink.aead.AeadParameters
-keepclassmembers class com.google.crypto.tink.aead.AeadParameters {
   <init>(...);
}

-keep class com.google.crypto.tink.aead.AeadParameters
-keepclassmembers class com.google.crypto.tink.aead.AeadParameters {
   *** hasIdRequirement(...);
}

-keep class com.google.crypto.tink.aead.AeadWrapper
-keepclassmembers class com.google.crypto.tink.aead.AeadWrapper {
   *** getInputPrimitiveClass(...);
   *** getPrimitiveClass(...);
   *** register(...);
   *** registerToInternalPrimitiveRegistry(...);
}

-keep class com.google.crypto.tink.aead.AesCtrHmacAeadKey$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesCtrHmacAeadKey$Builder {
   *** build(...);
   *** setAesKeyBytes(...);
   *** setHmacKeyBytes(...);
   *** setIdRequirement(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.aead.AesCtrHmacAeadKey
-keepclassmembers class com.google.crypto.tink.aead.AesCtrHmacAeadKey {
   *** getAesKeyBytes(...);
   *** getHmacKeyBytes(...);
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager
-keepclassmembers class com.google.crypto.tink.aead.AesCtrHmacAeadKeyManager {
   *** aes128CtrHmacSha256Template(...);
   *** aes256CtrHmacSha256Template(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.AesCtrHmacAeadParameters$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesCtrHmacAeadParameters$Builder {
   *** build(...);
   *** setAesKeySizeBytes(...);
   *** setHashType(...);
   *** setHmacKeySizeBytes(...);
   *** setIvSizeBytes(...);
   *** setTagSizeBytes(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.aead.AesCtrHmacAeadParameters$HashType
-keepclassmembers class com.google.crypto.tink.aead.AesCtrHmacAeadParameters$HashType {
}

-keep class com.google.crypto.tink.aead.AesCtrHmacAeadParameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.AesCtrHmacAeadParameters$Variant {
}

-keep class com.google.crypto.tink.aead.AesCtrHmacAeadParameters
-keepclassmembers class com.google.crypto.tink.aead.AesCtrHmacAeadParameters {
   *** getAesKeySizeBytes(...);
   *** getCiphertextOverheadSizeBytes(...);
   *** hasIdRequirement(...);
   *** getHmacKeySizeBytes(...);
   *** getIvSizeBytes(...);
   *** getTagSizeBytes(...);
   *** builder(...);
   *** getHashType(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.AesEaxKey$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesEaxKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.aead.AesEaxKey
-keepclassmembers class com.google.crypto.tink.aead.AesEaxKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.AesEaxKeyManager
-keepclassmembers class com.google.crypto.tink.aead.AesEaxKeyManager {
   *** aes128EaxTemplate(...);
   *** aes256EaxTemplate(...);
   *** rawAes128EaxTemplate(...);
   *** rawAes256EaxTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.AesEaxParameters$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesEaxParameters$Builder {
   *** build(...);
   *** setIvSizeBytes(...);
   *** setKeySizeBytes(...);
   *** setTagSizeBytes(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.aead.AesEaxParameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.AesEaxParameters$Variant {
}

-keep class com.google.crypto.tink.aead.AesEaxParameters
-keepclassmembers class com.google.crypto.tink.aead.AesEaxParameters {
   *** hasIdRequirement(...);
   *** getIvSizeBytes(...);
   *** getKeySizeBytes(...);
   *** getTagSizeBytes(...);
   *** builder(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.AesGcmKey$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesGcmKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.aead.AesGcmKey
-keepclassmembers class com.google.crypto.tink.aead.AesGcmKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.AesGcmKeyManager
-keepclassmembers class com.google.crypto.tink.aead.AesGcmKeyManager {
   *** aes128GcmTemplate(...);
   *** aes256GcmTemplate(...);
   *** rawAes128GcmTemplate(...);
   *** rawAes256GcmTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.AesGcmParameters$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesGcmParameters$Builder {
   *** build(...);
   *** setIvSizeBytes(...);
   *** setKeySizeBytes(...);
   *** setTagSizeBytes(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.aead.AesGcmParameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.AesGcmParameters$Variant {
}

-keep class com.google.crypto.tink.aead.AesGcmParameters
-keepclassmembers class com.google.crypto.tink.aead.AesGcmParameters {
   *** hasIdRequirement(...);
   *** getIvSizeBytes(...);
   *** getKeySizeBytes(...);
   *** getTagSizeBytes(...);
   *** builder(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.AesGcmSivKey$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesGcmSivKey$Builder {
   *** build(...);
   *** setIdRequirement(...);
   *** setKeyBytes(...);
   *** setParameters(...);
}

-keep class com.google.crypto.tink.aead.AesGcmSivKey
-keepclassmembers class com.google.crypto.tink.aead.AesGcmSivKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** builder(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.AesGcmSivKeyManager
-keepclassmembers class com.google.crypto.tink.aead.AesGcmSivKeyManager {
   *** aes128GcmSivTemplate(...);
   *** aes256GcmSivTemplate(...);
   *** rawAes128GcmSivTemplate(...);
   *** rawAes256GcmSivTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.AesGcmSivParameters$Builder
-keepclassmembers class com.google.crypto.tink.aead.AesGcmSivParameters$Builder {
   *** build(...);
   *** setKeySizeBytes(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.aead.AesGcmSivParameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.AesGcmSivParameters$Variant {
}

-keep class com.google.crypto.tink.aead.AesGcmSivParameters
-keepclassmembers class com.google.crypto.tink.aead.AesGcmSivParameters {
   *** hasIdRequirement(...);
   *** getKeySizeBytes(...);
   *** builder(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.ChaCha20Poly1305Key
-keepclassmembers class com.google.crypto.tink.aead.ChaCha20Poly1305Key {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** create(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager
-keepclassmembers class com.google.crypto.tink.aead.ChaCha20Poly1305KeyManager {
   *** chaCha20Poly1305Template(...);
   *** rawChaCha20Poly1305Template(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.ChaCha20Poly1305Parameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.ChaCha20Poly1305Parameters$Variant {
}

-keep class com.google.crypto.tink.aead.ChaCha20Poly1305Parameters
-keepclassmembers class com.google.crypto.tink.aead.ChaCha20Poly1305Parameters {
   *** hasIdRequirement(...);
   *** create(...);
   *** create(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.KmsAeadKeyManager
-keepclassmembers class com.google.crypto.tink.aead.KmsAeadKeyManager {
   *** createKeyTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.KmsEnvelopeAead
-keepclassmembers class com.google.crypto.tink.aead.KmsEnvelopeAead {
   <init>(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
   *** isSupportedDekKeyType(...);
}

-keep class com.google.crypto.tink.aead.KmsEnvelopeAeadKeyManager
-keepclassmembers class com.google.crypto.tink.aead.KmsEnvelopeAeadKeyManager {
   *** createKeyTemplate(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.LegacyKmsAeadKey
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsAeadKey {
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** create(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.LegacyKmsAeadParameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsAeadParameters$Variant {
}

-keep class com.google.crypto.tink.aead.LegacyKmsAeadParameters
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsAeadParameters {
   *** hasIdRequirement(...);
   *** create(...);
   *** create(...);
   *** keyUri(...);
   *** variant(...);
}

-keep class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadKey
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadKey {
   *** getIdRequirementOrNull(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** create(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters$Builder
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters$Builder {
   *** build(...);
   *** setDekParametersForNewKeys(...);
   *** setDekParsingStrategy(...);
   *** setKekUri(...);
   *** setVariant(...);
}

-keep class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters$DekParsingStrategy
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters$DekParsingStrategy {
}

-keep class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters$Variant {
}

-keep class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadParameters {
   *** getDekParametersForNewKeys(...);
   *** hasIdRequirement(...);
   *** getKekUri(...);
   *** builder(...);
   *** getDekParsingStrategy(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.LegacyKmsEnvelopeAeadProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.PredefinedAeadParameters
-keepclassmembers class com.google.crypto.tink.aead.PredefinedAeadParameters {
}

-keep class com.google.crypto.tink.aead.XAesGcmKey
-keepclassmembers class com.google.crypto.tink.aead.XAesGcmKey {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.XAesGcmKeyManager
-keepclassmembers class com.google.crypto.tink.aead.XAesGcmKeyManager {
   *** register(...);
}

-keep class com.google.crypto.tink.aead.XAesGcmParameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.XAesGcmParameters$Variant {
}

-keep class com.google.crypto.tink.aead.XAesGcmParameters
-keepclassmembers class com.google.crypto.tink.aead.XAesGcmParameters {
   *** hasIdRequirement(...);
   *** getSaltSizeBytes(...);
   *** create(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.XChaCha20Poly1305Key
-keepclassmembers class com.google.crypto.tink.aead.XChaCha20Poly1305Key {
   *** getIdRequirementOrNull(...);
   *** getKeyBytes(...);
   *** getOutputPrefix(...);
   *** getParameters(...);
   *** create(...);
   *** create(...);
   *** equalsKey(...);
}

-keep class com.google.crypto.tink.aead.XChaCha20Poly1305KeyManager
-keepclassmembers class com.google.crypto.tink.aead.XChaCha20Poly1305KeyManager {
   *** rawXChaCha20Poly1305Template(...);
   *** register(...);
   *** xChaCha20Poly1305Template(...);
}

-keep class com.google.crypto.tink.aead.XChaCha20Poly1305Parameters$Variant
-keepclassmembers class com.google.crypto.tink.aead.XChaCha20Poly1305Parameters$Variant {
}

-keep class com.google.crypto.tink.aead.XChaCha20Poly1305Parameters
-keepclassmembers class com.google.crypto.tink.aead.XChaCha20Poly1305Parameters {
   *** hasIdRequirement(...);
   *** create(...);
   *** create(...);
   *** getVariant(...);
}

-keep class com.google.crypto.tink.aead.subtle.AesGcmFactory
-keepclassmembers class com.google.crypto.tink.aead.subtle.AesGcmFactory {
   <init>(...);
   *** getKeySizeInBytes(...);
   *** createAead(...);
}

-keep class com.google.crypto.tink.aead.subtle.AesGcmSiv
-keepclassmembers class com.google.crypto.tink.aead.subtle.AesGcmSiv {
   <init>(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.subtle.AeadFactory
-keepclassmembers class com.google.crypto.tink.aead.subtle.AeadFactory {
}

-keep class com.google.crypto.tink.aead.internal.AesCtrHmacAeadProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.internal.AesCtrHmacAeadProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.internal.AesEaxProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.internal.AesEaxProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.internal.AesGcmJceUtil
-keepclassmembers class com.google.crypto.tink.aead.internal.AesGcmJceUtil {
   *** getThreadLocalCipher(...);
   *** getParams(...);
   *** getParams(...);
   *** getSecretKey(...);
}

-keep class com.google.crypto.tink.aead.internal.AesGcmProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.internal.AesGcmProtoSerialization {
   *** register(...);
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.internal.AesGcmSivProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.internal.AesGcmSivProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.internal.ChaCha20Poly1305Jce
-keepclassmembers class com.google.crypto.tink.aead.internal.ChaCha20Poly1305Jce {
   *** isSupported(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.ChaCha20Poly1305ProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.internal.ChaCha20Poly1305ProtoSerialization {
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.internal.InsecureNonceAesGcmJce
-keepclassmembers class com.google.crypto.tink.aead.internal.InsecureNonceAesGcmJce {
   <init>(...);
   *** decrypt(...);
   *** decrypt(...);
   *** encrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.InsecureNonceChaCha20
-keepclassmembers class com.google.crypto.tink.aead.internal.InsecureNonceChaCha20 {
   <init>(...);
   *** createInitialState(...);
   *** decrypt(...);
   *** decrypt(...);
   *** encrypt(...);
   *** encrypt(...);
   *** nonceSizeInBytes(...);
}

-keep class com.google.crypto.tink.aead.internal.InsecureNonceChaCha20Poly1305
-keepclassmembers class com.google.crypto.tink.aead.internal.InsecureNonceChaCha20Poly1305 {
   <init>(...);
   *** decrypt(...);
   *** decrypt(...);
   *** encrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.InsecureNonceChaCha20Poly1305Jce
-keepclassmembers class com.google.crypto.tink.aead.internal.InsecureNonceChaCha20Poly1305Jce {
   *** isSupported(...);
   *** create(...);
   *** decrypt(...);
   *** decrypt(...);
   *** encrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.InsecureNonceXChaCha20
-keepclassmembers class com.google.crypto.tink.aead.internal.InsecureNonceXChaCha20 {
   <init>(...);
   *** decrypt(...);
   *** decrypt(...);
   *** encrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.InsecureNonceXChaCha20Poly1305
-keepclassmembers class com.google.crypto.tink.aead.internal.InsecureNonceXChaCha20Poly1305 {
   <init>(...);
   *** decrypt(...);
   *** decrypt(...);
   *** encrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.LegacyFullAead
-keepclassmembers class com.google.crypto.tink.aead.internal.LegacyFullAead {
   *** create(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.Poly1305
-keepclassmembers class com.google.crypto.tink.aead.internal.Poly1305 {
   *** computeMac(...);
   *** verifyMac(...);
}

-keep class com.google.crypto.tink.aead.internal.XAesGcm
-keepclassmembers class com.google.crypto.tink.aead.internal.XAesGcm {
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.XAesGcmProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.internal.XAesGcmProtoSerialization {
   *** register(...);
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.aead.internal.XChaCha20Poly1305Jce
-keepclassmembers class com.google.crypto.tink.aead.internal.XChaCha20Poly1305Jce {
   *** isSupported(...);
   *** create(...);
   *** decrypt(...);
   *** encrypt(...);
}

-keep class com.google.crypto.tink.aead.internal.XChaCha20Poly1305ProtoSerialization
-keepclassmembers class com.google.crypto.tink.aead.internal.XChaCha20Poly1305ProtoSerialization {
   *** register(...);
   *** register(...);
   *** register(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$MapAdapter$Converter
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$MapAdapter$Converter {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$MapAdapter
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$MapAdapter {
   *** entrySet(...);
   <init>(...);
   *** newEnumConverter(...);
   *** put(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$BooleanList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$BooleanList {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$DoubleList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$DoubleList {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$EnumLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$EnumLite {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$EnumLiteMap {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$EnumVerifier {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$FloatList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$FloatList {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$IntList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$IntList {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$ListAdapter$Converter
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$ListAdapter$Converter {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$ListAdapter
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$ListAdapter {
   <init>(...);
   *** get(...);
   *** size(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$LongList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$LongList {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal$ProtobufList {
}

-keep class com.google.crypto.tink.shaded.protobuf.Internal
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Internal {
   *** byteArrayDefaultValue(...);
   *** byteBufferDefaultValue(...);
   *** bytesDefaultValue(...);
   *** copyByteBuffer(...);
   *** equals(...);
   *** equalsByteBuffer(...);
   *** equalsByteBuffer(...);
   *** getDefaultInstance(...);
   *** hashBoolean(...);
   *** hashCode(...);
   *** hashCode(...);
   *** hashCodeByteBuffer(...);
   *** hashCodeByteBuffer(...);
   *** hashEnum(...);
   *** hashEnumList(...);
   *** hashLong(...);
   *** isValidUtf8(...);
   *** isValidUtf8(...);
   *** stringDefaultValue(...);
   *** toByteArray(...);
   *** toStringUtf8(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.LazyStringArrayList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.LazyStringArrayList {
   *** get(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isModifiable(...);
   *** getUnderlyingElements(...);
   *** getUnmodifiableView(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** addAllByteArray(...);
   *** addAllByteString(...);
   *** asByteArrayList(...);
   *** asByteStringList(...);
   *** clear(...);
   *** emptyList(...);
   *** equals(...);
   *** getByteArray(...);
   *** getByteString(...);
   *** getRaw(...);
   *** hashCode(...);
   *** mergeFrom(...);
   *** mutableCopyWithCapacity(...);
   *** remove(...);
   *** removeAll(...);
   *** retainAll(...);
   *** set(...);
   *** set(...);
   *** set(...);
   *** size(...);
   *** ensureIsMutable(...);
   *** makeImmutable(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.MapFieldLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.MapFieldLite {
   *** entrySet(...);
   *** isMutable(...);
   *** emptyMapField(...);
   *** makeImmutable(...);
   *** mergeFrom(...);
   *** mutableCopy(...);
   *** put(...);
   *** put(...);
   *** putAll(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UnmodifiableLazyStringList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UnmodifiableLazyStringList {
   *** get(...);
   <init>(...);
   *** getUnderlyingElements(...);
   *** getUnmodifiableView(...);
   *** add(...);
   *** add(...);
   *** addAllByteArray(...);
   *** addAllByteString(...);
   *** asByteArrayList(...);
   *** asByteStringList(...);
   *** getByteArray(...);
   *** getByteString(...);
   *** getRaw(...);
   *** mergeFrom(...);
   *** set(...);
   *** set(...);
   *** size(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$LimitedInputStream
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder$LimitedInputStream {
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder {
   <init>(...);
   *** addAll(...);
   *** addAll(...);
   *** clone(...);
   *** internalMergeFrom(...);
   *** mergeDelimitedFrom(...);
   *** mergeDelimitedFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
   *** newUninitializedMessageException(...);
   *** getDefaultInstanceForType(...);
   *** isInitialized(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$Builder {
   *** clone(...);
   *** internalMergeFrom(...);
   *** mergeFrom(...);
   *** getDefaultInstanceForType(...);
   *** isInitialized(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$InternalOneOfEnum
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite$InternalOneOfEnum {
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite {
   <init>(...);
   *** addAll(...);
   *** addAll(...);
   *** checkByteStringIsUtf8(...);
   *** toByteArray(...);
   *** toByteString(...);
   *** writeDelimitedTo(...);
   *** writeTo(...);
   *** writeTo(...);
   *** getParserForType(...);
   *** getSerializedSize(...);
   *** getDefaultInstanceForType(...);
   *** isInitialized(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractMessageLite {
   *** getParserForType(...);
   *** getSerializedSize(...);
   *** writeTo(...);
   *** getDefaultInstanceForType(...);
   *** isInitialized(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractParser
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractParser {
   <init>(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parsePartialDelimitedFrom(...);
   *** parsePartialDelimitedFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
   *** parsePartialFrom(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AbstractParser
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AbstractParser {
}

-keep class com.google.crypto.tink.shaded.protobuf.Any$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Any$Builder {
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** getValue(...);
   *** clearTypeUrl(...);
   *** clearValue(...);
   *** setTypeUrl(...);
   *** setTypeUrlBytes(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Any
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Any {
   *** getDefaultInstance(...);
   *** getTypeUrl(...);
   *** getTypeUrlBytes(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AnyProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AnyProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Api$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Api$Builder {
   *** hasSourceContext(...);
   *** getMethodsCount(...);
   *** getMethodsList(...);
   *** getMixinsCount(...);
   *** getMixinsList(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getSourceContext(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** getVersion(...);
   *** getVersionBytes(...);
   *** addAllMethods(...);
   *** addAllMixins(...);
   *** addAllOptions(...);
   *** addMethods(...);
   *** addMethods(...);
   *** addMethods(...);
   *** addMethods(...);
   *** addMixins(...);
   *** addMixins(...);
   *** addMixins(...);
   *** addMixins(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** clearMethods(...);
   *** clearMixins(...);
   *** clearName(...);
   *** clearOptions(...);
   *** clearSourceContext(...);
   *** clearSyntax(...);
   *** clearVersion(...);
   *** getMethods(...);
   *** getMixins(...);
   *** getOptions(...);
   *** mergeSourceContext(...);
   *** removeMethods(...);
   *** removeMixins(...);
   *** removeOptions(...);
   *** setMethods(...);
   *** setMethods(...);
   *** setMixins(...);
   *** setMixins(...);
   *** setName(...);
   *** setNameBytes(...);
   *** setOptions(...);
   *** setOptions(...);
   *** setSourceContext(...);
   *** setSourceContext(...);
   *** setSyntax(...);
   *** setSyntaxValue(...);
   *** setVersion(...);
   *** setVersionBytes(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Api
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Api {
   *** getDefaultInstance(...);
   *** hasSourceContext(...);
   *** getMethodsCount(...);
   *** getMethodsList(...);
   *** getMethodsOrBuilderList(...);
   *** getMixinsCount(...);
   *** getMixinsList(...);
   *** getMixinsOrBuilderList(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getOptionsOrBuilderList(...);
   *** getSourceContext(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** getVersion(...);
   *** getVersionBytes(...);
   *** dynamicMethod(...);
   *** getMethods(...);
   *** getMethodsOrBuilder(...);
   *** getMixins(...);
   *** getMixinsOrBuilder(...);
   *** getOptions(...);
   *** getOptionsOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ApiProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ApiProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.BoolValue$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.BoolValue$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.BoolValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.BoolValue {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ByteOutput
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ByteOutput {
   <init>(...);
   *** write(...);
   *** write(...);
   *** write(...);
   *** writeLazy(...);
   *** writeLazy(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ByteOutput
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ByteOutput {
   *** writeLazy(...);
   *** writeLazy(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ByteString$ByteIterator
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ByteString$ByteIterator {
}

-keep class com.google.crypto.tink.shaded.protobuf.ByteString$Output
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ByteString$Output {
   *** reset(...);
   *** size(...);
   *** toByteString(...);
   *** write(...);
   *** writeTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ByteString
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ByteString {
   *** isBalanced(...);
   *** isEmpty(...);
   *** isValidUtf8(...);
   *** getTreeDepth(...);
   *** asReadOnlyByteBuffer(...);
   *** asReadOnlyByteBufferList(...);
   *** byteAt(...);
   *** concat(...);
   *** copyFrom(...);
   *** copyFrom(...);
   *** copyFrom(...);
   *** copyFrom(...);
   *** copyFrom(...);
   *** copyFrom(...);
   *** copyFrom(...);
   *** copyFromUtf8(...);
   *** copyTo(...);
   *** copyTo(...);
   *** copyTo(...);
   *** copyToInternal(...);
   *** empty(...);
   *** endsWith(...);
   *** equals(...);
   *** fromHex(...);
   *** hashCode(...);
   *** iterator(...);
   *** newCodedInput(...);
   *** newInput(...);
   *** newOutput(...);
   *** newOutput(...);
   *** partialHash(...);
   *** partialIsValidUtf8(...);
   *** peekCachedHashCode(...);
   *** readFrom(...);
   *** readFrom(...);
   *** readFrom(...);
   *** size(...);
   *** startsWith(...);
   *** substring(...);
   *** substring(...);
   *** toByteArray(...);
   *** toString(...);
   *** toString(...);
   *** toString(...);
   *** toStringInternal(...);
   *** toStringUtf8(...);
   *** unsignedLexicographicalComparator(...);
   *** writeTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ByteString
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ByteString {
   *** isBalanced(...);
   *** isValidUtf8(...);
   *** getTreeDepth(...);
   *** asReadOnlyByteBuffer(...);
   *** asReadOnlyByteBufferList(...);
   *** byteAt(...);
   *** copyTo(...);
   *** copyToInternal(...);
   *** equals(...);
   *** newCodedInput(...);
   *** newInput(...);
   *** partialHash(...);
   *** partialIsValidUtf8(...);
   *** size(...);
   *** substring(...);
   *** toStringInternal(...);
   *** writeTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.BytesValue$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.BytesValue$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.BytesValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.BytesValue {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.CodedInputStream
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.CodedInputStream {
   *** getBytesUntilLimit(...);
   *** isAtEnd(...);
   *** getLastTag(...);
   *** getTotalBytesRead(...);
   *** checkLastTagWas(...);
   *** checkRecursionLimit(...);
   *** decodeZigZag32(...);
   *** decodeZigZag64(...);
   *** enableAliasing(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** popLimit(...);
   *** pushLimit(...);
   *** readBool(...);
   *** readByteArray(...);
   *** readByteBuffer(...);
   *** readBytes(...);
   *** readDouble(...);
   *** readEnum(...);
   *** readFixed32(...);
   *** readFixed64(...);
   *** readFloat(...);
   *** readGroup(...);
   *** readGroup(...);
   *** readInt32(...);
   *** readInt64(...);
   *** readMessage(...);
   *** readMessage(...);
   *** readRawByte(...);
   *** readRawBytes(...);
   *** readRawLittleEndian32(...);
   *** readRawLittleEndian64(...);
   *** readRawVarint32(...);
   *** readRawVarint32(...);
   *** readRawVarint64(...);
   *** readSFixed32(...);
   *** readSFixed64(...);
   *** readSInt32(...);
   *** readSInt64(...);
   *** readString(...);
   *** readStringRequireUtf8(...);
   *** readTag(...);
   *** readUInt32(...);
   *** readUInt64(...);
   *** readUnknownGroup(...);
   *** resetSizeCounter(...);
   *** setRecursionLimit(...);
   *** setSizeLimit(...);
   *** skipField(...);
   *** skipField(...);
   *** skipMessage(...);
   *** skipMessage(...);
   *** skipRawBytes(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.CodedInputStream
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.CodedInputStream {
   *** getBytesUntilLimit(...);
   *** isAtEnd(...);
   *** getLastTag(...);
   *** getTotalBytesRead(...);
   *** checkLastTagWas(...);
   *** enableAliasing(...);
   *** popLimit(...);
   *** pushLimit(...);
   *** readBool(...);
   *** readByteArray(...);
   *** readByteBuffer(...);
   *** readBytes(...);
   *** readDouble(...);
   *** readEnum(...);
   *** readFixed32(...);
   *** readFixed64(...);
   *** readFloat(...);
   *** readGroup(...);
   *** readGroup(...);
   *** readInt32(...);
   *** readInt64(...);
   *** readMessage(...);
   *** readMessage(...);
   *** readRawByte(...);
   *** readRawBytes(...);
   *** readRawLittleEndian32(...);
   *** readRawLittleEndian64(...);
   *** readRawVarint32(...);
   *** readRawVarint64(...);
   *** readSFixed32(...);
   *** readSFixed64(...);
   *** readSInt32(...);
   *** readSInt64(...);
   *** readString(...);
   *** readStringRequireUtf8(...);
   *** readTag(...);
   *** readUInt32(...);
   *** readUInt64(...);
   *** readUnknownGroup(...);
   *** resetSizeCounter(...);
   *** skipField(...);
   *** skipField(...);
   *** skipMessage(...);
   *** skipMessage(...);
   *** skipRawBytes(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.CodedOutputStream$OutOfSpaceException
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.CodedOutputStream$OutOfSpaceException {
}

-keep class com.google.crypto.tink.shaded.protobuf.CodedOutputStream
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.CodedOutputStream {
   *** getTotalBytesWritten(...);
   *** checkNoSpaceLeft(...);
   *** computeBoolSize(...);
   *** computeBoolSizeNoTag(...);
   *** computeByteArraySize(...);
   *** computeByteArraySizeNoTag(...);
   *** computeByteBufferSize(...);
   *** computeByteBufferSizeNoTag(...);
   *** computeBytesSize(...);
   *** computeBytesSizeNoTag(...);
   *** computeDoubleSize(...);
   *** computeDoubleSizeNoTag(...);
   *** computeEnumSize(...);
   *** computeEnumSizeNoTag(...);
   *** computeFixed32Size(...);
   *** computeFixed32SizeNoTag(...);
   *** computeFixed64Size(...);
   *** computeFixed64SizeNoTag(...);
   *** computeFloatSize(...);
   *** computeFloatSizeNoTag(...);
   *** computeGroupSize(...);
   *** computeGroupSizeNoTag(...);
   *** computeInt32Size(...);
   *** computeInt32SizeNoTag(...);
   *** computeInt64Size(...);
   *** computeInt64SizeNoTag(...);
   *** computeLazyFieldMessageSetExtensionSize(...);
   *** computeLazyFieldSize(...);
   *** computeLazyFieldSizeNoTag(...);
   *** computeMessageSetExtensionSize(...);
   *** computeMessageSize(...);
   *** computeMessageSizeNoTag(...);
   *** computeRawMessageSetExtensionSize(...);
   *** computeRawVarint32Size(...);
   *** computeRawVarint64Size(...);
   *** computeSFixed32Size(...);
   *** computeSFixed32SizeNoTag(...);
   *** computeSFixed64Size(...);
   *** computeSFixed64SizeNoTag(...);
   *** computeSInt32Size(...);
   *** computeSInt32SizeNoTag(...);
   *** computeSInt64Size(...);
   *** computeSInt64SizeNoTag(...);
   *** computeStringSize(...);
   *** computeStringSizeNoTag(...);
   *** computeTagSize(...);
   *** computeUInt32Size(...);
   *** computeUInt32SizeNoTag(...);
   *** computeUInt64Size(...);
   *** computeUInt64SizeNoTag(...);
   *** encodeZigZag32(...);
   *** encodeZigZag64(...);
   *** flush(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** newInstance(...);
   *** spaceLeft(...);
   *** useDeterministicSerialization(...);
   *** write(...);
   *** write(...);
   *** write(...);
   *** writeBool(...);
   *** writeBoolNoTag(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArrayNoTag(...);
   *** writeByteBuffer(...);
   *** writeBytes(...);
   *** writeBytesNoTag(...);
   *** writeDouble(...);
   *** writeDoubleNoTag(...);
   *** writeEnum(...);
   *** writeEnumNoTag(...);
   *** writeFixed32(...);
   *** writeFixed32NoTag(...);
   *** writeFixed64(...);
   *** writeFixed64NoTag(...);
   *** writeFloat(...);
   *** writeFloatNoTag(...);
   *** writeGroup(...);
   *** writeGroupNoTag(...);
   *** writeInt32(...);
   *** writeInt32NoTag(...);
   *** writeInt64(...);
   *** writeInt64NoTag(...);
   *** writeLazy(...);
   *** writeLazy(...);
   *** writeMessage(...);
   *** writeMessageNoTag(...);
   *** writeMessageSetExtension(...);
   *** writeRawByte(...);
   *** writeRawByte(...);
   *** writeRawBytes(...);
   *** writeRawBytes(...);
   *** writeRawBytes(...);
   *** writeRawBytes(...);
   *** writeRawLittleEndian32(...);
   *** writeRawLittleEndian64(...);
   *** writeRawMessageSetExtension(...);
   *** writeRawVarint32(...);
   *** writeRawVarint64(...);
   *** writeSFixed32(...);
   *** writeSFixed32NoTag(...);
   *** writeSFixed64(...);
   *** writeSFixed64NoTag(...);
   *** writeSInt32(...);
   *** writeSInt32NoTag(...);
   *** writeSInt64(...);
   *** writeSInt64NoTag(...);
   *** writeString(...);
   *** writeStringNoTag(...);
   *** writeTag(...);
   *** writeUInt32(...);
   *** writeUInt32NoTag(...);
   *** writeUInt64(...);
   *** writeUInt64NoTag(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.CodedOutputStream
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.CodedOutputStream {
   *** getTotalBytesWritten(...);
   *** flush(...);
   *** spaceLeft(...);
   *** writeBool(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteBuffer(...);
   *** writeBytes(...);
   *** writeBytesNoTag(...);
   *** writeFixed32(...);
   *** writeFixed32NoTag(...);
   *** writeFixed64(...);
   *** writeFixed64NoTag(...);
   *** writeInt32(...);
   *** writeInt32NoTag(...);
   *** writeMessage(...);
   *** writeMessageNoTag(...);
   *** writeMessageSetExtension(...);
   *** writeRawBytes(...);
   *** writeRawMessageSetExtension(...);
   *** writeString(...);
   *** writeStringNoTag(...);
   *** writeTag(...);
   *** writeUInt32(...);
   *** writeUInt32NoTag(...);
   *** writeUInt64(...);
   *** writeUInt64NoTag(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.DoubleValue$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.DoubleValue$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.DoubleValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.DoubleValue {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Duration$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Duration$Builder {
   *** getNanos(...);
   *** getSeconds(...);
   *** clearNanos(...);
   *** clearSeconds(...);
   *** setNanos(...);
   *** setSeconds(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Duration
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Duration {
   *** getDefaultInstance(...);
   *** getNanos(...);
   *** getSeconds(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.DurationProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.DurationProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Empty$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Empty$Builder {
}

-keep class com.google.crypto.tink.shaded.protobuf.Empty
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Empty {
   *** getDefaultInstance(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.EmptyProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.EmptyProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Enum$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Enum$Builder {
   *** getEdition(...);
   *** getEditionBytes(...);
   *** getEnumvalueCount(...);
   *** getEnumvalueList(...);
   *** hasSourceContext(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getSourceContext(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** addAllEnumvalue(...);
   *** addAllOptions(...);
   *** addEnumvalue(...);
   *** addEnumvalue(...);
   *** addEnumvalue(...);
   *** addEnumvalue(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** clearEdition(...);
   *** clearEnumvalue(...);
   *** clearName(...);
   *** clearOptions(...);
   *** clearSourceContext(...);
   *** clearSyntax(...);
   *** getEnumvalue(...);
   *** getOptions(...);
   *** mergeSourceContext(...);
   *** removeEnumvalue(...);
   *** removeOptions(...);
   *** setEdition(...);
   *** setEditionBytes(...);
   *** setEnumvalue(...);
   *** setEnumvalue(...);
   *** setName(...);
   *** setNameBytes(...);
   *** setOptions(...);
   *** setOptions(...);
   *** setSourceContext(...);
   *** setSourceContext(...);
   *** setSyntax(...);
   *** setSyntaxValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Enum
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Enum {
   *** getDefaultInstance(...);
   *** getEdition(...);
   *** getEditionBytes(...);
   *** getEnumvalueCount(...);
   *** getEnumvalueList(...);
   *** getEnumvalueOrBuilderList(...);
   *** hasSourceContext(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getOptionsOrBuilderList(...);
   *** getSourceContext(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** dynamicMethod(...);
   *** getEnumvalue(...);
   *** getEnumvalueOrBuilder(...);
   *** getOptions(...);
   *** getOptionsOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.EnumValue$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.EnumValue$Builder {
   *** getName(...);
   *** getNameBytes(...);
   *** getNumber(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** addAllOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** clearName(...);
   *** clearNumber(...);
   *** clearOptions(...);
   *** getOptions(...);
   *** removeOptions(...);
   *** setName(...);
   *** setNameBytes(...);
   *** setNumber(...);
   *** setOptions(...);
   *** setOptions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.EnumValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.EnumValue {
   *** getDefaultInstance(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getNumber(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getOptionsOrBuilderList(...);
   *** dynamicMethod(...);
   *** getOptions(...);
   *** getOptionsOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ExtensionLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ExtensionLite {
   <init>(...);
   *** isRepeated(...);
   *** getLiteType(...);
   *** getMessageDefaultInstance(...);
   *** getNumber(...);
   *** getDefaultValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ExtensionLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ExtensionLite {
   *** isRepeated(...);
   *** getLiteType(...);
   *** getMessageDefaultInstance(...);
   *** getNumber(...);
   *** getDefaultValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ExtensionRegistryLite {
   *** isEagerlyParseMessageSets(...);
   *** setEagerlyParseMessageSets(...);
   *** getEmptyRegistry(...);
   *** getUnmodifiable(...);
   *** add(...);
   *** add(...);
   *** findLiteExtensionByNumber(...);
   *** newInstance(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.FieldMask$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FieldMask$Builder {
   *** getPathsCount(...);
   *** getPathsList(...);
   *** addAllPaths(...);
   *** addPaths(...);
   *** addPathsBytes(...);
   *** clearPaths(...);
   *** getPaths(...);
   *** getPathsBytes(...);
   *** setPaths(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.FieldMask
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FieldMask {
   *** getDefaultInstance(...);
   *** getPathsCount(...);
   *** getPathsList(...);
   *** dynamicMethod(...);
   *** getPaths(...);
   *** getPathsBytes(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.FieldMaskProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FieldMaskProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.FieldSet$FieldDescriptorLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FieldSet$FieldDescriptorLite {
}

-keep class com.google.crypto.tink.shaded.protobuf.FieldSet
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FieldSet {
   *** isImmutable(...);
   *** isInitialized(...);
   *** getMessageSetSerializedSize(...);
   *** getSerializedSize(...);
   *** clear(...);
   *** clone(...);
   *** computeFieldSize(...);
   *** emptySet(...);
   *** iterator(...);
   *** makeImmutable(...);
   *** newBuilder(...);
   *** newFieldSet(...);
   *** readPrimitiveField(...);
   *** writeField(...);
   *** writeMessageSetTo(...);
   *** writeTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.FieldType
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FieldType {
   *** isList(...);
   *** isMap(...);
   *** isPacked(...);
   *** isPrimitiveScalar(...);
   *** isScalar(...);
   *** getJavaType(...);
   *** forId(...);
   *** id(...);
   *** isValidForField(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.FloatValue$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FloatValue$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.FloatValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FloatValue {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$Builder {
   <init>(...);
   *** getDefaultInstanceForType(...);
   *** isInitialized(...);
   *** build(...);
   *** buildPartial(...);
   *** clear(...);
   *** clone(...);
   *** copyOnWrite(...);
   *** copyOnWriteInternal(...);
   *** internalMergeFrom(...);
   *** mergeFrom(...);
   *** mergeFrom(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$DefaultInstanceBasedParser {
   <init>(...);
   *** parsePartialFrom(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableBuilder {
   <init>(...);
   *** addExtension(...);
   *** buildPartial(...);
   *** clearExtension(...);
   *** getExtension(...);
   *** getExtension(...);
   *** getExtensionCount(...);
   *** hasExtension(...);
   *** setExtension(...);
   *** setExtension(...);
   *** clear(...);
   *** build(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableBuilder {
   *** clear(...);
   *** build(...);
   *** clone(...);
   *** internalMergeFrom(...);
   *** mergeFrom(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter {
   *** writeUntil(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage {
   <init>(...);
   *** extensionsAreInitialized(...);
   *** extensionsSerializedSize(...);
   *** extensionsSerializedSizeAsMessageSet(...);
   *** getExtension(...);
   *** getExtension(...);
   *** getExtensionCount(...);
   *** hasExtension(...);
   *** mergeExtensionFields(...);
   *** newExtensionWriter(...);
   *** newMessageSetExtensionWriter(...);
   *** parseUnknownField(...);
   *** parseUnknownFieldAsMessageSet(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessage {
   *** dynamicMethod(...);
   *** newBuilderForType(...);
   *** toBuilder(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessageOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$ExtendableMessageOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$GeneratedExtension
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$GeneratedExtension {
   *** getContainingTypeDefaultInstance(...);
   *** isRepeated(...);
   *** getLiteType(...);
   *** getMessageDefaultInstance(...);
   *** getNumber(...);
   *** getDefaultValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$MethodToInvoke {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$SerializedForm
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite$SerializedForm {
   *** of(...);
   *** readResolve(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite {
   <init>(...);
   *** getDefaultInstanceForType(...);
   *** isInitialized(...);
   *** getParserForType(...);
   *** getSerializedSize(...);
   *** createBuilder(...);
   *** createBuilder(...);
   *** dynamicMethod(...);
   *** dynamicMethod(...);
   *** dynamicMethod(...);
   *** emptyBooleanList(...);
   *** emptyDoubleList(...);
   *** emptyFloatList(...);
   *** emptyIntList(...);
   *** emptyLongList(...);
   *** emptyProtobufList(...);
   *** isInitialized(...);
   *** makeImmutable(...);
   *** mergeLengthDelimitedField(...);
   *** mergeUnknownFields(...);
   *** mergeVarintField(...);
   *** mutableCopy(...);
   *** mutableCopy(...);
   *** mutableCopy(...);
   *** mutableCopy(...);
   *** mutableCopy(...);
   *** mutableCopy(...);
   *** newBuilderForType(...);
   *** newMessageInfo(...);
   *** newRepeatedGeneratedExtension(...);
   *** newSingularGeneratedExtension(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parsePartialFrom(...);
   *** parseUnknownField(...);
   *** registerDefaultInstance(...);
   *** toBuilder(...);
   *** writeTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.GeneratedMessageLite {
   *** dynamicMethod(...);
   *** newBuilderForType(...);
   *** toBuilder(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.AnyOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.AnyOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.ApiOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ApiOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.BoolValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.BoolValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.BytesValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.BytesValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.DoubleValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.DoubleValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.DurationOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.DurationOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.EmptyOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.EmptyOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.EnumOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.EnumOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.EnumValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.EnumValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.ExperimentalApi
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ExperimentalApi {
}

-keep class com.google.crypto.tink.shaded.protobuf.FieldMaskOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FieldMaskOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.FloatValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.FloatValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.Int32ValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Int32ValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.Int64ValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Int64ValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.LazyStringList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.LazyStringList {
}

-keep class com.google.crypto.tink.shaded.protobuf.ListValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ListValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.MessageLite$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.MessageLite$Builder {
}

-keep class com.google.crypto.tink.shaded.protobuf.MessageLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.MessageLite {
}

-keep class com.google.crypto.tink.shaded.protobuf.MessageLiteOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.MessageLiteOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.MethodOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.MethodOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.MixinOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.MixinOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.Int32Value$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Int32Value$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Int32Value
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Int32Value {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Int64Value$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Int64Value$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Int64Value
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Int64Value {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException$InvalidWireTypeException
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException$InvalidWireTypeException {
   <init>(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.InvalidProtocolBufferException {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getUnfinishedMessage(...);
   *** setUnfinishedMessage(...);
   *** unwrapIOException(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.OptionOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.OptionOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.Parser
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Parser {
}

-keep class com.google.crypto.tink.shaded.protobuf.ProtocolStringList
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ProtocolStringList {
}

-keep class com.google.crypto.tink.shaded.protobuf.SourceContextOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.SourceContextOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.StringValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.StringValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.StructOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.StructOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.TimestampOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.TimestampOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.UInt32ValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UInt32ValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.UInt64ValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UInt64ValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.ValueOrBuilder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ValueOrBuilder {
}

-keep class com.google.crypto.tink.shaded.protobuf.JavaType
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.JavaType {
   *** getBoxedType(...);
   *** getDefaultDefault(...);
   *** getType(...);
   *** isValidType(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.LazyField
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.LazyField {
   <init>(...);
   *** getValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.LazyFieldLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.LazyFieldLite {
   <init>(...);
   <init>(...);
   *** getSerializedSize(...);
   *** clear(...);
   *** containsDefaultInstance(...);
   *** ensureInitialized(...);
   *** fromValue(...);
   *** getValue(...);
   *** merge(...);
   *** mergeFrom(...);
   *** set(...);
   *** setByteString(...);
   *** setValue(...);
   *** toByteString(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ListValue$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ListValue$Builder {
   *** getValuesCount(...);
   *** getValuesList(...);
   *** addAllValues(...);
   *** addValues(...);
   *** addValues(...);
   *** addValues(...);
   *** addValues(...);
   *** clearValues(...);
   *** getValues(...);
   *** removeValues(...);
   *** setValues(...);
   *** setValues(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ListValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ListValue {
   *** getDefaultInstance(...);
   *** getValuesCount(...);
   *** getValuesList(...);
   *** getValuesOrBuilderList(...);
   *** dynamicMethod(...);
   *** getValues(...);
   *** getValuesOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.MapEntryLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.MapEntryLite {
   *** getKey(...);
   *** getValue(...);
   *** computeMessageSize(...);
   *** newDefaultInstance(...);
   *** parseEntry(...);
   *** parseInto(...);
   *** serializeTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Method$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Method$Builder {
   *** getName(...);
   *** getNameBytes(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getRequestStreaming(...);
   *** getRequestTypeUrl(...);
   *** getRequestTypeUrlBytes(...);
   *** getResponseStreaming(...);
   *** getResponseTypeUrl(...);
   *** getResponseTypeUrlBytes(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** addAllOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** clearName(...);
   *** clearOptions(...);
   *** clearRequestStreaming(...);
   *** clearRequestTypeUrl(...);
   *** clearResponseStreaming(...);
   *** clearResponseTypeUrl(...);
   *** clearSyntax(...);
   *** getOptions(...);
   *** removeOptions(...);
   *** setName(...);
   *** setNameBytes(...);
   *** setOptions(...);
   *** setOptions(...);
   *** setRequestStreaming(...);
   *** setRequestTypeUrl(...);
   *** setRequestTypeUrlBytes(...);
   *** setResponseStreaming(...);
   *** setResponseTypeUrl(...);
   *** setResponseTypeUrlBytes(...);
   *** setSyntax(...);
   *** setSyntaxValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Method
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Method {
   *** getDefaultInstance(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getOptionsOrBuilderList(...);
   *** getRequestStreaming(...);
   *** getRequestTypeUrl(...);
   *** getRequestTypeUrlBytes(...);
   *** getResponseStreaming(...);
   *** getResponseTypeUrl(...);
   *** getResponseTypeUrlBytes(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** dynamicMethod(...);
   *** getOptions(...);
   *** getOptionsOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Mixin$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Mixin$Builder {
   *** getName(...);
   *** getNameBytes(...);
   *** getRoot(...);
   *** getRootBytes(...);
   *** clearName(...);
   *** clearRoot(...);
   *** setName(...);
   *** setNameBytes(...);
   *** setRoot(...);
   *** setRootBytes(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Mixin
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Mixin {
   *** getDefaultInstance(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getRoot(...);
   *** getRootBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.NullValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.NullValue {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Option$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Option$Builder {
   *** hasValue(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getValue(...);
   *** clearName(...);
   *** clearValue(...);
   *** mergeValue(...);
   *** setName(...);
   *** setNameBytes(...);
   *** setValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Option
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Option {
   *** getDefaultInstance(...);
   *** hasValue(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.ProtoSyntax
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.ProtoSyntax {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.SourceContext$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.SourceContext$Builder {
   *** getFileName(...);
   *** getFileNameBytes(...);
   *** clearFileName(...);
   *** setFileName(...);
   *** setFileNameBytes(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.SourceContext
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.SourceContext {
   *** getDefaultInstance(...);
   *** getFileName(...);
   *** getFileNameBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.SourceContextProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.SourceContextProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.StringValue$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.StringValue$Builder {
   *** getValue(...);
   *** getValueBytes(...);
   *** clearValue(...);
   *** setValue(...);
   *** setValueBytes(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.StringValue
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.StringValue {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** getValueBytes(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Struct$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Struct$Builder {
   *** getFields(...);
   *** getFieldsCount(...);
   *** getFieldsMap(...);
   *** clearFields(...);
   *** containsFields(...);
   *** getFieldsOrDefault(...);
   *** getFieldsOrThrow(...);
   *** putAllFields(...);
   *** putFields(...);
   *** removeFields(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Struct
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Struct {
   *** getDefaultInstance(...);
   *** getFields(...);
   *** getFieldsCount(...);
   *** getFieldsMap(...);
   *** containsFields(...);
   *** dynamicMethod(...);
   *** getFieldsOrDefault(...);
   *** getFieldsOrThrow(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.StructProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.StructProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Syntax
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Syntax {
   *** getNumber(...);
   *** forNumber(...);
   *** internalGetValueMap(...);
   *** internalGetVerifier(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Timestamp$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Timestamp$Builder {
   *** getNanos(...);
   *** getSeconds(...);
   *** clearNanos(...);
   *** clearSeconds(...);
   *** setNanos(...);
   *** setSeconds(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Timestamp
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Timestamp {
   *** getDefaultInstance(...);
   *** getNanos(...);
   *** getSeconds(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.TimestampProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.TimestampProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Type$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Type$Builder {
   *** getEdition(...);
   *** getEditionBytes(...);
   *** getFieldsCount(...);
   *** hasSourceContext(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getOneofsCount(...);
   *** getOneofsList(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getSourceContext(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** addAllFields(...);
   *** addAllOneofs(...);
   *** addAllOptions(...);
   *** addOneofs(...);
   *** addOneofsBytes(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** addOptions(...);
   *** clearEdition(...);
   *** clearFields(...);
   *** clearName(...);
   *** clearOneofs(...);
   *** clearOptions(...);
   *** clearSourceContext(...);
   *** clearSyntax(...);
   *** getOneofs(...);
   *** getOneofsBytes(...);
   *** getOptions(...);
   *** mergeSourceContext(...);
   *** removeFields(...);
   *** removeOptions(...);
   *** setEdition(...);
   *** setEditionBytes(...);
   *** setName(...);
   *** setNameBytes(...);
   *** setOneofs(...);
   *** setOptions(...);
   *** setOptions(...);
   *** setSourceContext(...);
   *** setSourceContext(...);
   *** setSyntax(...);
   *** setSyntaxValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Type
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Type {
   *** getDefaultInstance(...);
   *** getEdition(...);
   *** getEditionBytes(...);
   *** getFieldsCount(...);
   *** hasSourceContext(...);
   *** getName(...);
   *** getNameBytes(...);
   *** getOneofsCount(...);
   *** getOneofsList(...);
   *** getOptionsCount(...);
   *** getOptionsList(...);
   *** getOptionsOrBuilderList(...);
   *** getSourceContext(...);
   *** getSyntax(...);
   *** getSyntaxValue(...);
   *** dynamicMethod(...);
   *** getOneofs(...);
   *** getOneofsBytes(...);
   *** getOptions(...);
   *** getOptionsOrBuilder(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.TypeProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.TypeProto {
   *** registerAllExtensions(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UInt32Value$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UInt32Value$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UInt32Value
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UInt32Value {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UInt64Value$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UInt64Value$Builder {
   *** getValue(...);
   *** clearValue(...);
   *** setValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UInt64Value
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UInt64Value {
   *** getDefaultInstance(...);
   *** getValue(...);
   *** dynamicMethod(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** of(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UninitializedMessageException
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UninitializedMessageException {
   <init>(...);
   <init>(...);
   *** getMissingFields(...);
   *** asInvalidProtocolBufferException(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UnknownFieldSetLite
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UnknownFieldSetLite {
   *** getDefaultInstance(...);
   *** getSerializedSize(...);
   *** getSerializedSizeAsMessageSet(...);
   *** makeImmutable(...);
   *** writeAsMessageSetTo(...);
   *** writeTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.UnsafeByteOperations
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.UnsafeByteOperations {
   *** unsafeWrap(...);
   *** unsafeWrap(...);
   *** unsafeWrap(...);
   *** unsafeWriteTo(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Value$Builder
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Value$Builder {
   *** getBoolValue(...);
   *** hasBoolValue(...);
   *** hasListValue(...);
   *** hasNullValue(...);
   *** hasNumberValue(...);
   *** hasStringValue(...);
   *** hasStructValue(...);
   *** getListValue(...);
   *** getNullValue(...);
   *** getNullValueValue(...);
   *** getNumberValue(...);
   *** getStringValue(...);
   *** getStringValueBytes(...);
   *** getStructValue(...);
   *** clearBoolValue(...);
   *** clearKind(...);
   *** clearListValue(...);
   *** clearNullValue(...);
   *** clearNumberValue(...);
   *** clearStringValue(...);
   *** clearStructValue(...);
   *** getKindCase(...);
   *** mergeListValue(...);
   *** mergeStructValue(...);
   *** setBoolValue(...);
   *** setListValue(...);
   *** setListValue(...);
   *** setNullValue(...);
   *** setNullValueValue(...);
   *** setNumberValue(...);
   *** setStringValue(...);
   *** setStringValueBytes(...);
   *** setStructValue(...);
   *** setStructValue(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Value$KindCase
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Value$KindCase {
   *** getNumber(...);
   *** forNumber(...);
   *** valueOf(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.Value
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.Value {
   *** getBoolValue(...);
   *** getDefaultInstance(...);
   *** hasBoolValue(...);
   *** hasListValue(...);
   *** hasNullValue(...);
   *** hasNumberValue(...);
   *** hasStringValue(...);
   *** hasStructValue(...);
   *** getListValue(...);
   *** getNullValue(...);
   *** getNullValueValue(...);
   *** getNumberValue(...);
   *** getStringValue(...);
   *** getStringValueBytes(...);
   *** getStructValue(...);
   *** dynamicMethod(...);
   *** getKindCase(...);
   *** newBuilder(...);
   *** newBuilder(...);
   *** parseDelimitedFrom(...);
   *** parseDelimitedFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parseFrom(...);
   *** parser(...);
   *** toBuilder(...);
   *** newBuilderForType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.WireFormat$FieldType {
   *** isPackable(...);
   *** getJavaType(...);
   *** getWireType(...);
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.WireFormat$JavaType {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.WireFormat
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.WireFormat {
   *** getTagFieldNumber(...);
   *** getTagWireType(...);
}

-keep class com.google.crypto.tink.shaded.protobuf.WrappersProto
-keepclassmembers class com.google.crypto.tink.shaded.protobuf.WrappersProto {
   *** registerAllExtensions(...);
}

# ACW for Xamarin.Google.ErrorProne.Annotations
-keep class com.google.errorprone.annotations.CanIgnoreReturnValue
-keepclassmembers class com.google.errorprone.annotations.CanIgnoreReturnValue {
}

-keep class com.google.errorprone.annotations.CheckReturnValue
-keepclassmembers class com.google.errorprone.annotations.CheckReturnValue {
}

-keep class com.google.errorprone.annotations.CompatibleWith
-keepclassmembers class com.google.errorprone.annotations.CompatibleWith {
}

-keep class com.google.errorprone.annotations.CompileTimeConstant
-keepclassmembers class com.google.errorprone.annotations.CompileTimeConstant {
}

-keep class com.google.errorprone.annotations.DoNotCall
-keepclassmembers class com.google.errorprone.annotations.DoNotCall {
}

-keep class com.google.errorprone.annotations.DoNotMock
-keepclassmembers class com.google.errorprone.annotations.DoNotMock {
}

-keep class com.google.errorprone.annotations.FormatMethod
-keepclassmembers class com.google.errorprone.annotations.FormatMethod {
}

-keep class com.google.errorprone.annotations.FormatString
-keepclassmembers class com.google.errorprone.annotations.FormatString {
}

-keep class com.google.errorprone.annotations.ForOverride
-keepclassmembers class com.google.errorprone.annotations.ForOverride {
}

-keep class com.google.errorprone.annotations.Immutable
-keepclassmembers class com.google.errorprone.annotations.Immutable {
}

-keep class com.google.errorprone.annotations.IncompatibleModifiers
-keepclassmembers class com.google.errorprone.annotations.IncompatibleModifiers {
}

-keep class com.google.errorprone.annotations.InlineMe
-keepclassmembers class com.google.errorprone.annotations.InlineMe {
}

-keep class com.google.errorprone.annotations.InlineMeValidationDisabled
-keepclassmembers class com.google.errorprone.annotations.InlineMeValidationDisabled {
}

-keep class com.google.errorprone.annotations.Keep
-keepclassmembers class com.google.errorprone.annotations.Keep {
}

-keep class com.google.errorprone.annotations.MustBeClosed
-keepclassmembers class com.google.errorprone.annotations.MustBeClosed {
}

-keep class com.google.errorprone.annotations.NoAllocation
-keepclassmembers class com.google.errorprone.annotations.NoAllocation {
}

-keep class com.google.errorprone.annotations.OverridingMethodsMustInvokeSuper
-keepclassmembers class com.google.errorprone.annotations.OverridingMethodsMustInvokeSuper {
}

-keep class com.google.errorprone.annotations.RequiredModifiers
-keepclassmembers class com.google.errorprone.annotations.RequiredModifiers {
}

-keep class com.google.errorprone.annotations.RestrictedApi
-keepclassmembers class com.google.errorprone.annotations.RestrictedApi {
}

-keep class com.google.errorprone.annotations.SuppressPackageLocation
-keepclassmembers class com.google.errorprone.annotations.SuppressPackageLocation {
}

-keep class com.google.errorprone.annotations.ThreadSafe
-keepclassmembers class com.google.errorprone.annotations.ThreadSafe {
}

-keep class com.google.errorprone.annotations.Var
-keepclassmembers class com.google.errorprone.annotations.Var {
}

-keep class com.google.errorprone.annotations.Modifier
-keepclassmembers class com.google.errorprone.annotations.Modifier {
   *** valueOf(...);
   *** values(...);
}

-keep class com.google.errorprone.annotations.concurrent.GuardedBy
-keepclassmembers class com.google.errorprone.annotations.concurrent.GuardedBy {
}

-keep class com.google.errorprone.annotations.concurrent.LazyInit
-keepclassmembers class com.google.errorprone.annotations.concurrent.LazyInit {
}

-keep class com.google.errorprone.annotations.concurrent.LockMethod
-keepclassmembers class com.google.errorprone.annotations.concurrent.LockMethod {
}

-keep class com.google.errorprone.annotations.concurrent.UnlockMethod
-keepclassmembers class com.google.errorprone.annotations.concurrent.UnlockMethod {
}

# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.Jetbrains.Annotations
-keep class org.jetbrains.annotations.ApiStatus$AvailableSince
-keepclassmembers class org.jetbrains.annotations.ApiStatus$AvailableSince {
}

-keep class org.jetbrains.annotations.ApiStatus$Experimental
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Experimental {
}

-keep class org.jetbrains.annotations.ApiStatus$Internal
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Internal {
}

-keep class org.jetbrains.annotations.ApiStatus$NonExtendable
-keepclassmembers class org.jetbrains.annotations.ApiStatus$NonExtendable {
}

-keep class org.jetbrains.annotations.ApiStatus$Obsolete
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Obsolete {
}

-keep class org.jetbrains.annotations.ApiStatus$OverrideOnly
-keepclassmembers class org.jetbrains.annotations.ApiStatus$OverrideOnly {
}

-keep class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval
-keepclassmembers class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval {
}

-keep class org.jetbrains.annotations.ApiStatus
-keepclassmembers class org.jetbrains.annotations.ApiStatus {
}

-keep class org.jetbrains.annotations.Async$Execute
-keepclassmembers class org.jetbrains.annotations.Async$Execute {
}

-keep class org.jetbrains.annotations.Async$Schedule
-keepclassmembers class org.jetbrains.annotations.Async$Schedule {
}

-keep class org.jetbrains.annotations.Async
-keepclassmembers class org.jetbrains.annotations.Async {
}

-keep class org.jetbrains.annotations.Debug$Renderer
-keepclassmembers class org.jetbrains.annotations.Debug$Renderer {
}

-keep class org.jetbrains.annotations.Debug
-keepclassmembers class org.jetbrains.annotations.Debug {
}

-keep class org.jetbrains.annotations.Blocking
-keepclassmembers class org.jetbrains.annotations.Blocking {
}

-keep class org.jetbrains.annotations.BlockingExecutor
-keepclassmembers class org.jetbrains.annotations.BlockingExecutor {
}

-keep class org.jetbrains.annotations.CheckReturnValue
-keepclassmembers class org.jetbrains.annotations.CheckReturnValue {
}

-keep class org.jetbrains.annotations.Contract
-keepclassmembers class org.jetbrains.annotations.Contract {
}

-keep class org.jetbrains.annotations.MustBeInvokedByOverriders
-keepclassmembers class org.jetbrains.annotations.MustBeInvokedByOverriders {
}

-keep class org.jetbrains.annotations.Nls$Capitalization
-keepclassmembers class org.jetbrains.annotations.Nls$Capitalization {
   *** valueOf(...);
   *** values(...);
}

-keep class org.jetbrains.annotations.Nls
-keepclassmembers class org.jetbrains.annotations.Nls {
}

-keep class org.jetbrains.annotations.NonBlocking
-keepclassmembers class org.jetbrains.annotations.NonBlocking {
}

-keep class org.jetbrains.annotations.NonBlockingExecutor
-keepclassmembers class org.jetbrains.annotations.NonBlockingExecutor {
}

-keep class org.jetbrains.annotations.NonNls
-keepclassmembers class org.jetbrains.annotations.NonNls {
}

-keep class org.jetbrains.annotations.NotNull
-keepclassmembers class org.jetbrains.annotations.NotNull {
}

-keep class org.jetbrains.annotations.Nullable
-keepclassmembers class org.jetbrains.annotations.Nullable {
}

-keep class org.jetbrains.annotations.PropertyKey
-keepclassmembers class org.jetbrains.annotations.PropertyKey {
}

-keep class org.jetbrains.annotations.Range
-keepclassmembers class org.jetbrains.annotations.Range {
}

-keep class org.jetbrains.annotations.TestOnly
-keepclassmembers class org.jetbrains.annotations.TestOnly {
}

-keep class org.jetbrains.annotations.UnknownNullability
-keepclassmembers class org.jetbrains.annotations.UnknownNullability {
}

-keep class org.jetbrains.annotations.Unmodifiable
-keepclassmembers class org.jetbrains.annotations.Unmodifiable {
}

-keep class org.jetbrains.annotations.UnmodifiableView
-keepclassmembers class org.jetbrains.annotations.UnmodifiableView {
}

-keep class org.jetbrains.annotations.VisibleForTesting
-keepclassmembers class org.jetbrains.annotations.VisibleForTesting {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Identifier
-keepclassmembers class org.intellij.lang.annotations.Identifier {
}

-keep class org.intellij.lang.annotations.Language
-keepclassmembers class org.intellij.lang.annotations.Language {
}

-keep class org.intellij.lang.annotations.MagicConstant
-keepclassmembers class org.intellij.lang.annotations.MagicConstant {
}

-keep class org.intellij.lang.annotations.Pattern
-keepclassmembers class org.intellij.lang.annotations.Pattern {
}

-keep class org.intellij.lang.annotations.PrintFormat
-keepclassmembers class org.intellij.lang.annotations.PrintFormat {
}

-keep class org.intellij.lang.annotations.RegExp
-keepclassmembers class org.intellij.lang.annotations.RegExp {
}

-keep class org.intellij.lang.annotations.Subst
-keepclassmembers class org.intellij.lang.annotations.Subst {
}

-keep class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation {
}

-keep class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis {
}

-keep class org.intellij.lang.annotations.JdkConstants$CalendarMonth
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CalendarMonth {
}

-keep class org.intellij.lang.annotations.JdkConstants$CursorType
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CursorType {
}

-keep class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$FontStyle
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FontStyle {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$InputEventMask
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$InputEventMask {
}

-keep class org.intellij.lang.annotations.JdkConstants$ListSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$ListSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$PatternFlags
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$PatternFlags {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabPlacement
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabPlacement {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition {
}

-keep class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants
-keepclassmembers class org.intellij.lang.annotations.JdkConstants {
}

# ACW for Xamarin.Kotlin.StdLib
-keep class kotlin.Function
-keepclassmembers class kotlin.Function {
}

-keep class kotlin.sequences.Sequence
-keepclassmembers class kotlin.sequences.Sequence {
}

-keep class kotlin.reflect.KAnnotatedElement
-keepclassmembers class kotlin.reflect.KAnnotatedElement {
}

-keep class kotlin.reflect.KCallable
-keepclassmembers class kotlin.reflect.KCallable {
}

-keep class kotlin.reflect.KClass
-keepclassmembers class kotlin.reflect.KClass {
}

-keep class kotlin.reflect.KClassifier
-keepclassmembers class kotlin.reflect.KClassifier {
}

-keep class kotlin.reflect.KDeclarationContainer
-keepclassmembers class kotlin.reflect.KDeclarationContainer {
}

-keep class kotlin.reflect.KFunction
-keepclassmembers class kotlin.reflect.KFunction {
}

-keep class kotlin.reflect.KParameter$Kind
-keepclassmembers class kotlin.reflect.KParameter$Kind {
   *** getEntries(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KParameter
-keepclassmembers class kotlin.reflect.KParameter {
}

-keep class kotlin.reflect.KType
-keepclassmembers class kotlin.reflect.KType {
}

-keep class kotlin.reflect.KTypeParameter
-keepclassmembers class kotlin.reflect.KTypeParameter {
}

-keep class kotlin.reflect.KTypeProjection$Companion
-keepclassmembers class kotlin.reflect.KTypeProjection$Companion {
   <init>(...);
   *** getSTAR(...);
   *** contravariant(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KTypeProjection
-keepclassmembers class kotlin.reflect.KTypeProjection {
   <init>(...);
   *** getType(...);
   *** getVariance(...);
   *** component1(...);
   *** component2(...);
   *** contravariant(...);
   *** copy(...);
   *** covariant(...);
   *** invariant(...);
}

-keep class kotlin.reflect.KVariance
-keepclassmembers class kotlin.reflect.KVariance {
   *** getEntries(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.reflect.KVisibility
-keepclassmembers class kotlin.reflect.KVisibility {
   *** getEntries(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlin.jvm.internal.DefaultConstructorMarker
-keepclassmembers class kotlin.jvm.internal.DefaultConstructorMarker {
}

-keep class kotlin.jvm.internal.markers.KMappedMarker
-keepclassmembers class kotlin.jvm.internal.markers.KMappedMarker {
}

-keep class kotlin.jvm.functions.Function0
-keepclassmembers class kotlin.jvm.functions.Function0 {
}

-keep class kotlin.jvm.functions.Function1
-keepclassmembers class kotlin.jvm.functions.Function1 {
}

-keep class kotlin.jvm.functions.Function2
-keepclassmembers class kotlin.jvm.functions.Function2 {
}

-keep class kotlin.enums.EnumEntries
-keepclassmembers class kotlin.enums.EnumEntries {
}

-keep class kotlin.coroutines.Continuation
-keepclassmembers class kotlin.coroutines.Continuation {
}

-keep class kotlin.coroutines.CoroutineContext$Key
-keepclassmembers class kotlin.coroutines.CoroutineContext$Key {
}

-keep class kotlin.coroutines.CoroutineContext
-keepclassmembers class kotlin.coroutines.CoroutineContext {
}

# ACW for Xamarin.KotlinX.AtomicFU.Jvm
-keep class kotlinx.atomicfu.AtomicArray
-keepclassmembers class kotlinx.atomicfu.AtomicArray {
   *** getSize(...);
   *** get(...);
}

-keep class kotlinx.atomicfu.AtomicBoolean
-keepclassmembers class kotlinx.atomicfu.AtomicBoolean {
   *** getTrace(...);
   *** getValue(...);
   *** setValue(...);
   *** compareAndSet(...);
   *** getAndSet(...);
   *** lazySet(...);
}

-keep class kotlinx.atomicfu.AtomicBooleanArray
-keepclassmembers class kotlinx.atomicfu.AtomicBooleanArray {
   <init>(...);
   *** getSize(...);
   *** get(...);
}

-keep class kotlinx.atomicfu.AtomicFU
-keepclassmembers class kotlinx.atomicfu.AtomicFU {
   *** atomic(...);
   *** atomic(...);
   *** atomic(...);
   *** atomic(...);
   *** atomic(...);
   *** atomic(...);
   *** atomic(...);
   *** atomic(...);
}

-keep class kotlinx.atomicfu.AtomicFU_commonKt
-keepclassmembers class kotlinx.atomicfu.AtomicFU_commonKt {
   *** atomicArrayOfNulls(...);
   *** getAndUpdate(...);
   *** getAndUpdate(...);
   *** getAndUpdate(...);
   *** getAndUpdate(...);
   *** loop(...);
   *** loop(...);
   *** loop(...);
   *** loop(...);
   *** update(...);
   *** update(...);
   *** update(...);
   *** update(...);
   *** updateAndGet(...);
   *** updateAndGet(...);
   *** updateAndGet(...);
   *** updateAndGet(...);
}

-keep class kotlinx.atomicfu.AtomicInt
-keepclassmembers class kotlinx.atomicfu.AtomicInt {
   *** getAndDecrement(...);
   *** getAndIncrement(...);
   *** getTrace(...);
   *** getValue(...);
   *** setValue(...);
   *** addAndGet(...);
   *** compareAndSet(...);
   *** decrementAndGet(...);
   *** getAndAdd(...);
   *** getAndSet(...);
   *** incrementAndGet(...);
   *** lazySet(...);
   *** minusAssign(...);
   *** plusAssign(...);
}

-keep class kotlinx.atomicfu.AtomicIntArray
-keepclassmembers class kotlinx.atomicfu.AtomicIntArray {
   <init>(...);
   *** getSize(...);
   *** get(...);
}

-keep class kotlinx.atomicfu.AtomicLong
-keepclassmembers class kotlinx.atomicfu.AtomicLong {
   *** getAndDecrement(...);
   *** getAndIncrement(...);
   *** getTrace(...);
   *** getValue(...);
   *** setValue(...);
   *** addAndGet(...);
   *** compareAndSet(...);
   *** decrementAndGet(...);
   *** getAndAdd(...);
   *** getAndSet(...);
   *** incrementAndGet(...);
   *** lazySet(...);
   *** minusAssign(...);
   *** plusAssign(...);
}

-keep class kotlinx.atomicfu.AtomicLongArray
-keepclassmembers class kotlinx.atomicfu.AtomicLongArray {
   <init>(...);
   *** getSize(...);
   *** get(...);
}

-keep class kotlinx.atomicfu.AtomicRef
-keepclassmembers class kotlinx.atomicfu.AtomicRef {
   *** getTrace(...);
   *** getValue(...);
   *** setValue(...);
   *** compareAndSet(...);
   *** getAndSet(...);
   *** lazySet(...);
}

-keep class kotlinx.atomicfu.MangledJsNamesKt
-keepclassmembers class kotlinx.atomicfu.MangledJsNamesKt {
}

-keep class kotlinx.atomicfu.TraceBase$None
-keepclassmembers class kotlinx.atomicfu.TraceBase$None {
}

-keep class kotlinx.atomicfu.TraceBase
-keepclassmembers class kotlinx.atomicfu.TraceBase {
   *** append(...);
   *** append(...);
   *** append(...);
   *** append(...);
}

-keep class kotlinx.atomicfu.TraceFormat
-keepclassmembers class kotlinx.atomicfu.TraceFormat {
   <init>(...);
   *** format(...);
}

-keep class kotlinx.atomicfu.TraceFormatKt
-keepclassmembers class kotlinx.atomicfu.TraceFormatKt {
}

-keep class kotlinx.atomicfu.TraceKt
-keepclassmembers class kotlinx.atomicfu.TraceKt {
   *** getTraceFormatDefault(...);
   *** Trace(...);
   *** named(...);
}

-keep class kotlinx.atomicfu.locks.SynchronizedKt
-keepclassmembers class kotlinx.atomicfu.locks.SynchronizedKt {
}

# ACW for Xamarin.KotlinX.Coroutines.Android
-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   <init>(...);
   *** delay(...);
   *** invokeOnTimeout(...);
   *** scheduleResumeAfterDelay(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   *** getImmediate(...);
   *** scheduleResumeAfterDelay(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcherKt
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcherKt {
   *** awaitFrame(...);
   *** from(...);
   *** from(...);
}

# ACW for Xamarin.KotlinX.Coroutines.Core.Jvm
-keep class kotlinx.coroutines.CoroutineScope
-keepclassmembers class kotlinx.coroutines.CoroutineScope {
}

-keep class kotlinx.coroutines.flow.Flow
-keepclassmembers class kotlinx.coroutines.flow.Flow {
}

-keep class kotlinx.coroutines.flow.FlowCollector
-keepclassmembers class kotlinx.coroutines.flow.FlowCollector {
}

-keep class kotlinx.coroutines.flow.SharedFlow
-keepclassmembers class kotlinx.coroutines.flow.SharedFlow {
}

-keep class kotlinx.coroutines.flow.StateFlow
-keepclassmembers class kotlinx.coroutines.flow.StateFlow {
}

# ACW for Xamarin.KotlinX.Serialization.Core.Jvm
-keep class kotlinx.serialization.DeserializationStrategy
-keepclassmembers class kotlinx.serialization.DeserializationStrategy {
}

-keep class kotlinx.serialization.KSerializer
-keepclassmembers class kotlinx.serialization.KSerializer {
}

-keep class kotlinx.serialization.SerializationStrategy
-keepclassmembers class kotlinx.serialization.SerializationStrategy {
}

-keep class kotlinx.serialization.encoding.CompositeDecoder$Companion
-keepclassmembers class kotlinx.serialization.encoding.CompositeDecoder$Companion {
}

-keep class kotlinx.serialization.encoding.CompositeDecoder
-keepclassmembers class kotlinx.serialization.encoding.CompositeDecoder {
}

-keep class kotlinx.serialization.encoding.CompositeEncoder
-keepclassmembers class kotlinx.serialization.encoding.CompositeEncoder {
}

-keep class kotlinx.serialization.encoding.Decoder
-keepclassmembers class kotlinx.serialization.encoding.Decoder {
}

-keep class kotlinx.serialization.encoding.Encoder
-keepclassmembers class kotlinx.serialization.encoding.Encoder {
}

-keep class kotlinx.serialization.descriptors.SerialDescriptor
-keepclassmembers class kotlinx.serialization.descriptors.SerialDescriptor {
}

-keep class kotlinx.serialization.descriptors.SerialKind
-keepclassmembers class kotlinx.serialization.descriptors.SerialKind {
   <init>(...);
}

-keep class kotlinx.serialization.descriptors.SerialKind
-keepclassmembers class kotlinx.serialization.descriptors.SerialKind {
}

# ACW for Mono.Android.Export
